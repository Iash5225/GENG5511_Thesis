(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    528212,      10142]
NotebookOptionsPosition[    517886,       9952]
NotebookOutlinePosition[    518322,       9969]
CellTagsIndexPosition[    518279,       9966]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["GENG5511/GENG5512 Research Project", "Title",
 CellChangeTimes->{{3.963602218535815*^9, 
  3.963602238089941*^9}},ExpressionUUID->"95dead33-71e1-487b-a85a-\
e2b819f7c1f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PacletInstall", "[", 
  "\"\<C:\\\\Users\\\\iashb\\\\OneDrive - UWA\\\\Noble gas solid \
EOS\\\\ThermoFAST64-paclet\\\\ThermoFAST64-paclet-barwood\\\\ThermoFAST64-2.2.\
0.1.paclet\>\"", "]"}]], "Input",
 CellChangeTimes->{3.967087857115*^9, 3.9670887943942013`*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"8847dca6-f7b0-ae44-96a6-b614bf860d23"],

Cell[BoxData[
 TemplateBox[{
  "PacletInstall", "samevers", 
   "\"A paclet named \
\\!\\(\\*RowBox[{\\\"\\\\\\\"ThermoFAST64\\\\\\\"\\\"}]\\) with the same \
version number (\\!\\(\\*RowBox[{\\\"\\\\\\\"2.2.0.1\\\\\\\"\\\"}]\\)) is \
already installed. Use PacletUninstall to remove the existing version first, \
or call PacletInstall with ForceVersionInstall -> True.\"", 2, 25, 7, 
   32239819776359770178, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.967088847204384*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"f516686a-9e63-2e4f-98ca-5abfa96bd002"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.9670877765928135`*^9, 3.9670878596479836`*^9, 
  3.9670888472289352`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"33ecb85b-2e23-0e47-b9b4-788515e38943"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\"\<C:\\\\Users\\\\iashb\\\\OneDrive - UWA\\\\Noble gas solid \
EOS\\\\ThermoFAST64-paclet\\\\ThermoFAST64-paclet-barwood\\\\ThermoFAST64-2.2.\
0.1.paclet\>\""], "Input",
 CellChangeTimes->{3.967087849745146*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"22f9a367-c913-ff49-9fc5-416c7a73af6e"],

Cell[BoxData["\<\"C:\\\\Users\\\\iashb\\\\OneDrive - UWA\\\\Noble gas solid \
EOS\\\\ThermoFAST64-paclet\\\\ThermoFAST64-paclet-barwood\\\\ThermoFAST64-2.2.\
0.1.paclet\"\>"], "Output",
 CellChangeTimes->{3.967088847330246*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"e235d70d-e8e7-724e-9cec-bf24f68c37d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"PacletObject", "[", "\"\<ThermoFAST64\>\"", "]"}]}]], "Input",
 CellLabel->"In[27]:=",ExpressionUUID->"cf702638-6cd2-f04f-a1f5-381c7c8cae49"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PacletObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                11.966367964725942`, {0., 11.966367964725942`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ThermoFAST64\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"2.2.0.1\"", "SummaryItem"]}]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ThermoFAST64\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"2.2.0.1\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"C:\\\\Users\\\\iashb\\\\AppData\\\\Roaming\\\\Mathematica\
\\\\Paclets\\\\Repository\\\\ThermoFAST64-2.2.0.1\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                  "\"A Wolfram Language interface for ThermoFAST, a \
thermodynamic property calculator.\"", Short], "SummaryItem"]}]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PacletObject[<|
   "Name" -> "ThermoFAST64", "Version" -> "2.2.0.1", 
    "SystemID" -> {"Windows-x86-64"}, "WolframVersion" -> "13+", "Creator" -> 
    "peter.falloon@uwa.edu.au", "Description" -> 
    "A Wolfram Language interface for ThermoFAST, a thermodynamic property \
calculator.", 
    "Extensions" -> {{
      "Kernel", "Root" -> "Kernel", "Context" -> "ThermoFAST64`"}, {
      "Asset", "Root" -> "Windows", "SystemID" -> "Windows-x86-64", 
       "Assets" -> {{"tf64_dll", "ThermoFAST64.dll"}}}}, "Location" -> 
    "C:\\Users\\iashb\\AppData\\Roaming\\Mathematica\\Paclets\\Repository\\\
ThermoFAST64-2.2.0.1"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.967087871694578*^9, 3.967088800382595*^9, 
  3.967088847446022*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"0e4ea476-edea-4441-9573-56059cb42bb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loading ThermoFAST", "Subsection",
 CellChangeTimes->{{3.9636023223073015`*^9, 
  3.963602329465525*^9}},ExpressionUUID->"830ef91b-5eac-4439-9ef5-\
fda98ffba99a"],

Cell[BoxData[
 RowBox[{"<<", "ThermoFAST64`"}]], "Input",
 CellChangeTimes->{{3.963602336651524*^9, 3.9636023632216425`*^9}, {
  3.963650320945345*^9, 3.963650321437561*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[28]:=",ExpressionUUID->"1197a7e5-8b0d-4b6d-bce7-10d28db014af"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neon", "Chapter",
 CellChangeTimes->{{3.9644934318527985`*^9, 
  3.9644934322480493`*^9}},ExpressionUUID->"c7c6b643-d558-4573-b898-\
9ae82a2744e1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TriplePointTemperature", " ", "=", " ", 
  "24.56"}], "\[IndentingNewLine]", 
 RowBox[{"TriplePointPressure", " ", "=", " ", "0.0433"}]}], "Input",
 CellChangeTimes->{{3.967087507783106*^9, 3.9670875351623383`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[29]:=",ExpressionUUID->"6c8298dd-9743-ff4a-99a9-f09b7560639b"],

Cell[BoxData["24.56`"], "Output",
 CellChangeTimes->{{3.9670876058278637`*^9, 3.967087630944626*^9}, 
   3.9670877489543552`*^9, 3.9670879047225857`*^9, 3.9670888498205585`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"ab7eaaac-608b-494c-b9a9-c91e55599231"],

Cell[BoxData["0.0433`"], "Output",
 CellChangeTimes->{{3.9670876058278637`*^9, 3.967087630944626*^9}, 
   3.9670877489543552`*^9, 3.9670879047225857`*^9, 3.9670888498334446`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"e62247c0-ac01-e84a-a26f-ffa0cd924853"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set up Feed", "Subsubsection",
 CellChangeTimes->{{3.963652450409743*^9, 3.963652453094388*^9}, {
  3.963655585533475*^9, 
  3.96365559073031*^9}},ExpressionUUID->"274738f4-7147-4f46-ade4-\
efcce1bfab2b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"feed", "=", 
    RowBox[{"FeedModel", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Neon\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"1", ",", "False"}], "}"}]}], "}"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"adjust", " ", "species", " ", "name"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.9579052602076015`*^9, 3.957905262297386*^9}, {
  3.9636105984331636`*^9, 3.963610604047813*^9}, {3.9636106394404974`*^9, 
  3.96361075054129*^9}, {3.963611622494367*^9, 3.963611622785097*^9}, {
  3.963652454621723*^9, 3.9636524606439705`*^9}, {3.9636525238606997`*^9, 
  3.963652526874334*^9}, {3.964511695400435*^9, 3.9645116956946745`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[31]:=",ExpressionUUID->"7547601f-5e24-2245-b512-bf443c7b2e49"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res", "=", 
  RowBox[{"FlashPTSolve", "[", 
   RowBox[{
   "feed", ",", "TriplePointPressure", ",", "TriplePointTemperature"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9670875916732025`*^9, 3.9670876032581234`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[32]:=",ExpressionUUID->"4a6e5848-2e40-9c43-9e91-1c7d6f5ef71e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["MultiphaseEquilibriumData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {14.108818359375, {0., 14.108818359375}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
             PlotRange -> {{0, 48.}, {0, 48.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Pure Vapour\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Phases: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Components: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
             PlotRange -> {{0, 48.}, {0, 48.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Pure Vapour\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Phases: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Components: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Vapour: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                   "Quantity"], "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ThermoFAST64`MultiphaseEquilibriumData[<|
   "Description" -> "Pure Vapour", 
    "Components" -> <|
     "Neon" -> <|
       "Id" -> 22, "Molar Fraction" -> Quantity[1, "Moles"/"Moles"], 
        "Can Form Solid" -> False|>|>, 
    "Phases" -> <|
     "Vapour" -> ThermoFAST64`PhaseData[<|
        "Components" -> {"Neon"}, "Molar Amount" -> Quantity[1., "Moles"], 
         "Mass Amount" -> Quantity[20.179, "Kilograms"], "Molar Mass" -> 
         Quantity[20.179, "Kilograms"/"Moles"], "Molar Density" -> 
         Quantity[218.3866320915985, "Meters"^(-3) "Moles"], "Mass Density" -> 
         Quantity[4406.823848976366, "Kilograms" "Meters"^(-3)], "Pressure" -> 
         Quantity[0.0433, "Megapascals"], "Temperature" -> 
         Quantity[24.56, "Kelvins"], "Volume" -> 
         Quantity[0.004579034854022417, "Meters"^3/"Moles"], "Entropy" -> 
         Quantity[69.26696109691167, "Joules" "Kelvins"^(-1)/"Moles"], 
         "Internal Energy" -> Quantity[1496.8072428589876`, "Joules"/"Moles"],
          "Helmholtz Energy" -> 
         Quantity[-204.38932168116298`, "Joules"/"Moles"], "Enthalpy" -> 
         Quantity[1695.0794520381587`, "Joules"/"Moles"], "Gibbs Energy" -> 
         Quantity[-6.117112501992316, "Joules"/"Moles"], 
         "Compressibility Factor" -> 0.9709557662962441, "Heat Capacity Cv" -> 
         Quantity[12.837823942265379`, "Joules" "Kelvins"^(-1)/"Moles"], 
         "Heat Capacity Cp" -> 
         Quantity[22.084164844506304`, "Joules" "Kelvins"^(-1)/"Moles"], 
         "Speed Of Sound" -> 
         Quantity[128.04433777792676`, "Meters"/"Seconds"], 
         "Joule-Thomson Coefficient" -> 
         Quantity[17.963323026422195`, "Kelvins"/"Megapascals"], 
         "Isothermal Throttling Coefficient" -> 
         Quantity[-0.00039670498687062466`, "Meters"^3/"Moles"], 
         "Isothermal Expansion Coefficient" -> 0.9699938634652826, 
         "Isentropic Expansion Coefficient" -> 1.6686242524639872`, 
         "Volume Expansivity" -> 
         Quantity[0.04424409877917824, "Kelvins"^(-1)], 
         "Isothermal Compressibility" -> 
         Quantity[23.809107553736183`, "Megapascals"^(-1)], 
         "Isentropic Compressibility" -> 
         Quantity[13.840556486941896`, "Megapascals"^(-1)], 
         "Grueneisen Parameter" -> 0.6628187267662349, "Lower Heating Value" -> 
         Quantity[0., "Kilojoules"/"Moles"], "Higher Heating Value" -> 
         Quantity[0., "Kilojoules"/"Moles"], "Wobbe Index" -> 
         Quantity[0., "Megajoules" "Meters"^(-3)], "Viscosity" -> 
         Quantity[3.854640223750258*^-6, "Pascals" "Seconds"], 
         "Thermal Conductivity" -> 
         Quantity[0.00637445217174319, "Kelvins"^(-1) "Meters"^(-1) "Watts"], 
         "Phase Identification Parameter" -> 0.9144183068102307, "Name" -> 
         "Vapour", "Phase Type" -> "Vapour", "Molar Fraction" -> {1.}, 
         "Fugacity" -> {
           Quantity[0.04208046235102215, "Megapascals"]}, 
         "Fugacity Coefficient" -> {0.9718351582222206}, 
         "Thermodynamic Factor" -> {{0.}}|>]|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9670876376147346`*^9, 3.9670877490217457`*^9, 3.967087934040077*^9, {
   3.9670888425973015`*^9, 3.967088850120775*^9}},
 CellLabel->"Out[32]=",ExpressionUUID->"829e5fe0-4429-134a-8a0e-29414824e353"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"phases", "=", 
  RowBox[{"res", "[", "\"\<Phases\>\"", "]"}]}]], "Input",
 CellChangeTimes->{3.967087928181669*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"00675b51-cfdf-8d4f-b248-7f66cdf6a126"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["PhaseData",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
                ImageSizeCache -> {14.108818359375, {0., 14.108818359375}}], 
               Appearance -> None, BaseStyle -> {}, 
               ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
                "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor,
                 ImageResolution -> {96, 96}], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], DefaultBaseStyle -> "ImageGraphics", 
              ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
              PlotRange -> {{0, 48.}, {0, 48.}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Phase: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Vapour\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Pure \"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Amount: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   
                   TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                    "Quantity"], "SummaryItem"]}]}}, AutoDelete -> False, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
           False, BaselinePosition -> {1, 1}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
         GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               Appearance -> None, BaseStyle -> {}, 
               ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
                "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor,
                 ImageResolution -> {96, 96}], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], DefaultBaseStyle -> "ImageGraphics", 
              ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
              PlotRange -> {{0, 48.}, {0, 48.}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Phase: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Vapour\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Pure \"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Amount: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   
                   TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                    "Quantity"], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Neon: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"1.`", 
                    
                    RowBox[{
                    "\"mol\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], "moles per mole", 
                    FractionBox["\"Moles\"", "\"Moles\""]}, "Quantity"], 
                   "SummaryItem"]}]}}, AutoDelete -> False, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
           False, BaselinePosition -> {1, 1}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   ThermoFAST64`PhaseData[<|
    "Components" -> {"Neon"}, "Molar Amount" -> Quantity[1., "Moles"], 
     "Mass Amount" -> Quantity[20.179, "Kilograms"], "Molar Mass" -> 
     Quantity[20.179, "Kilograms"/"Moles"], "Molar Density" -> 
     Quantity[218.3866320915985, "Meters"^(-3) "Moles"], "Mass Density" -> 
     Quantity[4406.823848976366, "Kilograms" "Meters"^(-3)], "Pressure" -> 
     Quantity[0.0433, "Megapascals"], "Temperature" -> 
     Quantity[24.56, "Kelvins"], "Volume" -> 
     Quantity[0.004579034854022417, "Meters"^3/"Moles"], "Entropy" -> 
     Quantity[69.26696109691167, "Joules" "Kelvins"^(-1)/"Moles"], 
     "Internal Energy" -> Quantity[1496.8072428589876`, "Joules"/"Moles"], 
     "Helmholtz Energy" -> Quantity[-204.38932168116298`, "Joules"/"Moles"], 
     "Enthalpy" -> Quantity[1695.0794520381587`, "Joules"/"Moles"], 
     "Gibbs Energy" -> Quantity[-6.117112501992316, "Joules"/"Moles"], 
     "Compressibility Factor" -> 0.9709557662962441, "Heat Capacity Cv" -> 
     Quantity[12.837823942265379`, "Joules" "Kelvins"^(-1)/"Moles"], 
     "Heat Capacity Cp" -> 
     Quantity[22.084164844506304`, "Joules" "Kelvins"^(-1)/"Moles"], 
     "Speed Of Sound" -> Quantity[128.04433777792676`, "Meters"/"Seconds"], 
     "Joule-Thomson Coefficient" -> 
     Quantity[17.963323026422195`, "Kelvins"/"Megapascals"], 
     "Isothermal Throttling Coefficient" -> 
     Quantity[-0.00039670498687062466`, "Meters"^3/"Moles"], 
     "Isothermal Expansion Coefficient" -> 0.9699938634652826, 
     "Isentropic Expansion Coefficient" -> 1.6686242524639872`, 
     "Volume Expansivity" -> Quantity[0.04424409877917824, "Kelvins"^(-1)], 
     "Isothermal Compressibility" -> 
     Quantity[23.809107553736183`, "Megapascals"^(-1)], 
     "Isentropic Compressibility" -> 
     Quantity[13.840556486941896`, "Megapascals"^(-1)], 
     "Grueneisen Parameter" -> 0.6628187267662349, "Lower Heating Value" -> 
     Quantity[0., "Kilojoules"/"Moles"], "Higher Heating Value" -> 
     Quantity[0., "Kilojoules"/"Moles"], "Wobbe Index" -> 
     Quantity[0., "Megajoules" "Meters"^(-3)], "Viscosity" -> 
     Quantity[3.854640223750258*^-6, "Pascals" "Seconds"], 
     "Thermal Conductivity" -> 
     Quantity[0.00637445217174319, "Kelvins"^(-1) "Meters"^(-1) "Watts"], 
     "Phase Identification Parameter" -> 0.9144183068102307, "Name" -> 
     "Vapour", "Phase Type" -> "Vapour", "Molar Fraction" -> {1.}, "Fugacity" -> {
       Quantity[0.04208046235102215, "Megapascals"]}, 
     "Fugacity Coefficient" -> {0.9718351582222206}, 
     "Thermodynamic Factor" -> {{0.}}|>],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{{3.967087930035406*^9, 3.967087936560137*^9}, 
   3.9670888501908855`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"63b1bc93-5443-d048-a9b4-d9ed9aebe2a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vapour", "=", 
  RowBox[{"phases", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{3.9670879461306057`*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"cf735a44-d4e5-2e40-9428-d2dfc7325da6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PhaseData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {14.108818359375, {0., 14.108818359375}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
             PlotRange -> {{0, 48.}, {0, 48.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Phase: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vapour\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Pure \"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Amount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                   "Quantity"], "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
             PlotRange -> {{0, 48.}, {0, 48.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Phase: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vapour\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Pure \"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Amount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                   "Quantity"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Neon: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"1.`", 
                    
                    RowBox[{
                    "\"mol\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], "moles per mole", 
                    FractionBox["\"Moles\"", "\"Moles\""]}, "Quantity"], 
                  "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ThermoFAST64`PhaseData[<|
   "Components" -> {"Neon"}, "Molar Amount" -> Quantity[1., "Moles"], 
    "Mass Amount" -> Quantity[20.179, "Kilograms"], "Molar Mass" -> 
    Quantity[20.179, "Kilograms"/"Moles"], "Molar Density" -> 
    Quantity[218.3866320915985, "Meters"^(-3) "Moles"], "Mass Density" -> 
    Quantity[4406.823848976366, "Kilograms" "Meters"^(-3)], "Pressure" -> 
    Quantity[0.0433, "Megapascals"], "Temperature" -> 
    Quantity[24.56, "Kelvins"], "Volume" -> 
    Quantity[0.004579034854022417, "Meters"^3/"Moles"], "Entropy" -> 
    Quantity[69.26696109691167, "Joules" "Kelvins"^(-1)/"Moles"], 
    "Internal Energy" -> Quantity[1496.8072428589876`, "Joules"/"Moles"], 
    "Helmholtz Energy" -> Quantity[-204.38932168116298`, "Joules"/"Moles"], 
    "Enthalpy" -> Quantity[1695.0794520381587`, "Joules"/"Moles"], 
    "Gibbs Energy" -> Quantity[-6.117112501992316, "Joules"/"Moles"], 
    "Compressibility Factor" -> 0.9709557662962441, "Heat Capacity Cv" -> 
    Quantity[12.837823942265379`, "Joules" "Kelvins"^(-1)/"Moles"], 
    "Heat Capacity Cp" -> 
    Quantity[22.084164844506304`, "Joules" "Kelvins"^(-1)/"Moles"], 
    "Speed Of Sound" -> Quantity[128.04433777792676`, "Meters"/"Seconds"], 
    "Joule-Thomson Coefficient" -> 
    Quantity[17.963323026422195`, "Kelvins"/"Megapascals"], 
    "Isothermal Throttling Coefficient" -> 
    Quantity[-0.00039670498687062466`, "Meters"^3/"Moles"], 
    "Isothermal Expansion Coefficient" -> 0.9699938634652826, 
    "Isentropic Expansion Coefficient" -> 1.6686242524639872`, 
    "Volume Expansivity" -> Quantity[0.04424409877917824, "Kelvins"^(-1)], 
    "Isothermal Compressibility" -> 
    Quantity[23.809107553736183`, "Megapascals"^(-1)], 
    "Isentropic Compressibility" -> 
    Quantity[13.840556486941896`, "Megapascals"^(-1)], "Grueneisen Parameter" -> 
    0.6628187267662349, "Lower Heating Value" -> 
    Quantity[0., "Kilojoules"/"Moles"], "Higher Heating Value" -> 
    Quantity[0., "Kilojoules"/"Moles"], "Wobbe Index" -> 
    Quantity[0., "Megajoules" "Meters"^(-3)], "Viscosity" -> 
    Quantity[3.854640223750258*^-6, "Pascals" "Seconds"], 
    "Thermal Conductivity" -> 
    Quantity[0.00637445217174319, "Kelvins"^(-1) "Meters"^(-1) "Watts"], 
    "Phase Identification Parameter" -> 0.9144183068102307, "Name" -> 
    "Vapour", "Phase Type" -> "Vapour", "Molar Fraction" -> {1.}, "Fugacity" -> {
      Quantity[0.04208046235102215, "Megapascals"]}, 
    "Fugacity Coefficient" -> {0.9718351582222206}, 
    "Thermodynamic Factor" -> {{0.}}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9670879468215103`*^9, 3.9670888502545433`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"95da3b14-376e-3c4b-9796-b1237b7207d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "vapour", "]"}]], "Input",
 CellChangeTimes->{3.9670879589338894`*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"9b11152b-d479-df46-b674-d0f44cfbd4f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Components\"\>", ",", "\<\"Molar Amount\"\>", 
   ",", "\<\"Mass Amount\"\>", ",", "\<\"Molar Mass\"\>", 
   ",", "\<\"Molar Density\"\>", ",", "\<\"Mass Density\"\>", 
   ",", "\<\"Pressure\"\>", ",", "\<\"Temperature\"\>", ",", "\<\"Volume\"\>",
    ",", "\<\"Entropy\"\>", ",", "\<\"Internal Energy\"\>", 
   ",", "\<\"Helmholtz Energy\"\>", ",", "\<\"Enthalpy\"\>", 
   ",", "\<\"Gibbs Energy\"\>", ",", "\<\"Compressibility Factor\"\>", 
   ",", "\<\"Heat Capacity Cv\"\>", ",", "\<\"Heat Capacity Cp\"\>", 
   ",", "\<\"Speed Of Sound\"\>", ",", "\<\"Joule-Thomson Coefficient\"\>", 
   ",", "\<\"Isothermal Throttling Coefficient\"\>", 
   ",", "\<\"Isothermal Expansion Coefficient\"\>", 
   ",", "\<\"Isentropic Expansion Coefficient\"\>", 
   ",", "\<\"Volume Expansivity\"\>", 
   ",", "\<\"Isothermal Compressibility\"\>", 
   ",", "\<\"Isentropic Compressibility\"\>", 
   ",", "\<\"Grueneisen Parameter\"\>", ",", "\<\"Lower Heating Value\"\>", 
   ",", "\<\"Higher Heating Value\"\>", ",", "\<\"Wobbe Index\"\>", 
   ",", "\<\"Viscosity\"\>", ",", "\<\"Thermal Conductivity\"\>", 
   ",", "\<\"Phase Identification Parameter\"\>", ",", "\<\"Name\"\>", 
   ",", "\<\"Phase Type\"\>", ",", "\<\"Molar Fraction\"\>", 
   ",", "\<\"Fugacity\"\>", ",", "\<\"Fugacity Coefficient\"\>", 
   ",", "\<\"Thermodynamic Factor\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.9670879594145527`*^9, 3.967088850312374*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"704d2c62-627e-d941-84f0-3308fcbd35c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vapour", "[", "\"\<Enthalpy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9670879808140736`*^9, 3.9670879947852*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"8846487c-28f8-8d4f-90c5-2ea6915d9e0c"],

Cell[BoxData[
 TemplateBox[{"1695.0794520381587`", 
   RowBox[{
    "\"J\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"mol\""}], 
   "joules per mole", 
   FractionBox["\"Joules\"", "\"Moles\""]},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.9670879823687077`*^9, 3.9670879954898567`*^9}, 
   3.967088850379019*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"652ef53b-3768-6244-82a5-c4808eb68dd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vapour", "[", "\"\<Entropy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9670880623098106`*^9, 3.967088066185192*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"bb805905-8004-a54b-adff-bc8d51a5fcde"],

Cell[BoxData[
 TemplateBox[{"69.26696109691167`", 
   RowBox[{
    "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"K\"", 
     "\[ThinSpace]", "\"mol\"", "\[InvisibleSpace]", "\")\""}], 
   "joules per kelvin mole", 
   FractionBox["\"Joules\"", 
    RowBox[{"\"Kelvins\"", " ", "\"Moles\""}]]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.9670880668955917`*^9, 3.967088850435789*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"573ce5f9-3400-524f-b5c3-65d8e1517bae"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Krypton", "Chapter",
 CellChangeTimes->{{3.9644934318527985`*^9, 3.9644934322480493`*^9}, {
  3.967088326991247*^9, 
  3.9670883280456905`*^9}},ExpressionUUID->"25dec3e4-a7f0-3247-80bf-\
4488b661a4a4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TriplePointTemperature", " ", "=", " ", 
  "115.78"}], "\[IndentingNewLine]", 
 RowBox[{"TriplePointPressure", " ", "=", " ", "0.07315"}]}], "Input",
 CellChangeTimes->{{3.967087507783106*^9, 3.9670875351623383`*^9}, {
   3.96708833042227*^9, 3.967088343366186*^9}, 3.9670884074120617`*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[38]:=",ExpressionUUID->"8c54230f-51d6-734b-a562-3882531e944b"],

Cell[BoxData["115.78`"], "Output",
 CellChangeTimes->{{3.9670876058278637`*^9, 3.967087630944626*^9}, 
   3.9670877489543552`*^9, 3.9670879047225857`*^9, 3.9670883501506805`*^9, 
   3.9670884078149815`*^9, 3.9670886745332394`*^9, 3.967088808765009*^9, 
   3.9670888504971046`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"d4cabe73-0b3e-f348-945e-75117fbf319d"],

Cell[BoxData["0.07315`"], "Output",
 CellChangeTimes->{{3.9670876058278637`*^9, 3.967087630944626*^9}, 
   3.9670877489543552`*^9, 3.9670879047225857`*^9, 3.9670883501506805`*^9, 
   3.9670884078149815`*^9, 3.9670886745332394`*^9, 3.967088808765009*^9, 
   3.967088850503044*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"fcdae234-9101-5240-bc59-d04d7ed80c04"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set up Feed", "Subsubsection",
 CellChangeTimes->{{3.963652450409743*^9, 3.963652453094388*^9}, {
  3.963655585533475*^9, 
  3.96365559073031*^9}},ExpressionUUID->"30fcbe3f-bc03-a048-931f-\
6d84152a89f6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "FeedModel"}], "\[IndentingNewLine]", 
 RowBox[{"feed", "=", 
  RowBox[{"FeedModel", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Krypton\>\"", "->", 
     RowBox[{"{", 
      RowBox[{"1", ",", "False"}], "}"}]}], "}"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"adjust", " ", "species", " ", "name"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.9579052602076015`*^9, 3.957905262297386*^9}, {
  3.9636105984331636`*^9, 3.963610604047813*^9}, {3.9636106394404974`*^9, 
  3.96361075054129*^9}, {3.963611622494367*^9, 3.963611622785097*^9}, {
  3.963652454621723*^9, 3.9636524606439705`*^9}, {3.9636525238606997`*^9, 
  3.963652526874334*^9}, {3.964511695400435*^9, 3.9645116956946745`*^9}, {
  3.9670883472252483`*^9, 3.9670883483969936`*^9}, {3.967088765363657*^9, 
  3.96708876622719*^9}, {3.9670888213882236`*^9, 3.9670888245699215`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[40]:=",ExpressionUUID->"55f1bc56-629f-434e-a100-51ebf95894f6"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FeedModel[mixture, opts] returns an object \
containing feed composition and model parameters. The mixture argument is a \
list of rules of the form \\\"<<compName>>\\\" -> <<molarFraction>> or \
\\\"<<compName>>\\\" -> {<<molarFraction>>,<<canFormSolid>>}.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  
                  StyleBox["\<\" SubValue Definitions\"\>", 
                   "InformationRowLabel",
                   StripOnInput->False],
                  "\"SubValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "SubValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    "\"Properties\"", "]"}], ":=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", "ThermoFAST64`Private`assoc", "]"}], 
                    ",", 
                    RowBox[{"Keys", "[", "\"Components\"", "]"}], ",", 
                    RowBox[{"Keys", "[", "\"Models\"", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"ComponentNames\"", ",", "\"Count\""}], "}"}]}],
                     "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    "ThermoFAST64`Private`key_String", "]"}], "/;", 
                    RowBox[{"KeyExistsQ", "[", 
                    
                    RowBox[{
                    "ThermoFAST64`Private`assoc", ",", 
                    "ThermoFAST64`Private`key"}], "]"}]}], ":=", 
                    
                    RowBox[{
                    "ThermoFAST64`Private`assoc", "[", 
                    "ThermoFAST64`Private`key", "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    "ThermoFAST64`Private`key_String", "]"}], "/;", 
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`assoc", "[", 
                    "\"Components\"", "]"}], ",", 
                    "ThermoFAST64`Private`key"}], "]"}]}], ":=", 
                    RowBox[{
                    RowBox[{
                    "ThermoFAST64`Private`assoc", "[", "\"Components\"", 
                    "]"}], "[", "ThermoFAST64`Private`key", "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    "ThermoFAST64`Private`key_", "]"}], "/;", 
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`assoc", "[", "\"Models\"", 
                    "]"}], ",", "ThermoFAST64`Private`key"}], "]"}]}], ":=", 
                    RowBox[{
                    
                    RowBox[{
                    "ThermoFAST64`Private`assoc", "[", "\"Models\"", "]"}], 
                    "[", "ThermoFAST64`Private`key", "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    "\"ComponentNames\"", "]"}], ":=", 
                    RowBox[{"Keys", "[", 
                    
                    RowBox[{
                    "ThermoFAST64`Private`assoc", "[", "\"Components\"", 
                    "]"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    "\"Count\"", "]"}], ":=", 
                    RowBox[{"Length", "[", 
                    
                    RowBox[{
                    "ThermoFAST64`Private`assoc", "[", "\"Components\"", 
                    "]"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    RowBox[{
                    RowBox[{"All", "|", "\"Components\""}], ",", 
                    "ThermoFAST64`Private`key_"}], "]"}], ":=", 
                    RowBox[{
                    
                    RowBox[{
                    "ThermoFAST64`Private`assoc", "[", "\"Components\"", 
                    "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "ThermoFAST64`Private`key"}], 
                    "\[RightDoubleBracket]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]},
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  
                  StyleBox["\<\" DownValue Definitions\"\>", 
                   "InformationRowLabel",
                   StripOnInput->False],
                  "\"DownValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "DownValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FeedModel", "[", 
                    RowBox[{"ThermoFAST64`Private`mixture_List", ",", 
                    RowBox[{"ThermoFAST64`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ThermoFAST64`Private`nComps", "=", 
                    
                    RowBox[{"Length", "[", "ThermoFAST64`Private`mixture", 
                    "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`compNames", "=", 
                    
                    RowBox[{"ThermoFAST64`Private`mixture", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ",", 
                    RowBox[{"ThermoFAST64`Private`compIds", "=", 
                    
                    RowBox[{"ThermoFAST64`Private`$BuiltinComponentCodeLU", 
                    "/@", 
                    
                    RowBox[{"ThermoFAST64`Private`mixture", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
                    ",", 
                    RowBox[{"ThermoFAST64`Private`weights", "=", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`mixture", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ThermoFAST64`Private`w1_", ",", "_"}], "}"}], 
                    "\[RuleDelayed]", "ThermoFAST64`Private`w1"}], ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}], ",", 
                    
                    RowBox[{"ThermoFAST64`Private`w2_Quantity", 
                    "\[RuleDelayed]", 
                    RowBox[{"QuantityMagnitude", "[", 
                    RowBox[{"ThermoFAST64`Private`w2", ",", 
                    FractionBox["\"Moles\"", "\"Moles\""]}], "]"}]}], ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`canFormSolidQ", "=", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`mixture", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "ThermoFAST64`Private`q_"}], "}"}], 
                    "\[RuleDelayed]", "ThermoFAST64`Private`q"}], ",", 
                    RowBox[{"_", "\[Rule]", "True"}]}], "}"}], ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`fluidModel", "=", 
                    RowBox[{"OptionValue", "[", "FluidModel", "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`solidModel", "=", 
                    RowBox[{"OptionValue", "[", "SolidModel", "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`hydrateModel", "=", 
                    RowBox[{"OptionValue", "[", "HydrateModel", "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`hydrateType", "=", 
                    RowBox[{"OptionValue", "[", "HydrateType", "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`transportModel", "=", 
                    RowBox[{"OptionValue", "[", "TransportModel", "]"}]}], 
                    ",", "ThermoFAST64`Private`fluidModelId", ",", 
                    "ThermoFAST64`Private`solidModelId", ",", 
                    "ThermoFAST64`Private`hydrateModelId", ",", 
                    "ThermoFAST64`Private`hydrateTypeId", ",", 
                    "ThermoFAST64`Private`transportModelId", ",", 
                    "ThermoFAST64`Private`res", ",", 
                    "ThermoFAST64`Private`modelOverrides", ",", 
                    "ThermoFAST64`Private`modelValues", ",", 
                    "ThermoFAST64`Private`feed"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"ThermoFAST64`Private`compIds", ",", "$Failed"}], 
                    "]"}]}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"ThermoFAST64`Private`fluidModelId", "=", 
                    RowBox[{"ThermoFAST64`Private`getModelId", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`fluidModel", ",", 
                    "ThermoFAST64`Private`$FluidModelCodeLU"}], "]"}]}], ";", 
                    RowBox[{"ThermoFAST64`Private`solidModelId", "=", 
                    RowBox[{"ThermoFAST64`Private`getModelId", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`solidModel", ",", 
                    "ThermoFAST64`Private`$SolidModelCodeLU"}], "]"}]}], ";", 
                    RowBox[{"ThermoFAST64`Private`hydrateModelId", "=", 
                    RowBox[{"ThermoFAST64`Private`getModelId", "[", 
                    RowBox[{"ThermoFAST64`Private`hydrateModel", ",", 
                    "ThermoFAST64`Private`$HydrateModelCodeLU"}], "]"}]}], 
                    ";", 
                    RowBox[{"ThermoFAST64`Private`hydrateTypeId", "=", 
                    RowBox[{"ThermoFAST64`Private`getModelId", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`hydrateType", ",", 
                    "ThermoFAST64`Private`$HydrateFormationTypeCodeLU"}], 
                    "]"}]}], ";", 
                    RowBox[{"ThermoFAST64`Private`transportModelId", "=", 
                    RowBox[{"ThermoFAST64`Private`getModelId", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`transportModel", ",", 
                    "ThermoFAST64`Private`$TransportModelCodeLU"}], "]"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"FreeQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"ThermoFAST64`Private`fluidModelId", ",", 
                    "ThermoFAST64`Private`solidModelId", ",", 
                    "ThermoFAST64`Private`hydrateModelId", ",", 
                    "ThermoFAST64`Private`hydrateTypeId", ",", 
                    "ThermoFAST64`Private`transportModelId"}], "}"}], ",", 
                    "_Missing"}], "]"}]}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"ThermoFAST64`Private`modelOverrides", "=", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"FluidModel", ",", "SolidModel", ",", 
                    "HydrateModel", ",", "HydrateFormationType", ",", 
                    "TransportModel"}], "}"}], "\[Rule]", 
                    RowBox[{"{", 
                    
                    RowBox[{"ThermoFAST64`Private`fluidModel", ",", 
                    "ThermoFAST64`Private`solidModel", ",", 
                    "ThermoFAST64`Private`hydrateModel", ",", 
                    "ThermoFAST64`Private`hydrateType", ",", 
                    "ThermoFAST64`Private`transportModel"}], "}"}]}], "]"}], 
                    ",", 
                    RowBox[{"_", "\[Rule]", "Automatic"}]}], "]"}]}], ";", 
                    RowBox[{"ThermoFAST64`Private`feed", "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"Components\"", "\[Rule]", 
                    RowBox[{"Association", "@@", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`compNames", 
                    "\[LeftDoubleBracket]", "ThermoFAST64`Private`i", 
                    "\[RightDoubleBracket]"}], "\[Rule]", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"Id\"", "\[Rule]", 
                    
                    RowBox[{"ThermoFAST64`Private`compIds", 
                    "\[LeftDoubleBracket]", "ThermoFAST64`Private`i", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"\"Molar Fraction\"", "\[Rule]", 
                    RowBox[{"Quantity", "[", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`weights", 
                    "\[LeftDoubleBracket]", "ThermoFAST64`Private`i", 
                    "\[RightDoubleBracket]"}], ",", 
                    FractionBox["\"Moles\"", "\"Moles\""]}], "]"}]}], ",", 
                    RowBox[{"\"Can Form Solid\"", "\[Rule]", 
                    
                    RowBox[{"ThermoFAST64`Private`canFormSolidQ", 
                    "\[LeftDoubleBracket]", "ThermoFAST64`Private`i", 
                    "\[RightDoubleBracket]"}]}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ThermoFAST64`Private`i", ",", 
                    
                    RowBox[{"Length", "[", "ThermoFAST64`Private`mixture", 
                    "]"}]}], "}"}]}], "]"}]}]}], ",", 
                    
                    RowBox[{"\"ModelOverrides\"", "\[Rule]", 
                    "ThermoFAST64`Private`modelOverrides"}], ",", 
                    RowBox[{"\"dllArgs\"", "\[Rule]", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    
                    RowBox[{"\"n_comps\"", "\[Rule]", 
                    "ThermoFAST64`Private`nComps"}], ",", 
                    
                    RowBox[{"\"comp_ids\"", "\[Rule]", 
                    "ThermoFAST64`Private`compIds"}], ",", 
                    
                    RowBox[{"\"weights\"", "\[Rule]", 
                    "ThermoFAST64`Private`weights"}], ",", 
                    
                    RowBox[{"\"can_form_solid\"", "\[Rule]", 
                    "ThermoFAST64`Private`canFormSolidQ"}], ",", 
                    
                    RowBox[{"\"fluid_model\"", "\[Rule]", 
                    "ThermoFAST64`Private`fluidModelId"}], ",", 
                    
                    RowBox[{"\"solid_model\"", "\[Rule]", 
                    "ThermoFAST64`Private`solidModelId"}], ",", 
                    
                    RowBox[{"\"transport_model\"", "\[Rule]", 
                    "ThermoFAST64`Private`transportModelId"}], ",", 
                    
                    RowBox[{"\"hydrate_model\"", "\[Rule]", 
                    "ThermoFAST64`Private`hydrateModelId"}], ",", 
                    
                    RowBox[{"\"hydrate_type\"", "\[Rule]", 
                    "ThermoFAST64`Private`hydrateTypeId"}]}], "]"}]}]}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ThermoFAST64`Private`setDllUserFeed", "[", 
                    
                    RowBox[{"FeedModel", "[", "ThermoFAST64`Private`feed", 
                    "]"}], "]"}], "===", "$Failed"}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"ThermoFAST64`Private`modelValues", "=", 
                    RowBox[{"TFGetFeedModels", "[", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`modelValues", "===", 
                    "$Failed"}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`feed", "[", "\"Models\"", 
                    "]"}], "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"FluidModel", "\[Rule]", 
                    RowBox[{"ThermoFAST64`Private`$FluidModelNameLU", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`modelValues", "[", 
                    "\"fluid_model\"", "]"}], "]"}]}], ",", 
                    RowBox[{"SolidModel", "\[Rule]", 
                    RowBox[{"ThermoFAST64`Private`$SolidModelNameLU", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`modelValues", "[", 
                    "\"solid_model\"", "]"}], "]"}]}], ",", 
                    RowBox[{"TransportModel", "\[Rule]", 
                    RowBox[{"ThermoFAST64`Private`$TransportModelNameLU", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`modelValues", "[", 
                    "\"transport_model\"", "]"}], "]"}]}], ",", 
                    RowBox[{"HydrateModel", "\[Rule]", 
                    RowBox[{"ThermoFAST64`Private`$HydrateModelNameLU", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`modelValues", "[", 
                    "\"hydrate_model\"", "]"}], "]"}]}], ",", 
                    RowBox[{"HydrateFormationType", "\[Rule]", 
                    
                    RowBox[{
                    "ThermoFAST64`Private`$HydrateFormationTypeNameLU", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`modelValues", "[", 
                    "\"hydrate_type\"", "]"}], "]"}]}]}], "]"}]}], ";", 
                    
                    RowBox[{"FeedModel", "[", "ThermoFAST64`Private`feed", 
                    "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"FluidModel", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"SolidModel", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"HydrateModel", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"HydrateType", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TransportModel", "\[Rule]", "Automatic"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "5", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"FluidModel", "\[Rule]", "Automatic"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "5", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ThermoFAST64`FeedModel\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FeedModel[mixture, opts] returns an object \
containing feed composition and model parameters. The mixture argument is a \
list of rules of the form \\\"<<compName>>\\\" -> <<molarFraction>> or \
\\\"<<compName>>\\\" -> {<<molarFraction>>,<<canFormSolid>>}.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{11., {4., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{11., {4., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FeedModel[mixture, opts] returns an object containing feed composition \
and model parameters. The mixture argument is a list of rules of the form \
\"<<compName>>\" -> <<molarFraction>> or \"<<compName>>\" -> \
{<<molarFraction>>,<<canFormSolid>>}.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ThermoFAST64`FeedModel, {ThermoFAST64`FeedModel[
         Pattern[ThermoFAST64`Private`mixture, 
          Blank[List]], 
         Pattern[ThermoFAST64`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{ThermoFAST64`Private`nComps = 
          Length[ThermoFAST64`Private`mixture], 
          ThermoFAST64`Private`compNames = 
          Part[ThermoFAST64`Private`mixture, All, 1], 
          ThermoFAST64`Private`compIds = 
          Map[ThermoFAST64`Private`$BuiltinComponentCodeLU, 
            Part[ThermoFAST64`Private`mixture, All, 1]], 
          ThermoFAST64`Private`weights = Replace[
            Replace[
             Part[ThermoFAST64`Private`mixture, All, 2], {
               Pattern[ThermoFAST64`Private`w1, 
                Blank[]], 
               Blank[]} :> ThermoFAST64`Private`w1, {1}], 
            Pattern[ThermoFAST64`Private`w2, 
              Blank[Quantity]] :> 
            QuantityMagnitude[ThermoFAST64`Private`w2, "Moles"/"Moles"], {1}],
           ThermoFAST64`Private`canFormSolidQ = Replace[
            Part[ThermoFAST64`Private`mixture, All, 2], {{
               Blank[], 
               Pattern[ThermoFAST64`Private`q, 
                Blank[]]} :> ThermoFAST64`Private`q, Blank[] -> True}, {1}], 
          ThermoFAST64`Private`fluidModel = 
          OptionValue[ThermoFAST64`FluidModel], 
          ThermoFAST64`Private`solidModel = 
          OptionValue[ThermoFAST64`SolidModel], 
          ThermoFAST64`Private`hydrateModel = 
          OptionValue[ThermoFAST64`HydrateModel], 
          ThermoFAST64`Private`hydrateType = 
          OptionValue[ThermoFAST64`HydrateType], 
          ThermoFAST64`Private`transportModel = 
          OptionValue[ThermoFAST64`TransportModel], 
          ThermoFAST64`Private`fluidModelId, 
          ThermoFAST64`Private`solidModelId, 
          ThermoFAST64`Private`hydrateModelId, 
          ThermoFAST64`Private`hydrateTypeId, 
          ThermoFAST64`Private`transportModelId, ThermoFAST64`Private`res, 
          ThermoFAST64`Private`modelOverrides, 
          ThermoFAST64`Private`modelValues, ThermoFAST64`Private`feed}, If[
           Not[
            FreeQ[ThermoFAST64`Private`compIds, $Failed]], 
           Return[$Failed]]; 
         ThermoFAST64`Private`fluidModelId = 
          ThermoFAST64`Private`getModelId[
           ThermoFAST64`Private`fluidModel, 
            ThermoFAST64`Private`$FluidModelCodeLU]; 
         ThermoFAST64`Private`solidModelId = 
          ThermoFAST64`Private`getModelId[
           ThermoFAST64`Private`solidModel, 
            ThermoFAST64`Private`$SolidModelCodeLU]; 
         ThermoFAST64`Private`hydrateModelId = 
          ThermoFAST64`Private`getModelId[
           ThermoFAST64`Private`hydrateModel, 
            ThermoFAST64`Private`$HydrateModelCodeLU]; 
         ThermoFAST64`Private`hydrateTypeId = 
          ThermoFAST64`Private`getModelId[
           ThermoFAST64`Private`hydrateType, 
            ThermoFAST64`Private`$HydrateFormationTypeCodeLU]; 
         ThermoFAST64`Private`transportModelId = 
          ThermoFAST64`Private`getModelId[
           ThermoFAST64`Private`transportModel, 
            ThermoFAST64`Private`$TransportModelCodeLU]; If[
           Not[
            
            FreeQ[{ThermoFAST64`Private`fluidModelId, 
              ThermoFAST64`Private`solidModelId, 
              ThermoFAST64`Private`hydrateModelId, 
              ThermoFAST64`Private`hydrateTypeId, 
              ThermoFAST64`Private`transportModelId}, 
             Blank[Missing]]], 
           Return[$Failed]]; ThermoFAST64`Private`modelOverrides = DeleteCases[
            
            Thread[{ThermoFAST64`FluidModel, ThermoFAST64`SolidModel, 
               ThermoFAST64`HydrateModel, ThermoFAST64`HydrateFormationType, 
               ThermoFAST64`TransportModel} -> {
              ThermoFAST64`Private`fluidModel, 
               ThermoFAST64`Private`solidModel, 
               ThermoFAST64`Private`hydrateModel, 
               ThermoFAST64`Private`hydrateType, 
               ThermoFAST64`Private`transportModel}], Blank[] -> Automatic]; 
         ThermoFAST64`Private`feed = <|"Components" -> Apply[Association, 
              Table[
              Part[ThermoFAST64`Private`compNames, 
                 ThermoFAST64`Private`i] -> <|
                "Id" -> Part[
                  ThermoFAST64`Private`compIds, ThermoFAST64`Private`i], 
                 "Molar Fraction" -> Quantity[
                   Part[ThermoFAST64`Private`weights, ThermoFAST64`Private`i],
                    "Moles"/"Moles"], "Can Form Solid" -> 
                 Part[ThermoFAST64`Private`canFormSolidQ, 
                   ThermoFAST64`Private`i]|>, {ThermoFAST64`Private`i, 
                Length[ThermoFAST64`Private`mixture]}]], "ModelOverrides" -> 
            ThermoFAST64`Private`modelOverrides, 
            "dllArgs" -> <|
             "n_comps" -> ThermoFAST64`Private`nComps, "comp_ids" -> 
              ThermoFAST64`Private`compIds, "weights" -> 
              ThermoFAST64`Private`weights, "can_form_solid" -> 
              ThermoFAST64`Private`canFormSolidQ, "fluid_model" -> 
              ThermoFAST64`Private`fluidModelId, "solid_model" -> 
              ThermoFAST64`Private`solidModelId, "transport_model" -> 
              ThermoFAST64`Private`transportModelId, "hydrate_model" -> 
              ThermoFAST64`Private`hydrateModelId, "hydrate_type" -> 
              ThermoFAST64`Private`hydrateTypeId|>|>; 
         If[ThermoFAST64`Private`setDllUserFeed[
             ThermoFAST64`FeedModel[ThermoFAST64`Private`feed]] === $Failed, 
           Return[$Failed]]; 
         ThermoFAST64`Private`modelValues = ThermoFAST64`TFGetFeedModels[]; 
         If[ThermoFAST64`Private`modelValues === $Failed, 
           Return[$Failed]]; 
         ThermoFAST64`Private`feed["Models"] = <|
           ThermoFAST64`FluidModel -> ThermoFAST64`Private`$FluidModelNameLU[
              ThermoFAST64`Private`modelValues["fluid_model"]], 
            ThermoFAST64`SolidModel -> ThermoFAST64`Private`$SolidModelNameLU[
              ThermoFAST64`Private`modelValues["solid_model"]], 
            ThermoFAST64`TransportModel -> 
            ThermoFAST64`Private`$TransportModelNameLU[
              ThermoFAST64`Private`modelValues["transport_model"]], 
            ThermoFAST64`HydrateModel -> 
            ThermoFAST64`Private`$HydrateModelNameLU[
              ThermoFAST64`Private`modelValues["hydrate_model"]], 
            ThermoFAST64`HydrateFormationType -> 
            ThermoFAST64`Private`$HydrateFormationTypeNameLU[
              ThermoFAST64`Private`modelValues["hydrate_type"]]|>; 
         ThermoFAST64`FeedModel[ThermoFAST64`Private`feed]]}], "SubValues" -> 
    Information`InformationValueForm[
     SubValues, ThermoFAST64`FeedModel, {ThermoFAST64`FeedModel[
         Pattern[ThermoFAST64`Private`assoc, 
          Blank[Association]]]["Properties"] :> Join[
         Keys[ThermoFAST64`Private`assoc], 
         Keys["Components"], 
         Keys["Models"], {"ComponentNames", "Count"}], Condition[
         ThermoFAST64`FeedModel[
          Pattern[ThermoFAST64`Private`assoc, 
           Blank[Association]]][
          Pattern[ThermoFAST64`Private`key, 
           Blank[String]]], 
         KeyExistsQ[ThermoFAST64`Private`assoc, ThermoFAST64`Private`key]] :> 
       ThermoFAST64`Private`assoc[ThermoFAST64`Private`key], Condition[
         ThermoFAST64`FeedModel[
          Pattern[ThermoFAST64`Private`assoc, 
           Blank[Association]]][
          Pattern[ThermoFAST64`Private`key, 
           Blank[String]]], 
         KeyExistsQ[
          ThermoFAST64`Private`assoc["Components"], 
          ThermoFAST64`Private`key]] :> 
       ThermoFAST64`Private`assoc["Components"][ThermoFAST64`Private`key], 
       Condition[
         ThermoFAST64`FeedModel[
          Pattern[ThermoFAST64`Private`assoc, 
           Blank[Association]]][
          Pattern[ThermoFAST64`Private`key, 
           Blank[]]], 
         KeyExistsQ[
          ThermoFAST64`Private`assoc["Models"], ThermoFAST64`Private`key]] :> 
       ThermoFAST64`Private`assoc["Models"][ThermoFAST64`Private`key], 
       ThermoFAST64`FeedModel[
         Pattern[ThermoFAST64`Private`assoc, 
          Blank[Association]]]["ComponentNames"] :> Keys[
         ThermoFAST64`Private`assoc["Components"]], ThermoFAST64`FeedModel[
         Pattern[ThermoFAST64`Private`assoc, 
          Blank[Association]]]["Count"] :> Length[
         ThermoFAST64`Private`assoc["Components"]], ThermoFAST64`FeedModel[
         Pattern[ThermoFAST64`Private`assoc, 
          Blank[Association]]][
         Alternatives[All, "Components"], 
         Pattern[ThermoFAST64`Private`key, 
          Blank[]]] :> Part[
         ThermoFAST64`Private`assoc["Components"], All, 
         ThermoFAST64`Private`key]}], "DefaultValues" -> None, "NValues" -> 
    None, "FormatValues" -> None, 
    "Options" -> {
     ThermoFAST64`FluidModel -> Automatic, ThermoFAST64`SolidModel -> 
      Automatic, ThermoFAST64`HydrateModel -> Automatic, 
      ThermoFAST64`HydrateType -> Automatic, ThermoFAST64`TransportModel -> 
      Automatic}, "Attributes" -> {}, "FullName" -> 
    "ThermoFAST64`FeedModel"|>, False]]], "Output",
 CellChangeTimes->{
  3.967088767020117*^9, {3.967088810733263*^9, 3.9670888506607857`*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"c9f653c8-8a7c-1b4c-bc34-b9dee443d718"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["FeedModel",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                7.629213089961558, {0., 7.629213089961558}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
             PlotRange -> {{0, 48.}, {0, 48.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Components: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"(No model overrides)\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                11.966367964725942`, {0., 11.966367964725942`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
             PlotRange -> {{0, 48.}, {0, 48.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Components: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"(No model overrides)\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Krypton: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"1", 
                    
                    RowBox[{
                    "\"mol\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], "mole per mole", 
                    FractionBox["\"Moles\"", "\"Moles\""]}, "Quantity"], 
                  "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ThermoFAST64`FeedModel[<|
   "Components" -> <|
     "Krypton" -> <|
       "Id" -> Missing["KeyAbsent", "Krypton"], "Molar Fraction" -> 
        Quantity[1, "Moles"/"Moles"], "Can Form Solid" -> False|>|>, 
    "ModelOverrides" -> {}, "dllArgs" -> <|"n_comps" -> 1, "comp_ids" -> {
        Missing["KeyAbsent", "Krypton"]}, "weights" -> {1}, 
      "can_form_solid" -> {False}, "fluid_model" -> 0, "solid_model" -> 0, 
      "transport_model" -> 0, "hydrate_model" -> 0, "hydrate_type" -> 0|>, 
    "Models" -> <|
     ThermoFAST64`FluidModel -> "Pure Fluid Reference", 
      ThermoFAST64`SolidModel -> "Classical", ThermoFAST64`TransportModel -> 
      "Residual Entropy Scaling", ThermoFAST64`HydrateModel -> "Zhu", 
      ThermoFAST64`HydrateFormationType -> "both"|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.967088767020117*^9, {3.967088810733263*^9, 3.967088850679472*^9}},
 CellLabel->"Out[41]=",ExpressionUUID->"48a1783d-b86e-9c41-91bb-d0b8d17d099b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res", "=", 
  RowBox[{"FlashPTSolve", "[", 
   RowBox[{
   "feed", ",", "TriplePointPressure", ",", "TriplePointTemperature"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9670875916732025`*^9, 3.9670876032581234`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[42]:=",ExpressionUUID->"537a61c2-8e77-3d4a-948d-dd752ad9f38d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["MultiphaseEquilibriumData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                11.966367964725942`, {0., 11.966367964725942`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
             PlotRange -> {{0, 48.}, {0, 48.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Pure Vapour\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Phases: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Components: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
             PlotRange -> {{0, 48.}, {0, 48.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Pure Vapour\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Phases: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Components: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Vapour: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                   "Quantity"], "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ThermoFAST64`MultiphaseEquilibriumData[<|
   "Description" -> "Pure Vapour", 
    "Components" -> <|
     "Krypton" -> <|
       "Id" -> Missing["KeyAbsent", "Krypton"], "Molar Fraction" -> 
        Quantity[1, "Moles"/"Moles"], "Can Form Solid" -> False|>|>, 
    "Phases" -> <|
     "Vapour" -> ThermoFAST64`PhaseData[<|
        "Components" -> {"Krypton"}, "Molar Amount" -> Quantity[1., "Moles"], 
         "Mass Amount" -> Quantity[20.179, "Kilograms"], "Molar Mass" -> 
         Quantity[20.179, "Kilograms"/"Moles"], "Molar Density" -> 
         Quantity[75.99212850191779, "Meters"^(-3) "Moles"], "Mass Density" -> 
         Quantity[1533.445161040199, "Kilograms" "Meters"^(-3)], "Pressure" -> 
         Quantity[0.07315, "Megapascals"], "Temperature" -> 
         Quantity[115.78, "Kelvins"], "Volume" -> 
         Quantity[0.013159257671993795`, "Meters"^3/"Moles"], "Entropy" -> 
         Quantity[97.56017294324272, "Joules" "Kelvins"^(-1)/"Moles"], 
         "Internal Energy" -> Quantity[2643.4330898373873`, "Joules"/"Moles"],
          "Helmholtz Energy" -> 
         Quantity[-8652.083733531255, "Joules"/"Moles"], "Enthalpy" -> 
         Quantity[3606.032788543618, "Joules"/"Moles"], "Gibbs Energy" -> 
         Quantity[-7689.4840348250245`, "Joules"/"Moles"], 
         "Compressibility Factor" -> 0.99994966287788, "Heat Capacity Cv" -> 
         Quantity[12.476413595131962`, "Joules" "Kelvins"^(-1)/"Moles"], 
         "Heat Capacity Cp" -> 
         Quantity[20.819869419862847`, "Joules" "Kelvins"^(-1)/"Moles"], 
         "Speed Of Sound" -> Quantity[282.1347353599388, "Meters"/"Seconds"], 
         "Joule-Thomson Coefficient" -> 
         Quantity[1.1325505724120613`, "Kelvins"/"Megapascals"], 
         "Isothermal Throttling Coefficient" -> 
         Quantity[-0.00002357955502900923, "Meters"^3/"Moles"], 
         "Isothermal Expansion Coefficient" -> 0.9999511797739123, 
         "Isentropic Expansion Coefficient" -> 1.6686568484114492`, 
         "Volume Expansivity" -> 
         Quantity[0.00865254673152343, "Kelvins"^(-1)], 
         "Isothermal Compressibility" -> 
         Quantity[13.671207417768121`, "Megapascals"^(-1)], 
         "Isentropic Compressibility" -> 
         Quantity[8.192541204229837, "Megapascals"^(-1)], 
         "Grueneisen Parameter" -> 0.667542174088924, "Lower Heating Value" -> 
         Quantity[0., "Kilojoules"/"Moles"], "Higher Heating Value" -> 
         Quantity[0., "Kilojoules"/"Moles"], "Wobbe Index" -> 
         Quantity[0., "Megajoules" "Meters"^(-3)], "Viscosity" -> 
         Quantity[0.000016155673107833337`, "Pascals" "Seconds"], 
         "Thermal Conductivity" -> 
         Quantity[
          0.025190263822117726`, "Kelvins"^(-1) "Meters"^(-1) "Watts"], 
         "Phase Identification Parameter" -> 0.998214840006012, "Name" -> 
         "Vapour", "Phase Type" -> "Vapour", "Molar Fraction" -> {1.}, 
         "Fugacity" -> {
           Quantity[0.07314626232380972, "Megapascals"]}, 
         "Fugacity Coefficient" -> {0.9999489039481848}, 
         "Thermodynamic Factor" -> {{0.}}|>]|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9670876376147346`*^9, 3.9670877490217457`*^9, 3.967087934040077*^9, 
   3.967088354432287*^9, {3.9670883881469936`*^9, 3.967088411131508*^9}, 
   3.9670887055753555`*^9, 3.967088773780178*^9, 3.9670888174431458`*^9, 
   3.9670888509521046`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"d9d0c6c3-181e-f746-8685-0d7631c3d009"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"phases", "=", 
  RowBox[{"res", "[", "\"\<Phases\>\"", "]"}]}]], "Input",
 CellChangeTimes->{3.967087928181669*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[43]:=",ExpressionUUID->"bd135fda-2659-8648-a75b-9bc22f05206d"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["PhaseData",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
                ImageSizeCache -> {14.108818359375, {0., 14.108818359375}}], 
               Appearance -> None, BaseStyle -> {}, 
               ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
                "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor,
                 ImageResolution -> {96, 96}], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], DefaultBaseStyle -> "ImageGraphics", 
              ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
              PlotRange -> {{0, 48.}, {0, 48.}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Phase: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Vapour\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Pure \"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Amount: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   
                   TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                    "Quantity"], "SummaryItem"]}]}}, AutoDelete -> False, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
           False, BaselinePosition -> {1, 1}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
         GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
                ImageSizeCache -> {
                 11.966367964725942`, {0., 11.966367964725942`}}], Appearance -> 
               None, BaseStyle -> {}, 
               ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
                "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor,
                 ImageResolution -> {96, 96}], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], DefaultBaseStyle -> "ImageGraphics", 
              ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
              PlotRange -> {{0, 48.}, {0, 48.}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Phase: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Vapour\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Pure \"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Amount: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   
                   TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                    "Quantity"], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Krypton: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"1.`", 
                    
                    RowBox[{
                    "\"mol\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], "moles per mole", 
                    FractionBox["\"Moles\"", "\"Moles\""]}, "Quantity"], 
                   "SummaryItem"]}]}}, AutoDelete -> False, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
           False, BaselinePosition -> {1, 1}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   ThermoFAST64`PhaseData[<|
    "Components" -> {"Krypton"}, "Molar Amount" -> Quantity[1., "Moles"], 
     "Mass Amount" -> Quantity[20.179, "Kilograms"], "Molar Mass" -> 
     Quantity[20.179, "Kilograms"/"Moles"], "Molar Density" -> 
     Quantity[75.99212850191779, "Meters"^(-3) "Moles"], "Mass Density" -> 
     Quantity[1533.445161040199, "Kilograms" "Meters"^(-3)], "Pressure" -> 
     Quantity[0.07315, "Megapascals"], "Temperature" -> 
     Quantity[115.78, "Kelvins"], "Volume" -> 
     Quantity[0.013159257671993795`, "Meters"^3/"Moles"], "Entropy" -> 
     Quantity[97.56017294324272, "Joules" "Kelvins"^(-1)/"Moles"], 
     "Internal Energy" -> Quantity[2643.4330898373873`, "Joules"/"Moles"], 
     "Helmholtz Energy" -> Quantity[-8652.083733531255, "Joules"/"Moles"], 
     "Enthalpy" -> Quantity[3606.032788543618, "Joules"/"Moles"], 
     "Gibbs Energy" -> Quantity[-7689.4840348250245`, "Joules"/"Moles"], 
     "Compressibility Factor" -> 0.99994966287788, "Heat Capacity Cv" -> 
     Quantity[12.476413595131962`, "Joules" "Kelvins"^(-1)/"Moles"], 
     "Heat Capacity Cp" -> 
     Quantity[20.819869419862847`, "Joules" "Kelvins"^(-1)/"Moles"], 
     "Speed Of Sound" -> Quantity[282.1347353599388, "Meters"/"Seconds"], 
     "Joule-Thomson Coefficient" -> 
     Quantity[1.1325505724120613`, "Kelvins"/"Megapascals"], 
     "Isothermal Throttling Coefficient" -> 
     Quantity[-0.00002357955502900923, "Meters"^3/"Moles"], 
     "Isothermal Expansion Coefficient" -> 0.9999511797739123, 
     "Isentropic Expansion Coefficient" -> 1.6686568484114492`, 
     "Volume Expansivity" -> Quantity[0.00865254673152343, "Kelvins"^(-1)], 
     "Isothermal Compressibility" -> 
     Quantity[13.671207417768121`, "Megapascals"^(-1)], 
     "Isentropic Compressibility" -> 
     Quantity[8.192541204229837, "Megapascals"^(-1)], "Grueneisen Parameter" -> 
     0.667542174088924, "Lower Heating Value" -> 
     Quantity[0., "Kilojoules"/"Moles"], "Higher Heating Value" -> 
     Quantity[0., "Kilojoules"/"Moles"], "Wobbe Index" -> 
     Quantity[0., "Megajoules" "Meters"^(-3)], "Viscosity" -> 
     Quantity[0.000016155673107833337`, "Pascals" "Seconds"], 
     "Thermal Conductivity" -> 
     Quantity[0.025190263822117726`, "Kelvins"^(-1) "Meters"^(-1) "Watts"], 
     "Phase Identification Parameter" -> 0.998214840006012, "Name" -> 
     "Vapour", "Phase Type" -> "Vapour", "Molar Fraction" -> {1.}, "Fugacity" -> {
       Quantity[0.07314626232380972, "Megapascals"]}, 
     "Fugacity Coefficient" -> {0.9999489039481848}, 
     "Thermodynamic Factor" -> {{0.}}|>],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{{3.967087930035406*^9, 3.967087936560137*^9}, {
   3.9670883897808266`*^9, 3.9670884131700573`*^9}, 3.9670887756608295`*^9, 
   3.967088851085657*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"7738169f-906d-a046-8eeb-ad0efbc13a99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vapour", "=", 
  RowBox[{"phases", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{3.9670879461306057`*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[44]:=",ExpressionUUID->"96470dbd-f001-7d48-aaf6-0a277e51a251"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PhaseData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                11.966367964725942`, {0., 11.966367964725942`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
             PlotRange -> {{0, 48.}, {0, 48.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Phase: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vapour\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Pure \"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Amount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                   "Quantity"], "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
             PlotRange -> {{0, 48.}, {0, 48.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Phase: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vapour\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Pure \"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Amount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                   "Quantity"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Krypton: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"1.`", 
                    
                    RowBox[{
                    "\"mol\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], "moles per mole", 
                    FractionBox["\"Moles\"", "\"Moles\""]}, "Quantity"], 
                  "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ThermoFAST64`PhaseData[<|
   "Components" -> {"Krypton"}, "Molar Amount" -> Quantity[1., "Moles"], 
    "Mass Amount" -> Quantity[20.179, "Kilograms"], "Molar Mass" -> 
    Quantity[20.179, "Kilograms"/"Moles"], "Molar Density" -> 
    Quantity[75.99212850191779, "Meters"^(-3) "Moles"], "Mass Density" -> 
    Quantity[1533.445161040199, "Kilograms" "Meters"^(-3)], "Pressure" -> 
    Quantity[0.07315, "Megapascals"], "Temperature" -> 
    Quantity[115.78, "Kelvins"], "Volume" -> 
    Quantity[0.013159257671993795`, "Meters"^3/"Moles"], "Entropy" -> 
    Quantity[97.56017294324272, "Joules" "Kelvins"^(-1)/"Moles"], 
    "Internal Energy" -> Quantity[2643.4330898373873`, "Joules"/"Moles"], 
    "Helmholtz Energy" -> Quantity[-8652.083733531255, "Joules"/"Moles"], 
    "Enthalpy" -> Quantity[3606.032788543618, "Joules"/"Moles"], 
    "Gibbs Energy" -> Quantity[-7689.4840348250245`, "Joules"/"Moles"], 
    "Compressibility Factor" -> 0.99994966287788, "Heat Capacity Cv" -> 
    Quantity[12.476413595131962`, "Joules" "Kelvins"^(-1)/"Moles"], 
    "Heat Capacity Cp" -> 
    Quantity[20.819869419862847`, "Joules" "Kelvins"^(-1)/"Moles"], 
    "Speed Of Sound" -> Quantity[282.1347353599388, "Meters"/"Seconds"], 
    "Joule-Thomson Coefficient" -> 
    Quantity[1.1325505724120613`, "Kelvins"/"Megapascals"], 
    "Isothermal Throttling Coefficient" -> 
    Quantity[-0.00002357955502900923, "Meters"^3/"Moles"], 
    "Isothermal Expansion Coefficient" -> 0.9999511797739123, 
    "Isentropic Expansion Coefficient" -> 1.6686568484114492`, 
    "Volume Expansivity" -> Quantity[0.00865254673152343, "Kelvins"^(-1)], 
    "Isothermal Compressibility" -> 
    Quantity[13.671207417768121`, "Megapascals"^(-1)], 
    "Isentropic Compressibility" -> 
    Quantity[8.192541204229837, "Megapascals"^(-1)], "Grueneisen Parameter" -> 
    0.667542174088924, "Lower Heating Value" -> 
    Quantity[0., "Kilojoules"/"Moles"], "Higher Heating Value" -> 
    Quantity[0., "Kilojoules"/"Moles"], "Wobbe Index" -> 
    Quantity[0., "Megajoules" "Meters"^(-3)], "Viscosity" -> 
    Quantity[0.000016155673107833337`, "Pascals" "Seconds"], 
    "Thermal Conductivity" -> 
    Quantity[0.025190263822117726`, "Kelvins"^(-1) "Meters"^(-1) "Watts"], 
    "Phase Identification Parameter" -> 0.998214840006012, "Name" -> "Vapour",
     "Phase Type" -> "Vapour", "Molar Fraction" -> {1.}, "Fugacity" -> {
      Quantity[0.07314626232380972, "Megapascals"]}, 
    "Fugacity Coefficient" -> {0.9999489039481848}, 
    "Thermodynamic Factor" -> {{0.}}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9670879468215103`*^9, {3.9670883914948196`*^9, 3.9670884145296383`*^9}, 
   3.9670888511469784`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"2adf50b8-c7bf-1e48-8277-f510f71605cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "vapour", "]"}]], "Input",
 CellChangeTimes->{3.9670879589338894`*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[45]:=",ExpressionUUID->"11a3b4b3-77dd-da4e-881a-725e8e925f1d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Components\"\>", ",", "\<\"Molar Amount\"\>", 
   ",", "\<\"Mass Amount\"\>", ",", "\<\"Molar Mass\"\>", 
   ",", "\<\"Molar Density\"\>", ",", "\<\"Mass Density\"\>", 
   ",", "\<\"Pressure\"\>", ",", "\<\"Temperature\"\>", ",", "\<\"Volume\"\>",
    ",", "\<\"Entropy\"\>", ",", "\<\"Internal Energy\"\>", 
   ",", "\<\"Helmholtz Energy\"\>", ",", "\<\"Enthalpy\"\>", 
   ",", "\<\"Gibbs Energy\"\>", ",", "\<\"Compressibility Factor\"\>", 
   ",", "\<\"Heat Capacity Cv\"\>", ",", "\<\"Heat Capacity Cp\"\>", 
   ",", "\<\"Speed Of Sound\"\>", ",", "\<\"Joule-Thomson Coefficient\"\>", 
   ",", "\<\"Isothermal Throttling Coefficient\"\>", 
   ",", "\<\"Isothermal Expansion Coefficient\"\>", 
   ",", "\<\"Isentropic Expansion Coefficient\"\>", 
   ",", "\<\"Volume Expansivity\"\>", 
   ",", "\<\"Isothermal Compressibility\"\>", 
   ",", "\<\"Isentropic Compressibility\"\>", 
   ",", "\<\"Grueneisen Parameter\"\>", ",", "\<\"Lower Heating Value\"\>", 
   ",", "\<\"Higher Heating Value\"\>", ",", "\<\"Wobbe Index\"\>", 
   ",", "\<\"Viscosity\"\>", ",", "\<\"Thermal Conductivity\"\>", 
   ",", "\<\"Phase Identification Parameter\"\>", ",", "\<\"Name\"\>", 
   ",", "\<\"Phase Type\"\>", ",", "\<\"Molar Fraction\"\>", 
   ",", "\<\"Fugacity\"\>", ",", "\<\"Fugacity Coefficient\"\>", 
   ",", "\<\"Thermodynamic Factor\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9670879594145527`*^9, {3.967088393657816*^9, 3.9670884174914627`*^9}, 
   3.967088851213663*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"2c0705ca-85ac-dc47-b27c-a25d289c3080"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vapour", "[", "\"\<Enthalpy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9670879808140736`*^9, 3.9670879947852*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[46]:=",ExpressionUUID->"840e7e45-5ca7-604d-957d-0bb74aa2fa74"],

Cell[BoxData[
 TemplateBox[{"3606.032788543618`", 
   RowBox[{
    "\"J\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"mol\""}], 
   "joules per mole", 
   FractionBox["\"Joules\"", "\"Moles\""]},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.9670879823687077`*^9, 3.9670879954898567`*^9}, {
   3.9670883955671577`*^9, 3.9670884189876347`*^9}, 3.9670885517102184`*^9, 
   3.9670888512714577`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"be044cbf-680c-294f-9fab-0475172f42a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vapour", "[", "\"\<Entropy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9670880623098106`*^9, 3.967088066185192*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[47]:=",ExpressionUUID->"fa75032b-f976-f248-aa8b-7c2b2804fa14"],

Cell[BoxData[
 TemplateBox[{"97.56017294324272`", 
   RowBox[{
    "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"K\"", 
     "\[ThinSpace]", "\"mol\"", "\[InvisibleSpace]", "\")\""}], 
   "joules per kelvin mole", 
   FractionBox["\"Joules\"", 
    RowBox[{"\"Kelvins\"", " ", "\"Moles\""}]]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.9670880668955917`*^9, 3.967088427769554*^9, 
  3.9670885535612545`*^9, 3.9670888513407135`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"baf169bc-7887-dd40-9362-fe660ce2943e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Xenon", "Chapter",
 CellChangeTimes->{{3.9644934318527985`*^9, 3.9644934322480493`*^9}, {
  3.967088326991247*^9, 3.9670883280456905`*^9}, {3.967089161122692*^9, 
  3.9670891616781826`*^9}},ExpressionUUID->"f99c9e71-c8ab-ab45-855d-\
835eafdcdbc0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TriplePointTemperature", " ", "=", " ", 
  "161.4"}], "\[IndentingNewLine]", 
 RowBox[{"TriplePointPressure", " ", "=", " ", "0.081748"}]}], "Input",
 CellChangeTimes->{{3.967087507783106*^9, 3.9670875351623383`*^9}, {
   3.96708833042227*^9, 3.967088343366186*^9}, 3.9670884074120617`*^9, {
   3.9670891704900875`*^9, 3.967089182689247*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[48]:=",ExpressionUUID->"0678414d-c418-0544-ba12-9e77dbd37429"],

Cell[BoxData["161.4`"], "Output",
 CellChangeTimes->{{3.9670876058278637`*^9, 3.967087630944626*^9}, 
   3.9670877489543552`*^9, 3.9670879047225857`*^9, 3.9670883501506805`*^9, 
   3.9670884078149815`*^9, 3.9670886745332394`*^9, 3.967088808765009*^9, 
   3.9670888504971046`*^9, 3.967089186163639*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"5e51588f-6701-3d45-821b-ca7da531e8e8"],

Cell[BoxData["0.081748`"], "Output",
 CellChangeTimes->{{3.9670876058278637`*^9, 3.967087630944626*^9}, 
   3.9670877489543552`*^9, 3.9670879047225857`*^9, 3.9670883501506805`*^9, 
   3.9670884078149815`*^9, 3.9670886745332394`*^9, 3.967088808765009*^9, 
   3.9670888504971046`*^9, 3.967089186172823*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"7b6f76f8-142b-f345-bea5-c2cf0be3772a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set up Feed", "Subsubsection",
 CellChangeTimes->{{3.963652450409743*^9, 3.963652453094388*^9}, {
  3.963655585533475*^9, 
  3.96365559073031*^9}},ExpressionUUID->"2b44cb59-cbc4-2b46-bc30-\
a35c691f5260"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "FeedModel"}], "\[IndentingNewLine]", 
 RowBox[{"feed", "=", 
  RowBox[{"FeedModel", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Xenon\>\"", "->", 
     RowBox[{"{", 
      RowBox[{"1", ",", "False"}], "}"}]}], "}"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"adjust", " ", "species", " ", "name"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.9579052602076015`*^9, 3.957905262297386*^9}, {
  3.9636105984331636`*^9, 3.963610604047813*^9}, {3.9636106394404974`*^9, 
  3.96361075054129*^9}, {3.963611622494367*^9, 3.963611622785097*^9}, {
  3.963652454621723*^9, 3.9636524606439705`*^9}, {3.9636525238606997`*^9, 
  3.963652526874334*^9}, {3.964511695400435*^9, 3.9645116956946745`*^9}, {
  3.9670883472252483`*^9, 3.9670883483969936`*^9}, {3.967088765363657*^9, 
  3.96708876622719*^9}, {3.9670888213882236`*^9, 3.9670888245699215`*^9}, {
  3.9670891878940086`*^9, 3.9670891884591465`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[50]:=",ExpressionUUID->"bce952a9-d353-e546-ae7d-f53ca398c56c"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FeedModel[mixture, opts] returns an object \
containing feed composition and model parameters. The mixture argument is a \
list of rules of the form \\\"<<compName>>\\\" -> <<molarFraction>> or \
\\\"<<compName>>\\\" -> {<<molarFraction>>,<<canFormSolid>>}.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  
                  StyleBox["\<\" SubValue Definitions\"\>", 
                   "InformationRowLabel",
                   StripOnInput->False],
                  "\"SubValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "SubValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    "\"Properties\"", "]"}], ":=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", "ThermoFAST64`Private`assoc", "]"}], 
                    ",", 
                    RowBox[{"Keys", "[", "\"Components\"", "]"}], ",", 
                    RowBox[{"Keys", "[", "\"Models\"", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"ComponentNames\"", ",", "\"Count\""}], "}"}]}],
                     "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    "ThermoFAST64`Private`key_String", "]"}], "/;", 
                    RowBox[{"KeyExistsQ", "[", 
                    
                    RowBox[{
                    "ThermoFAST64`Private`assoc", ",", 
                    "ThermoFAST64`Private`key"}], "]"}]}], ":=", 
                    
                    RowBox[{
                    "ThermoFAST64`Private`assoc", "[", 
                    "ThermoFAST64`Private`key", "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    "ThermoFAST64`Private`key_String", "]"}], "/;", 
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`assoc", "[", 
                    "\"Components\"", "]"}], ",", 
                    "ThermoFAST64`Private`key"}], "]"}]}], ":=", 
                    RowBox[{
                    RowBox[{
                    "ThermoFAST64`Private`assoc", "[", "\"Components\"", 
                    "]"}], "[", "ThermoFAST64`Private`key", "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    "ThermoFAST64`Private`key_", "]"}], "/;", 
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`assoc", "[", "\"Models\"", 
                    "]"}], ",", "ThermoFAST64`Private`key"}], "]"}]}], ":=", 
                    RowBox[{
                    
                    RowBox[{
                    "ThermoFAST64`Private`assoc", "[", "\"Models\"", "]"}], 
                    "[", "ThermoFAST64`Private`key", "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    "\"ComponentNames\"", "]"}], ":=", 
                    RowBox[{"Keys", "[", 
                    
                    RowBox[{
                    "ThermoFAST64`Private`assoc", "[", "\"Components\"", 
                    "]"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    "\"Count\"", "]"}], ":=", 
                    RowBox[{"Length", "[", 
                    
                    RowBox[{
                    "ThermoFAST64`Private`assoc", "[", "\"Components\"", 
                    "]"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    RowBox[{
                    RowBox[{"All", "|", "\"Components\""}], ",", 
                    "ThermoFAST64`Private`key_"}], "]"}], ":=", 
                    RowBox[{
                    
                    RowBox[{
                    "ThermoFAST64`Private`assoc", "[", "\"Components\"", 
                    "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "ThermoFAST64`Private`key"}], 
                    "\[RightDoubleBracket]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]},
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  
                  StyleBox["\<\" DownValue Definitions\"\>", 
                   "InformationRowLabel",
                   StripOnInput->False],
                  "\"DownValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "DownValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FeedModel", "[", 
                    RowBox[{"ThermoFAST64`Private`mixture_List", ",", 
                    RowBox[{"ThermoFAST64`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ThermoFAST64`Private`nComps", "=", 
                    
                    RowBox[{"Length", "[", "ThermoFAST64`Private`mixture", 
                    "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`compNames", "=", 
                    
                    RowBox[{"ThermoFAST64`Private`mixture", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ",", 
                    RowBox[{"ThermoFAST64`Private`compIds", "=", 
                    
                    RowBox[{"ThermoFAST64`Private`$BuiltinComponentCodeLU", 
                    "/@", 
                    
                    RowBox[{"ThermoFAST64`Private`mixture", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
                    ",", 
                    RowBox[{"ThermoFAST64`Private`weights", "=", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`mixture", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ThermoFAST64`Private`w1_", ",", "_"}], "}"}], 
                    "\[RuleDelayed]", "ThermoFAST64`Private`w1"}], ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}], ",", 
                    
                    RowBox[{"ThermoFAST64`Private`w2_Quantity", 
                    "\[RuleDelayed]", 
                    RowBox[{"QuantityMagnitude", "[", 
                    RowBox[{"ThermoFAST64`Private`w2", ",", 
                    FractionBox["\"Moles\"", "\"Moles\""]}], "]"}]}], ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`canFormSolidQ", "=", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`mixture", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "ThermoFAST64`Private`q_"}], "}"}], 
                    "\[RuleDelayed]", "ThermoFAST64`Private`q"}], ",", 
                    RowBox[{"_", "\[Rule]", "True"}]}], "}"}], ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`fluidModel", "=", 
                    RowBox[{"OptionValue", "[", "FluidModel", "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`solidModel", "=", 
                    RowBox[{"OptionValue", "[", "SolidModel", "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`hydrateModel", "=", 
                    RowBox[{"OptionValue", "[", "HydrateModel", "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`hydrateType", "=", 
                    RowBox[{"OptionValue", "[", "HydrateType", "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`transportModel", "=", 
                    RowBox[{"OptionValue", "[", "TransportModel", "]"}]}], 
                    ",", "ThermoFAST64`Private`fluidModelId", ",", 
                    "ThermoFAST64`Private`solidModelId", ",", 
                    "ThermoFAST64`Private`hydrateModelId", ",", 
                    "ThermoFAST64`Private`hydrateTypeId", ",", 
                    "ThermoFAST64`Private`transportModelId", ",", 
                    "ThermoFAST64`Private`res", ",", 
                    "ThermoFAST64`Private`modelOverrides", ",", 
                    "ThermoFAST64`Private`modelValues", ",", 
                    "ThermoFAST64`Private`feed"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"ThermoFAST64`Private`compIds", ",", "$Failed"}], 
                    "]"}]}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"ThermoFAST64`Private`fluidModelId", "=", 
                    RowBox[{"ThermoFAST64`Private`getModelId", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`fluidModel", ",", 
                    "ThermoFAST64`Private`$FluidModelCodeLU"}], "]"}]}], ";", 
                    RowBox[{"ThermoFAST64`Private`solidModelId", "=", 
                    RowBox[{"ThermoFAST64`Private`getModelId", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`solidModel", ",", 
                    "ThermoFAST64`Private`$SolidModelCodeLU"}], "]"}]}], ";", 
                    RowBox[{"ThermoFAST64`Private`hydrateModelId", "=", 
                    RowBox[{"ThermoFAST64`Private`getModelId", "[", 
                    RowBox[{"ThermoFAST64`Private`hydrateModel", ",", 
                    "ThermoFAST64`Private`$HydrateModelCodeLU"}], "]"}]}], 
                    ";", 
                    RowBox[{"ThermoFAST64`Private`hydrateTypeId", "=", 
                    RowBox[{"ThermoFAST64`Private`getModelId", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`hydrateType", ",", 
                    "ThermoFAST64`Private`$HydrateFormationTypeCodeLU"}], 
                    "]"}]}], ";", 
                    RowBox[{"ThermoFAST64`Private`transportModelId", "=", 
                    RowBox[{"ThermoFAST64`Private`getModelId", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`transportModel", ",", 
                    "ThermoFAST64`Private`$TransportModelCodeLU"}], "]"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"FreeQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"ThermoFAST64`Private`fluidModelId", ",", 
                    "ThermoFAST64`Private`solidModelId", ",", 
                    "ThermoFAST64`Private`hydrateModelId", ",", 
                    "ThermoFAST64`Private`hydrateTypeId", ",", 
                    "ThermoFAST64`Private`transportModelId"}], "}"}], ",", 
                    "_Missing"}], "]"}]}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"ThermoFAST64`Private`modelOverrides", "=", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"FluidModel", ",", "SolidModel", ",", 
                    "HydrateModel", ",", "HydrateFormationType", ",", 
                    "TransportModel"}], "}"}], "\[Rule]", 
                    RowBox[{"{", 
                    
                    RowBox[{"ThermoFAST64`Private`fluidModel", ",", 
                    "ThermoFAST64`Private`solidModel", ",", 
                    "ThermoFAST64`Private`hydrateModel", ",", 
                    "ThermoFAST64`Private`hydrateType", ",", 
                    "ThermoFAST64`Private`transportModel"}], "}"}]}], "]"}], 
                    ",", 
                    RowBox[{"_", "\[Rule]", "Automatic"}]}], "]"}]}], ";", 
                    RowBox[{"ThermoFAST64`Private`feed", "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"Components\"", "\[Rule]", 
                    RowBox[{"Association", "@@", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`compNames", 
                    "\[LeftDoubleBracket]", "ThermoFAST64`Private`i", 
                    "\[RightDoubleBracket]"}], "\[Rule]", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"Id\"", "\[Rule]", 
                    
                    RowBox[{"ThermoFAST64`Private`compIds", 
                    "\[LeftDoubleBracket]", "ThermoFAST64`Private`i", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"\"Molar Fraction\"", "\[Rule]", 
                    RowBox[{"Quantity", "[", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`weights", 
                    "\[LeftDoubleBracket]", "ThermoFAST64`Private`i", 
                    "\[RightDoubleBracket]"}], ",", 
                    FractionBox["\"Moles\"", "\"Moles\""]}], "]"}]}], ",", 
                    RowBox[{"\"Can Form Solid\"", "\[Rule]", 
                    
                    RowBox[{"ThermoFAST64`Private`canFormSolidQ", 
                    "\[LeftDoubleBracket]", "ThermoFAST64`Private`i", 
                    "\[RightDoubleBracket]"}]}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ThermoFAST64`Private`i", ",", 
                    
                    RowBox[{"Length", "[", "ThermoFAST64`Private`mixture", 
                    "]"}]}], "}"}]}], "]"}]}]}], ",", 
                    
                    RowBox[{"\"ModelOverrides\"", "\[Rule]", 
                    "ThermoFAST64`Private`modelOverrides"}], ",", 
                    RowBox[{"\"dllArgs\"", "\[Rule]", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    
                    RowBox[{"\"n_comps\"", "\[Rule]", 
                    "ThermoFAST64`Private`nComps"}], ",", 
                    
                    RowBox[{"\"comp_ids\"", "\[Rule]", 
                    "ThermoFAST64`Private`compIds"}], ",", 
                    
                    RowBox[{"\"weights\"", "\[Rule]", 
                    "ThermoFAST64`Private`weights"}], ",", 
                    
                    RowBox[{"\"can_form_solid\"", "\[Rule]", 
                    "ThermoFAST64`Private`canFormSolidQ"}], ",", 
                    
                    RowBox[{"\"fluid_model\"", "\[Rule]", 
                    "ThermoFAST64`Private`fluidModelId"}], ",", 
                    
                    RowBox[{"\"solid_model\"", "\[Rule]", 
                    "ThermoFAST64`Private`solidModelId"}], ",", 
                    
                    RowBox[{"\"transport_model\"", "\[Rule]", 
                    "ThermoFAST64`Private`transportModelId"}], ",", 
                    
                    RowBox[{"\"hydrate_model\"", "\[Rule]", 
                    "ThermoFAST64`Private`hydrateModelId"}], ",", 
                    
                    RowBox[{"\"hydrate_type\"", "\[Rule]", 
                    "ThermoFAST64`Private`hydrateTypeId"}]}], "]"}]}]}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ThermoFAST64`Private`setDllUserFeed", "[", 
                    
                    RowBox[{"FeedModel", "[", "ThermoFAST64`Private`feed", 
                    "]"}], "]"}], "===", "$Failed"}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"ThermoFAST64`Private`modelValues", "=", 
                    RowBox[{"TFGetFeedModels", "[", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`modelValues", "===", 
                    "$Failed"}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`feed", "[", "\"Models\"", 
                    "]"}], "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"FluidModel", "\[Rule]", 
                    RowBox[{"ThermoFAST64`Private`$FluidModelNameLU", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`modelValues", "[", 
                    "\"fluid_model\"", "]"}], "]"}]}], ",", 
                    RowBox[{"SolidModel", "\[Rule]", 
                    RowBox[{"ThermoFAST64`Private`$SolidModelNameLU", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`modelValues", "[", 
                    "\"solid_model\"", "]"}], "]"}]}], ",", 
                    RowBox[{"TransportModel", "\[Rule]", 
                    RowBox[{"ThermoFAST64`Private`$TransportModelNameLU", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`modelValues", "[", 
                    "\"transport_model\"", "]"}], "]"}]}], ",", 
                    RowBox[{"HydrateModel", "\[Rule]", 
                    RowBox[{"ThermoFAST64`Private`$HydrateModelNameLU", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`modelValues", "[", 
                    "\"hydrate_model\"", "]"}], "]"}]}], ",", 
                    RowBox[{"HydrateFormationType", "\[Rule]", 
                    
                    RowBox[{
                    "ThermoFAST64`Private`$HydrateFormationTypeNameLU", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`modelValues", "[", 
                    "\"hydrate_type\"", "]"}], "]"}]}]}], "]"}]}], ";", 
                    
                    RowBox[{"FeedModel", "[", "ThermoFAST64`Private`feed", 
                    "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"FluidModel", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"SolidModel", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"HydrateModel", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"HydrateType", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TransportModel", "\[Rule]", "Automatic"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "5", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"FluidModel", "\[Rule]", "Automatic"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "5", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ThermoFAST64`FeedModel\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FeedModel[mixture, opts] returns an object \
containing feed composition and model parameters. The mixture argument is a \
list of rules of the form \\\"<<compName>>\\\" -> <<molarFraction>> or \
\\\"<<compName>>\\\" -> {<<molarFraction>>,<<canFormSolid>>}.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{11., {4., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{11., {4., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FeedModel[mixture, opts] returns an object containing feed composition \
and model parameters. The mixture argument is a list of rules of the form \
\"<<compName>>\" -> <<molarFraction>> or \"<<compName>>\" -> \
{<<molarFraction>>,<<canFormSolid>>}.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ThermoFAST64`FeedModel, {ThermoFAST64`FeedModel[
         Pattern[ThermoFAST64`Private`mixture, 
          Blank[List]], 
         Pattern[ThermoFAST64`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{ThermoFAST64`Private`nComps = 
          Length[ThermoFAST64`Private`mixture], 
          ThermoFAST64`Private`compNames = 
          Part[ThermoFAST64`Private`mixture, All, 1], 
          ThermoFAST64`Private`compIds = 
          Map[ThermoFAST64`Private`$BuiltinComponentCodeLU, 
            Part[ThermoFAST64`Private`mixture, All, 1]], 
          ThermoFAST64`Private`weights = Replace[
            Replace[
             Part[ThermoFAST64`Private`mixture, All, 2], {
               Pattern[ThermoFAST64`Private`w1, 
                Blank[]], 
               Blank[]} :> ThermoFAST64`Private`w1, {1}], 
            Pattern[ThermoFAST64`Private`w2, 
              Blank[Quantity]] :> 
            QuantityMagnitude[ThermoFAST64`Private`w2, "Moles"/"Moles"], {1}],
           ThermoFAST64`Private`canFormSolidQ = Replace[
            Part[ThermoFAST64`Private`mixture, All, 2], {{
               Blank[], 
               Pattern[ThermoFAST64`Private`q, 
                Blank[]]} :> ThermoFAST64`Private`q, Blank[] -> True}, {1}], 
          ThermoFAST64`Private`fluidModel = 
          OptionValue[ThermoFAST64`FluidModel], 
          ThermoFAST64`Private`solidModel = 
          OptionValue[ThermoFAST64`SolidModel], 
          ThermoFAST64`Private`hydrateModel = 
          OptionValue[ThermoFAST64`HydrateModel], 
          ThermoFAST64`Private`hydrateType = 
          OptionValue[ThermoFAST64`HydrateType], 
          ThermoFAST64`Private`transportModel = 
          OptionValue[ThermoFAST64`TransportModel], 
          ThermoFAST64`Private`fluidModelId, 
          ThermoFAST64`Private`solidModelId, 
          ThermoFAST64`Private`hydrateModelId, 
          ThermoFAST64`Private`hydrateTypeId, 
          ThermoFAST64`Private`transportModelId, ThermoFAST64`Private`res, 
          ThermoFAST64`Private`modelOverrides, 
          ThermoFAST64`Private`modelValues, ThermoFAST64`Private`feed}, If[
           Not[
            FreeQ[ThermoFAST64`Private`compIds, $Failed]], 
           Return[$Failed]]; 
         ThermoFAST64`Private`fluidModelId = 
          ThermoFAST64`Private`getModelId[
           ThermoFAST64`Private`fluidModel, 
            ThermoFAST64`Private`$FluidModelCodeLU]; 
         ThermoFAST64`Private`solidModelId = 
          ThermoFAST64`Private`getModelId[
           ThermoFAST64`Private`solidModel, 
            ThermoFAST64`Private`$SolidModelCodeLU]; 
         ThermoFAST64`Private`hydrateModelId = 
          ThermoFAST64`Private`getModelId[
           ThermoFAST64`Private`hydrateModel, 
            ThermoFAST64`Private`$HydrateModelCodeLU]; 
         ThermoFAST64`Private`hydrateTypeId = 
          ThermoFAST64`Private`getModelId[
           ThermoFAST64`Private`hydrateType, 
            ThermoFAST64`Private`$HydrateFormationTypeCodeLU]; 
         ThermoFAST64`Private`transportModelId = 
          ThermoFAST64`Private`getModelId[
           ThermoFAST64`Private`transportModel, 
            ThermoFAST64`Private`$TransportModelCodeLU]; If[
           Not[
            
            FreeQ[{ThermoFAST64`Private`fluidModelId, 
              ThermoFAST64`Private`solidModelId, 
              ThermoFAST64`Private`hydrateModelId, 
              ThermoFAST64`Private`hydrateTypeId, 
              ThermoFAST64`Private`transportModelId}, 
             Blank[Missing]]], 
           Return[$Failed]]; ThermoFAST64`Private`modelOverrides = DeleteCases[
            
            Thread[{ThermoFAST64`FluidModel, ThermoFAST64`SolidModel, 
               ThermoFAST64`HydrateModel, ThermoFAST64`HydrateFormationType, 
               ThermoFAST64`TransportModel} -> {
              ThermoFAST64`Private`fluidModel, 
               ThermoFAST64`Private`solidModel, 
               ThermoFAST64`Private`hydrateModel, 
               ThermoFAST64`Private`hydrateType, 
               ThermoFAST64`Private`transportModel}], Blank[] -> Automatic]; 
         ThermoFAST64`Private`feed = <|"Components" -> Apply[Association, 
              Table[
              Part[ThermoFAST64`Private`compNames, 
                 ThermoFAST64`Private`i] -> <|
                "Id" -> Part[
                  ThermoFAST64`Private`compIds, ThermoFAST64`Private`i], 
                 "Molar Fraction" -> Quantity[
                   Part[ThermoFAST64`Private`weights, ThermoFAST64`Private`i],
                    "Moles"/"Moles"], "Can Form Solid" -> 
                 Part[ThermoFAST64`Private`canFormSolidQ, 
                   ThermoFAST64`Private`i]|>, {ThermoFAST64`Private`i, 
                Length[ThermoFAST64`Private`mixture]}]], "ModelOverrides" -> 
            ThermoFAST64`Private`modelOverrides, 
            "dllArgs" -> <|
             "n_comps" -> ThermoFAST64`Private`nComps, "comp_ids" -> 
              ThermoFAST64`Private`compIds, "weights" -> 
              ThermoFAST64`Private`weights, "can_form_solid" -> 
              ThermoFAST64`Private`canFormSolidQ, "fluid_model" -> 
              ThermoFAST64`Private`fluidModelId, "solid_model" -> 
              ThermoFAST64`Private`solidModelId, "transport_model" -> 
              ThermoFAST64`Private`transportModelId, "hydrate_model" -> 
              ThermoFAST64`Private`hydrateModelId, "hydrate_type" -> 
              ThermoFAST64`Private`hydrateTypeId|>|>; 
         If[ThermoFAST64`Private`setDllUserFeed[
             ThermoFAST64`FeedModel[ThermoFAST64`Private`feed]] === $Failed, 
           Return[$Failed]]; 
         ThermoFAST64`Private`modelValues = ThermoFAST64`TFGetFeedModels[]; 
         If[ThermoFAST64`Private`modelValues === $Failed, 
           Return[$Failed]]; 
         ThermoFAST64`Private`feed["Models"] = <|
           ThermoFAST64`FluidModel -> ThermoFAST64`Private`$FluidModelNameLU[
              ThermoFAST64`Private`modelValues["fluid_model"]], 
            ThermoFAST64`SolidModel -> ThermoFAST64`Private`$SolidModelNameLU[
              ThermoFAST64`Private`modelValues["solid_model"]], 
            ThermoFAST64`TransportModel -> 
            ThermoFAST64`Private`$TransportModelNameLU[
              ThermoFAST64`Private`modelValues["transport_model"]], 
            ThermoFAST64`HydrateModel -> 
            ThermoFAST64`Private`$HydrateModelNameLU[
              ThermoFAST64`Private`modelValues["hydrate_model"]], 
            ThermoFAST64`HydrateFormationType -> 
            ThermoFAST64`Private`$HydrateFormationTypeNameLU[
              ThermoFAST64`Private`modelValues["hydrate_type"]]|>; 
         ThermoFAST64`FeedModel[ThermoFAST64`Private`feed]]}], "SubValues" -> 
    Information`InformationValueForm[
     SubValues, ThermoFAST64`FeedModel, {ThermoFAST64`FeedModel[
         Pattern[ThermoFAST64`Private`assoc, 
          Blank[Association]]]["Properties"] :> Join[
         Keys[ThermoFAST64`Private`assoc], 
         Keys["Components"], 
         Keys["Models"], {"ComponentNames", "Count"}], Condition[
         ThermoFAST64`FeedModel[
          Pattern[ThermoFAST64`Private`assoc, 
           Blank[Association]]][
          Pattern[ThermoFAST64`Private`key, 
           Blank[String]]], 
         KeyExistsQ[ThermoFAST64`Private`assoc, ThermoFAST64`Private`key]] :> 
       ThermoFAST64`Private`assoc[ThermoFAST64`Private`key], Condition[
         ThermoFAST64`FeedModel[
          Pattern[ThermoFAST64`Private`assoc, 
           Blank[Association]]][
          Pattern[ThermoFAST64`Private`key, 
           Blank[String]]], 
         KeyExistsQ[
          ThermoFAST64`Private`assoc["Components"], 
          ThermoFAST64`Private`key]] :> 
       ThermoFAST64`Private`assoc["Components"][ThermoFAST64`Private`key], 
       Condition[
         ThermoFAST64`FeedModel[
          Pattern[ThermoFAST64`Private`assoc, 
           Blank[Association]]][
          Pattern[ThermoFAST64`Private`key, 
           Blank[]]], 
         KeyExistsQ[
          ThermoFAST64`Private`assoc["Models"], ThermoFAST64`Private`key]] :> 
       ThermoFAST64`Private`assoc["Models"][ThermoFAST64`Private`key], 
       ThermoFAST64`FeedModel[
         Pattern[ThermoFAST64`Private`assoc, 
          Blank[Association]]]["ComponentNames"] :> Keys[
         ThermoFAST64`Private`assoc["Components"]], ThermoFAST64`FeedModel[
         Pattern[ThermoFAST64`Private`assoc, 
          Blank[Association]]]["Count"] :> Length[
         ThermoFAST64`Private`assoc["Components"]], ThermoFAST64`FeedModel[
         Pattern[ThermoFAST64`Private`assoc, 
          Blank[Association]]][
         Alternatives[All, "Components"], 
         Pattern[ThermoFAST64`Private`key, 
          Blank[]]] :> Part[
         ThermoFAST64`Private`assoc["Components"], All, 
         ThermoFAST64`Private`key]}], "DefaultValues" -> None, "NValues" -> 
    None, "FormatValues" -> None, 
    "Options" -> {
     ThermoFAST64`FluidModel -> Automatic, ThermoFAST64`SolidModel -> 
      Automatic, ThermoFAST64`HydrateModel -> Automatic, 
      ThermoFAST64`HydrateType -> Automatic, ThermoFAST64`TransportModel -> 
      Automatic}, "Attributes" -> {}, "FullName" -> 
    "ThermoFAST64`FeedModel"|>, False]]], "Output",
 CellChangeTimes->{
  3.967088767020117*^9, {3.967088810733263*^9, 3.9670888506607857`*^9}, 
   3.967089189150751*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"d6ae9454-0419-ee4e-b5e1-6e2c1f3830ac"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["FeedModel",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
NxGz7+hYc0mXazuH6566fNpQ5nv/1epyuDogQ2l6PGeAC6OPuIHndk33XJnB
PSQp0LuPv82Z454KWTdB5v2UHTHUCntsH4kr3msZfMcdwFqel7fgcWKpKQNx
Vz6W6GJfirjdAa46SM5HfEr3u5htqtEbX6hr2mJcWA+26/l/tVLPL/7exZmv
vT2MLzM24PtWcOV+xr+wR0PiYmb1Z1NN/1Fm6gE/LoUeJ2iX0epv1GpXCznV
sFhWIxtkcJq/8H/2uBKIqSL2PaF16c8QtTFgzH1Gp7ehe9a/N+v5S/9Gz315
o6588NkAfFyanlcirtTILrx/yOINVRJbIFMX6+QwzAXvQgy1kK+OVn+7vTDP
5ZrXDuwpJ6bc/d5oADIFWOOQB+3gtnFi0vC4R374I0PgAV+iezfxT5erO/Sc
77+r25aU6PC5rnz4P7ro/32RM6yB6TLKnq5lMmcEqtZEfqQ0/qYN1+5NtVXS
/1tcLvdZm81lG63+xFvcVwT9T7hchU3AkiWMJ9Y06/H/PYv8fMeK2sO8x/sv
ZIKPpt4v5lg+rUXMc7/I35wJAg+yd3v13L9dr8/53ut6VsVJHX3T59cB5zPf
/flL8IPou8w8lOvCM5WGa2H6YBriHpyoATHRTNtTfnJWyN+A/D9J+e8n/81F
3+MZO1BPLvMZxFrrRzdDyIE3WfeZ27D5yfRa/wx+U4K94eG+7xYxTt2VI+f1
53bV6nNWbdHnrHlDf3bvz4CLV8Rvd92jin5ip+35b2ex/jCeDf+DY/l7LwAH
L0q1lyywdQ3scZb1weEohO6uDtaBuXPnPtAcOVmHmxAPm9iTW3/2m7joQ1Fv
OKtnPjD+eC3rFGsv+17wtH4zp8X/8KmCGM+q+E895/UKffYr2/H/Pj2z8uc6
bJmGA/jsSS7OTtVItfXgLyZRf5N/iRjzhtvl4LXLGTVhGe/xWBuud9AX8Nkq
4v5Y9IDUH5ziBMJpK/VXGvviqPUHWHdQ+xMWNaaS7yd5q50xAz5SItd1DVoP
/bee+e4pPftHQVHzc7ZV6c/9c7Wh89HLaXGR1Bu2yMLv1vc/NWuh6PlsJa/k
EsfN3p76K9AfPr/AuEQuNXPOQP1ZM53OwgfWP6nTcjyrkzWV72FfbqnvaSbm
KsHEZfIg4532PGBMLu+z1IZewLW3rYfPCT2U6s+g1/CaL6XiwJELsM2HIi6y
3/J/jgHop5X3z7XYXfOaEM+7zL6Gs2LU3vPIgVb5pxefVILXzkKWc5y1Qf+V
iIEu2Ks4lTvdzzK4k6sGuvfhWW+T92ai5iHezoNrdLDnx+eTkO+8sssznTMC
k3eyHkCe+IhYb+pMvx69oj/7r8eR/+V6/uIX9Vn/+AOdNpNFzrAuhPXMqlZw
gRVDToezllzElI97SPQFrvWIvaRgImapD50i/lFWyL7PkN11OL2Of7nfXfNg
u07o/Qm5r4m5oq55w4iz2C3O8UX/c+x6JPPgGTvsXMbZEK8z9vi1T+7yNfc0
VHDWmovAukZ99trtesGCxVjf1me9ulu3HvilcRYihQvM2H5Qt3+zaAiyHEqP
ZRFjjddvAAe3ir2zYC/Pkhww65/Rr7mXQIezwMNO6jF6/Z3L3O55nfn5Dnfq
98aMK7xXaUgwL7dkeHqWKY2JG+hB17K+sl/j3GXugkV5mVUfV1h/+ms98yen
kf9+UdPn/vVaveD5JcLXc0q36tk/8IDjXLg7F2AnYkZe8Wpx7cx/OtiR9e7J
p+/CJPhBZg0KJhL0A/qLSspk8Xw+b/g8jgvt1IWzy9Hrz9nevIuIoXXpMx9i
uxKIct+uVeBhQ+Is8tCTsf9Xk5OzuJfZg9jnLfDkrni1b07p9/XZ/7ATWP9j
PfuHPj3zPz4WdQD4eBfnJQZk/uQX+pzVb+i2hd8xYuLI+SHJG9mWvh8u+K8/
1or3Nhn7qLGLYj+pPpSbel2yj1lF/U1sGs0y+kh3G2InARu0w6cqsQfPmil7
gDWBWKeYRYFvIg62wwYhi6fLbr6TNstZsWIiONx6hfsAKbrepTP3R8DziHe5
f7cZPi/VZ25+R89875eC+3FmPNLej+QLFyPvYrJXW8U9QvJM8kTWftYH2H8H
sYs6gL/Fmcfm3GY0izqAA8/GM17D4szmNHAEtnA35xQVTZS5p8kY8EUayQPI
OyQ1tp/Yy3v5LpvtW1PEGb9g7x4pEB+QjD1NUd9YF5kTs179oc5+eHbZTsSG
qivIF4H7vA7YPtK5OFH3g/FGPLNZzF6AM8D9QdQk9qePQc7j0LcPnLfNwG93
OevyV5mJmHsMxFP24njWLc4VxQzCH+2DnOy/SqVAZI3ScL3TPLfAOS/uySX+
5C9aVvLcjsPNOf9Sc2vmG1X6rA0/0mdt3KPPKH8P2P8R6uPZu/mPLzwI3U+S
36bLY/SU0TK+i7HHvTKJcyd/tJO1mXrC3zeh9870vvVBF3IiC88OMx44n8F7
D4t5J/i/ONfj761ED3qafYFpO84eyD85Q5mx5ceLM98/22Ctu5pAHRwy98TN
Bb0H0Pf2K0d+vete+52cNbP+Ii+2S2qoCP+HOXMmP55QUo+Yde2DjDHEwZie
pzTywbXAwANHDb8jx5cC0U7jDGNEFTPgYwmPcux67bS0fshc1mBiEve0gFcb
kBeV4I+1WIflQPxN5cPzy/MXFzcUOAuH9bBc3F9AnjXj3iriHPfLaUPJH/nE
3FMzZp+FfeBiC8dyBsieg3yanIoYaMRi/SM8wwQcuGWc64lU0QZKQ7xWOZY4
/EXnuBjH3LsQZz6wzJpNuTm/HGY3j2ZFn90I31cSb0T/LfZWeWYucmeezLpl
cFV3G2fBY6E7cxl6V0B/5v5d9XUK8U2NVSX35ohxB2TR+13bKwWvqbIannk/
e7bMF/Q4L0uSJDiu4FucM4Njo96VExPQewSEvY29kB3ptRH2W2PglLPyq8z+
Rsp7w+/uT0wOluyvJ3GJfWqv4Q/OcVGvj3MWKPmixexbYJN1I83C77WItQXf
/e5jgt+jtgJXvMCaIu6LirOS3h7uAw5g7WPfZcphxrvBfd2nkQcRM1YfZLGm
IPer8Lx+9oD0D2xbkZwrtrDvYf/BMxzizI6YZ4e7qLfYF0SNtvi0CoUzYOQE
/XWvObHIB86y1HAZzz+wzos5mi9cDoyNi1maP8qzI/vYc/PdkOMU9YUN9pK3
Qmf6/yZk9oyF/5NxaUnOEwbxbK4hLPKKAeN7h13sffuiFTzbIvoXnmX0aWc4
nxQ12x/NEjzdqy3IApZxD+FOHjV9OlH8Dj9D9yWSP2RhDzHdF1on6ou5V0CO
54uUk+cY/MR9wZDBzR5tCD4awHeUqet+5n1fthhbiKt5sC9zai2fbcwFBD+6
RTm4J07/KT5tucK9Wu7RiN6W2BgOQe5Kqa67OCNNd8P39Y9wfmw5ejmbZ39E
bfVpMaF3cgbEsyG0HeOE9ZS8FDqLmGTMJ/uPLfibvO+Fh7EHlP7MJDY2kGNy
30pcwxkx975V7S3UqpjYp0jubRAjkSc3JE8oBKw4yxqGfqoVf59DTeMs8aaw
V72xL8R7lUC8k2emU8/MUFe8N8Z5SPqe+kh71A9rsd/lbBVynEvn1wK7Ecci
dwPxNp4HUmgL8p07ez8ps3ER35pu7Otot3hejjhADEnHC87y+U72tvfD68d6
0Q/kG0avYWCNcRbFtR3y7ecM2fGd1ZOY/5b6aC65K/y+Hzh+Qm641oq+qV0J
JjjDawVOHCfmZfijq8j7iW85RSsmchaBer6HfZz5DgPzBbfvu5+59lgv4EEZ
ZLjN+kCZiMecFSYxaQgy3oDsLZB9sZHnBu9hX0SbTON5R9RPfuZ3qbXB2L9z
nTSxDZjWT52Nszecy5GTuG9ThnHUfynrLDEQn5uAP53JmnCcuJTkjMTkttQ5
nBG/rrVGPeV17jWpe7a0JeeXyWedYe+d7MfxLOc57vHStuTjsH3JeOlvzJjs
C436K2pjnL0X5wfESnJQ6HEBNgqZc3vDd85KQxfXYHLd5szEnG3yPoO/cP/T
/rT5LM70qHfyXcSdYpMrjufi3AfyIBcKi1LPnSS5UxO+7zfzFPosgfz0W8iY
qbh3Q8+wwSec4qxQEt8HcM3x1LhJxn0xbLOd89nx1jt1jVRvDZ4sfK2DN+6i
Xvj7VNLfm/g75wvJ2QL1bTEwxLELOurJ80LD6tnDqO0PyybMc3JG6MJ1K4ll
Tan7qqyjnC3h2iFeY+YF5/jjrcODruTsaD1y4DBzNsmX56dfZ8zcnReMul5Y
DX67ifeOt/xjtcRMNCdnYm7u85NHit/k3HSyefZrvOX9uqz/A4bW64Q=
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {48., 48.}, PlotRange -> {{0, 48.}, {0, 48.}}, 
             ImageSize -> {30., Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Components: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"(No model overrides)\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {48., 48.}, PlotRange -> {{0, 48.}, {0, 48.}}, 
             ImageSize -> {30., Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Components: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"(No model overrides)\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Xenon: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"1", 
                    
                    RowBox[{
                    "\"mol\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], "mole per mole", 
                    FractionBox["\"Moles\"", "\"Moles\""]}, "Quantity", 
                   SyntaxForm -> Mod], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ThermoFAST64`FeedModel[<|
   "Components" -> <|
     "Xenon" -> <|
       "Id" -> Missing["KeyAbsent", "Xenon"], "Molar Fraction" -> 
        Quantity[1, "Moles"/"Moles"], "Can Form Solid" -> False|>|>, 
    "ModelOverrides" -> {}, "dllArgs" -> <|"n_comps" -> 1, "comp_ids" -> {
        Missing["KeyAbsent", "Xenon"]}, "weights" -> {1}, 
      "can_form_solid" -> {False}, "fluid_model" -> 0, "solid_model" -> 0, 
      "transport_model" -> 0, "hydrate_model" -> 0, "hydrate_type" -> 0|>, 
    "Models" -> <|
     ThermoFAST64`FluidModel -> "Pure Fluid Reference", 
      ThermoFAST64`SolidModel -> "Classical", ThermoFAST64`TransportModel -> 
      "Residual Entropy Scaling", ThermoFAST64`HydrateModel -> "Zhu", 
      ThermoFAST64`HydrateFormationType -> "both"|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.967088767020117*^9, {3.967088810733263*^9, 3.9670888506607857`*^9}, 
   3.967089189162739*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"7167162d-6c70-204a-a9b9-9baa97a60c4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res", "=", 
  RowBox[{"FlashPTSolve", "[", 
   RowBox[{
   "feed", ",", "TriplePointPressure", ",", "TriplePointTemperature"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9670875916732025`*^9, 3.9670876032581234`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[52]:=",ExpressionUUID->"375b7705-0c04-034d-b9e6-d39d396adb93"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["MultiphaseEquilibriumData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {48., 48.}, PlotRange -> {{0, 48.}, {0, 48.}}, 
             ImageSize -> {30., Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Pure Vapour\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Phases: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Components: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {48., 48.}, PlotRange -> {{0, 48.}, {0, 48.}}, 
             ImageSize -> {30., Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Pure Vapour\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Phases: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Components: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Vapour: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ThermoFAST64`MultiphaseEquilibriumData[<|
   "Description" -> "Pure Vapour", 
    "Components" -> <|
     "Xenon" -> <|
       "Id" -> Missing["KeyAbsent", "Xenon"], "Molar Fraction" -> 
        Quantity[1, "Moles"/"Moles"], "Can Form Solid" -> False|>|>, 
    "Phases" -> <|
     "Vapour" -> ThermoFAST64`PhaseData[<|
        "Components" -> {"Xenon"}, "Molar Amount" -> Quantity[1., "Moles"], 
         "Mass Amount" -> Quantity[20.179, "Kilograms"], "Molar Mass" -> 
         Quantity[20.179, "Kilograms"/"Moles"], "Molar Density" -> 
         Quantity[60.896778509830824`, "Meters"^(-3) "Moles"], "Mass Density" -> 
         Quantity[1228.836093549876, "Kilograms" "Meters"^(-3)], "Pressure" -> 
         Quantity[0.081748, "Megapascals"], "Temperature" -> 
         Quantity[161.4, "Kelvins"], "Volume" -> 
         Quantity[0.01642122989869761, "Meters"^3/"Moles"], "Entropy" -> 
         Quantity[103.54825991981761`, "Joules" "Kelvins"^(-1)/"Moles"], 
         "Internal Energy" -> Quantity[3212.8661633510237`, "Joules"/"Moles"],
          "Helmholtz Energy" -> 
         Quantity[-13499.82298770754, "Joules"/"Moles"], "Enthalpy" -> 
         Quantity[4555.268865109786, "Joules"/"Moles"], "Gibbs Energy" -> 
         Quantity[-12157.420285948778`, "Joules"/"Moles"], 
         "Compressibility Factor" -> 1.0003345048352945`, "Heat Capacity Cv" -> 
         Quantity[12.47431674669232, "Joules" "Kelvins"^(-1)/"Moles"], 
         "Heat Capacity Cp" -> 
         Quantity[20.80368296089662, "Joules" "Kelvins"^(-1)/"Moles"], 
         "Speed Of Sound" -> Quantity[333.1394832406623, "Meters"/"Seconds"], 
         "Joule-Thomson Coefficient" -> 
         Quantity[0.44277478065788645`, "Kelvins"/"Megapascals"], 
         "Isothermal Throttling Coefficient" -> 
         Quantity[-9.211346159888604*^-6, "Meters"^3/"Moles"], 
         "Isothermal Expansion Coefficient" -> 1.0003352641587993`, 
         "Isentropic Expansion Coefficient" -> 1.668280364588511, 
         "Volume Expansivity" -> 
         Quantity[0.0061992623377129874`, "Kelvins"^(-1)], 
         "Isothermal Compressibility" -> 
         Quantity[12.228615357018674`, "Megapascals"^(-1)], 
         "Isentropic Compressibility" -> 
         Quantity[7.332529611398312, "Megapascals"^(-1)], 
         "Grueneisen Parameter" -> 0.6673468949913157, "Lower Heating Value" -> 
         Quantity[0., "Kilojoules"/"Moles"], "Higher Heating Value" -> 
         Quantity[0., "Kilojoules"/"Moles"], "Wobbe Index" -> 
         Quantity[0., "Megajoules" "Meters"^(-3)], "Viscosity" -> 
         Quantity[0.000020568083949651105`, "Pascals" "Seconds"], 
         "Thermal Conductivity" -> 
         Quantity[0.03199114574658976, "Kelvins"^(-1) "Meters"^(-1) "Watts"], 
         "Phase Identification Parameter" -> 0.9994417343334974, "Name" -> 
         "Vapour", "Phase Type" -> "Vapour", "Molar Fraction" -> {1.}, 
         "Fugacity" -> {
           Quantity[0.08177531857031238, "Megapascals"]}, 
         "Fugacity Coefficient" -> {1.0003341802895775`}, 
         "Thermodynamic Factor" -> {{0.}}|>]|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9670876376147346`*^9, 3.9670877490217457`*^9, 3.967087934040077*^9, 
   3.967088354432287*^9, {3.9670883881469936`*^9, 3.967088411131508*^9}, 
   3.9670887055753555`*^9, 3.967088773780178*^9, 3.9670888174431458`*^9, 
   3.9670888509521046`*^9, 3.9670891918019695`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"e4b35017-1022-0749-a306-04c64e816d3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"phases", "=", 
  RowBox[{"res", "[", "\"\<Phases\>\"", "]"}]}]], "Input",
 CellChangeTimes->{3.967087928181669*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[53]:=",ExpressionUUID->"3b8af01b-f405-0840-bf8a-09290470032d"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["PhaseData",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
                ImageSizeCache -> {
                 11.966367964725942`, {0., 11.966367964725942`}}], Appearance -> 
               None, BaseStyle -> {}, 
               ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
                "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor,
                 ImageResolution -> {96, 96}], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], DefaultBaseStyle -> "ImageGraphics", 
              ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
              PlotRange -> {{0, 48.}, {0, 48.}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Phase: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Vapour\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Pure \"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Amount: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   
                   TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                    "Quantity"], "SummaryItem"]}]}}, AutoDelete -> False, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
           False, BaselinePosition -> {1, 1}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
         GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
                ImageSizeCache -> {
                 11.966367964725942`, {0., 11.966367964725942`}}], Appearance -> 
               None, BaseStyle -> {}, 
               ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
                "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor,
                 ImageResolution -> {96, 96}], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], DefaultBaseStyle -> "ImageGraphics", 
              ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
              PlotRange -> {{0, 48.}, {0, 48.}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Phase: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Vapour\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Pure \"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Amount: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   
                   TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                    "Quantity"], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Xenon: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"1.`", 
                    
                    RowBox[{
                    "\"mol\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], "moles per mole", 
                    FractionBox["\"Moles\"", "\"Moles\""]}, "Quantity"], 
                   "SummaryItem"]}]}}, AutoDelete -> False, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
           False, BaselinePosition -> {1, 1}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   ThermoFAST64`PhaseData[<|
    "Components" -> {"Xenon"}, "Molar Amount" -> Quantity[1., "Moles"], 
     "Mass Amount" -> Quantity[20.179, "Kilograms"], "Molar Mass" -> 
     Quantity[20.179, "Kilograms"/"Moles"], "Molar Density" -> 
     Quantity[60.896778509830824`, "Meters"^(-3) "Moles"], "Mass Density" -> 
     Quantity[1228.836093549876, "Kilograms" "Meters"^(-3)], "Pressure" -> 
     Quantity[0.081748, "Megapascals"], "Temperature" -> 
     Quantity[161.4, "Kelvins"], "Volume" -> 
     Quantity[0.01642122989869761, "Meters"^3/"Moles"], "Entropy" -> 
     Quantity[103.54825991981761`, "Joules" "Kelvins"^(-1)/"Moles"], 
     "Internal Energy" -> Quantity[3212.8661633510237`, "Joules"/"Moles"], 
     "Helmholtz Energy" -> Quantity[-13499.82298770754, "Joules"/"Moles"], 
     "Enthalpy" -> Quantity[4555.268865109786, "Joules"/"Moles"], 
     "Gibbs Energy" -> Quantity[-12157.420285948778`, "Joules"/"Moles"], 
     "Compressibility Factor" -> 1.0003345048352945`, "Heat Capacity Cv" -> 
     Quantity[12.47431674669232, "Joules" "Kelvins"^(-1)/"Moles"], 
     "Heat Capacity Cp" -> 
     Quantity[20.80368296089662, "Joules" "Kelvins"^(-1)/"Moles"], 
     "Speed Of Sound" -> Quantity[333.1394832406623, "Meters"/"Seconds"], 
     "Joule-Thomson Coefficient" -> 
     Quantity[0.44277478065788645`, "Kelvins"/"Megapascals"], 
     "Isothermal Throttling Coefficient" -> 
     Quantity[-9.211346159888604*^-6, "Meters"^3/"Moles"], 
     "Isothermal Expansion Coefficient" -> 1.0003352641587993`, 
     "Isentropic Expansion Coefficient" -> 1.668280364588511, 
     "Volume Expansivity" -> Quantity[0.0061992623377129874`, "Kelvins"^(-1)],
      "Isothermal Compressibility" -> 
     Quantity[12.228615357018674`, "Megapascals"^(-1)], 
     "Isentropic Compressibility" -> 
     Quantity[7.332529611398312, "Megapascals"^(-1)], "Grueneisen Parameter" -> 
     0.6673468949913157, "Lower Heating Value" -> 
     Quantity[0., "Kilojoules"/"Moles"], "Higher Heating Value" -> 
     Quantity[0., "Kilojoules"/"Moles"], "Wobbe Index" -> 
     Quantity[0., "Megajoules" "Meters"^(-3)], "Viscosity" -> 
     Quantity[0.000020568083949651105`, "Pascals" "Seconds"], 
     "Thermal Conductivity" -> 
     Quantity[0.03199114574658976, "Kelvins"^(-1) "Meters"^(-1) "Watts"], 
     "Phase Identification Parameter" -> 0.9994417343334974, "Name" -> 
     "Vapour", "Phase Type" -> "Vapour", "Molar Fraction" -> {1.}, "Fugacity" -> {
       Quantity[0.08177531857031238, "Megapascals"]}, 
     "Fugacity Coefficient" -> {1.0003341802895775`}, 
     "Thermodynamic Factor" -> {{0.}}|>],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{{3.967087930035406*^9, 3.967087936560137*^9}, {
   3.9670883897808266`*^9, 3.9670884131700573`*^9}, 3.9670887756608295`*^9, 
   3.967088851085657*^9, 3.967089193949518*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"51b6f09e-47f3-2345-8cb2-a5c0a8bc1c8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vapour", "=", 
  RowBox[{"phases", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{3.9670879461306057`*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[54]:=",ExpressionUUID->"7666b316-e8fa-5f43-81ce-cfbae0d6b49e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PhaseData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                11.966367964725942`, {0., 11.966367964725942`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
NxGz7+hYc0mXazuH6566fNpQ5nv/1epyuDogQ2l6PGeAC6OPuIHndk33XJnB
PSQp0LuPv82Z454KWTdB5v2UHTHUCntsH4kr3msZfMcdwFqel7fgcWKpKQNx
Vz6W6GJfirjdAa46SM5HfEr3u5htqtEbX6hr2mJcWA+26/l/tVLPL/7exZmv
vT2MLzM24PtWcOV+xr+wR0PiYmb1Z1NN/1Fm6gE/LoUeJ2iX0epv1GpXCznV
sFhWIxtkcJq/8H/2uBKIqSL2PaF16c8QtTFgzH1Gp7ehe9a/N+v5S/9Gz315
o6588NkAfFyanlcirtTILrx/yOINVRJbIFMX6+QwzAXvQgy1kK+OVn+7vTDP
5ZrXDuwpJ6bc/d5oADIFWOOQB+3gtnFi0vC4R374I0PgAV+iezfxT5erO/Sc
77+r25aU6PC5rnz4P7ro/32RM6yB6TLKnq5lMmcEqtZEfqQ0/qYN1+5NtVXS
/1tcLvdZm81lG63+xFvcVwT9T7hchU3AkiWMJ9Y06/H/PYv8fMeK2sO8x/sv
ZIKPpt4v5lg+rUXMc7/I35wJAg+yd3v13L9dr8/53ut6VsVJHX3T59cB5zPf
/flL8IPou8w8lOvCM5WGa2H6YBriHpyoATHRTNtTfnJWyN+A/D9J+e8n/81F
3+MZO1BPLvMZxFrrRzdDyIE3WfeZ27D5yfRa/wx+U4K94eG+7xYxTt2VI+f1
53bV6nNWbdHnrHlDf3bvz4CLV8Rvd92jin5ip+35b2ex/jCeDf+DY/l7LwAH
L0q1lyywdQ3scZb1weEohO6uDtaBuXPnPtAcOVmHmxAPm9iTW3/2m7joQ1Fv
OKtnPjD+eC3rFGsv+17wtH4zp8X/8KmCGM+q+E895/UKffYr2/H/Pj2z8uc6
bJmGA/jsSS7OTtVItfXgLyZRf5N/iRjzhtvl4LXLGTVhGe/xWBuud9AX8Nkq
4v5Y9IDUH5ziBMJpK/VXGvviqPUHWHdQ+xMWNaaS7yd5q50xAz5SItd1DVoP
/bee+e4pPftHQVHzc7ZV6c/9c7Wh89HLaXGR1Bu2yMLv1vc/NWuh6PlsJa/k
EsfN3p76K9AfPr/AuEQuNXPOQP1ZM53OwgfWP6nTcjyrkzWV72FfbqnvaSbm
KsHEZfIg4532PGBMLu+z1IZewLW3rYfPCT2U6s+g1/CaL6XiwJELsM2HIi6y
3/J/jgHop5X3z7XYXfOaEM+7zL6Gs2LU3vPIgVb5pxefVILXzkKWc5y1Qf+V
iIEu2Ks4lTvdzzK4k6sGuvfhWW+T92ai5iHezoNrdLDnx+eTkO+8sssznTMC
k3eyHkCe+IhYb+pMvx69oj/7r8eR/+V6/uIX9Vn/+AOdNpNFzrAuhPXMqlZw
gRVDToezllzElI97SPQFrvWIvaRgImapD50i/lFWyL7PkN11OL2Of7nfXfNg
u07o/Qm5r4m5oq55w4iz2C3O8UX/c+x6JPPgGTvsXMbZEK8z9vi1T+7yNfc0
VHDWmovAukZ99trtesGCxVjf1me9ulu3HvilcRYihQvM2H5Qt3+zaAiyHEqP
ZRFjjddvAAe3ir2zYC/Pkhww65/Rr7mXQIezwMNO6jF6/Z3L3O55nfn5Dnfq
98aMK7xXaUgwL7dkeHqWKY2JG+hB17K+sl/j3GXugkV5mVUfV1h/+ms98yen
kf9+UdPn/vVaveD5JcLXc0q36tk/8IDjXLg7F2AnYkZe8Wpx7cx/OtiR9e7J
p+/CJPhBZg0KJhL0A/qLSspk8Xw+b/g8jgvt1IWzy9Hrz9nevIuIoXXpMx9i
uxKIct+uVeBhQ+Is8tCTsf9Xk5OzuJfZg9jnLfDkrni1b07p9/XZ/7ATWP9j
PfuHPj3zPz4WdQD4eBfnJQZk/uQX+pzVb+i2hd8xYuLI+SHJG9mWvh8u+K8/
1or3Nhn7qLGLYj+pPpSbel2yj1lF/U1sGs0y+kh3G2InARu0w6cqsQfPmil7
gDWBWKeYRYFvIg62wwYhi6fLbr6TNstZsWIiONx6hfsAKbrepTP3R8DziHe5
f7cZPi/VZ25+R89875eC+3FmPNLej+QLFyPvYrJXW8U9QvJM8kTWftYH2H8H
sYs6gL/Fmcfm3GY0izqAA8/GM17D4szmNHAEtnA35xQVTZS5p8kY8EUayQPI
OyQ1tp/Yy3v5LpvtW1PEGb9g7x4pEB+QjD1NUd9YF5kTs179oc5+eHbZTsSG
qivIF4H7vA7YPtK5OFH3g/FGPLNZzF6AM8D9QdQk9qePQc7j0LcPnLfNwG93
OevyV5mJmHsMxFP24njWLc4VxQzCH+2DnOy/SqVAZI3ScL3TPLfAOS/uySX+
5C9aVvLcjsPNOf9Sc2vmG1X6rA0/0mdt3KPPKH8P2P8R6uPZu/mPLzwI3U+S
36bLY/SU0TK+i7HHvTKJcyd/tJO1mXrC3zeh9870vvVBF3IiC88OMx44n8F7
D4t5J/i/ONfj761ED3qafYFpO84eyD85Q5mx5ceLM98/22Ctu5pAHRwy98TN
Bb0H0Pf2K0d+vete+52cNbP+Ii+2S2qoCP+HOXMmP55QUo+Yde2DjDHEwZie
pzTywbXAwANHDb8jx5cC0U7jDGNEFTPgYwmPcux67bS0fshc1mBiEve0gFcb
kBeV4I+1WIflQPxN5cPzy/MXFzcUOAuH9bBc3F9AnjXj3iriHPfLaUPJH/nE
3FMzZp+FfeBiC8dyBsieg3yanIoYaMRi/SM8wwQcuGWc64lU0QZKQ7xWOZY4
/EXnuBjH3LsQZz6wzJpNuTm/HGY3j2ZFn90I31cSb0T/LfZWeWYucmeezLpl
cFV3G2fBY6E7cxl6V0B/5v5d9XUK8U2NVSX35ohxB2TR+13bKwWvqbIannk/
e7bMF/Q4L0uSJDiu4FucM4Njo96VExPQewSEvY29kB3ptRH2W2PglLPyq8z+
Rsp7w+/uT0wOluyvJ3GJfWqv4Q/OcVGvj3MWKPmixexbYJN1I83C77WItQXf
/e5jgt+jtgJXvMCaIu6LirOS3h7uAw5g7WPfZcphxrvBfd2nkQcRM1YfZLGm
IPer8Lx+9oD0D2xbkZwrtrDvYf/BMxzizI6YZ4e7qLfYF0SNtvi0CoUzYOQE
/XWvObHIB86y1HAZzz+wzos5mi9cDoyNi1maP8qzI/vYc/PdkOMU9YUN9pK3
Qmf6/yZk9oyF/5NxaUnOEwbxbK4hLPKKAeN7h13sffuiFTzbIvoXnmX0aWc4
nxQ12x/NEjzdqy3IApZxD+FOHjV9OlH8Dj9D9yWSP2RhDzHdF1on6ou5V0CO
54uUk+cY/MR9wZDBzR5tCD4awHeUqet+5n1fthhbiKt5sC9zai2fbcwFBD+6
RTm4J07/KT5tucK9Wu7RiN6W2BgOQe5Kqa67OCNNd8P39Y9wfmw5ejmbZ39E
bfVpMaF3cgbEsyG0HeOE9ZS8FDqLmGTMJ/uPLfibvO+Fh7EHlP7MJDY2kGNy
30pcwxkx975V7S3UqpjYp0jubRAjkSc3JE8oBKw4yxqGfqoVf59DTeMs8aaw
V72xL8R7lUC8k2emU8/MUFe8N8Z5SPqe+kh71A9rsd/lbBVynEvn1wK7Ecci
dwPxNp4HUmgL8p07ez8ps3ER35pu7Otot3hejjhADEnHC87y+U72tvfD68d6
0Q/kG0avYWCNcRbFtR3y7ecM2fGd1ZOY/5b6aC65K/y+Hzh+Qm641oq+qV0J
JjjDawVOHCfmZfijq8j7iW85RSsmchaBer6HfZz5DgPzBbfvu5+59lgv4EEZ
ZLjN+kCZiMecFSYxaQgy3oDsLZB9sZHnBu9hX0SbTON5R9RPfuZ3qbXB2L9z
nTSxDZjWT52Nszecy5GTuG9ThnHUfynrLDEQn5uAP53JmnCcuJTkjMTkttQ5
nBG/rrVGPeV17jWpe7a0JeeXyWedYe+d7MfxLOc57vHStuTjsH3JeOlvzJjs
C436K2pjnL0X5wfESnJQ6HEBNgqZc3vDd85KQxfXYHLd5szEnG3yPoO/cP/T
/rT5LM70qHfyXcSdYpMrjufi3AfyIBcKi1LPnSS5UxO+7zfzFPosgfz0W8iY
qbh3Q8+wwSec4qxQEt8HcM3x1LhJxn0xbLOd89nx1jt1jVRvDZ4sfK2DN+6i
Xvj7VNLfm/g75wvJ2QL1bTEwxLELOurJ80LD6tnDqO0PyybMc3JG6MJ1K4ll
Tan7qqyjnC3h2iFeY+YF5/jjrcODruTsaD1y4DBzNsmX56dfZ8zcnReMul5Y
DX67ifeOt/xjtcRMNCdnYm7u85NHit/k3HSyefZrvOX9uqz/A4bW64Q=
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
             PlotRange -> {{0, 48.}, {0, 48.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Phase: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vapour\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Pure \"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Amount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                   "Quantity"], "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                11.966367964725942`, {0., 11.966367964725942`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
             PlotRange -> {{0, 48.}, {0, 48.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Phase: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vapour\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Pure \"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Amount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                   "Quantity"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Xenon: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"1.`", 
                    
                    RowBox[{
                    "\"mol\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], "moles per mole", 
                    FractionBox["\"Moles\"", "\"Moles\""]}, "Quantity"], 
                  "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ThermoFAST64`PhaseData[<|
   "Components" -> {"Xenon"}, "Molar Amount" -> Quantity[1., "Moles"], 
    "Mass Amount" -> Quantity[20.179, "Kilograms"], "Molar Mass" -> 
    Quantity[20.179, "Kilograms"/"Moles"], "Molar Density" -> 
    Quantity[60.896778509830824`, "Meters"^(-3) "Moles"], "Mass Density" -> 
    Quantity[1228.836093549876, "Kilograms" "Meters"^(-3)], "Pressure" -> 
    Quantity[0.081748, "Megapascals"], "Temperature" -> 
    Quantity[161.4, "Kelvins"], "Volume" -> 
    Quantity[0.01642122989869761, "Meters"^3/"Moles"], "Entropy" -> 
    Quantity[103.54825991981761`, "Joules" "Kelvins"^(-1)/"Moles"], 
    "Internal Energy" -> Quantity[3212.8661633510237`, "Joules"/"Moles"], 
    "Helmholtz Energy" -> Quantity[-13499.82298770754, "Joules"/"Moles"], 
    "Enthalpy" -> Quantity[4555.268865109786, "Joules"/"Moles"], 
    "Gibbs Energy" -> Quantity[-12157.420285948778`, "Joules"/"Moles"], 
    "Compressibility Factor" -> 1.0003345048352945`, "Heat Capacity Cv" -> 
    Quantity[12.47431674669232, "Joules" "Kelvins"^(-1)/"Moles"], 
    "Heat Capacity Cp" -> 
    Quantity[20.80368296089662, "Joules" "Kelvins"^(-1)/"Moles"], 
    "Speed Of Sound" -> Quantity[333.1394832406623, "Meters"/"Seconds"], 
    "Joule-Thomson Coefficient" -> 
    Quantity[0.44277478065788645`, "Kelvins"/"Megapascals"], 
    "Isothermal Throttling Coefficient" -> 
    Quantity[-9.211346159888604*^-6, "Meters"^3/"Moles"], 
    "Isothermal Expansion Coefficient" -> 1.0003352641587993`, 
    "Isentropic Expansion Coefficient" -> 1.668280364588511, 
    "Volume Expansivity" -> Quantity[0.0061992623377129874`, "Kelvins"^(-1)], 
    "Isothermal Compressibility" -> 
    Quantity[12.228615357018674`, "Megapascals"^(-1)], 
    "Isentropic Compressibility" -> 
    Quantity[7.332529611398312, "Megapascals"^(-1)], "Grueneisen Parameter" -> 
    0.6673468949913157, "Lower Heating Value" -> 
    Quantity[0., "Kilojoules"/"Moles"], "Higher Heating Value" -> 
    Quantity[0., "Kilojoules"/"Moles"], "Wobbe Index" -> 
    Quantity[0., "Megajoules" "Meters"^(-3)], "Viscosity" -> 
    Quantity[0.000020568083949651105`, "Pascals" "Seconds"], 
    "Thermal Conductivity" -> 
    Quantity[0.03199114574658976, "Kelvins"^(-1) "Meters"^(-1) "Watts"], 
    "Phase Identification Parameter" -> 0.9994417343334974, "Name" -> 
    "Vapour", "Phase Type" -> "Vapour", "Molar Fraction" -> {1.}, "Fugacity" -> {
      Quantity[0.08177531857031238, "Megapascals"]}, 
    "Fugacity Coefficient" -> {1.0003341802895775`}, 
    "Thermodynamic Factor" -> {{0.}}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9670879468215103`*^9, {3.9670883914948196`*^9, 3.9670884145296383`*^9}, 
   3.9670888511469784`*^9, 3.9670891983159904`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"ee46c9cb-69c3-c64c-8bfa-73375057368f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "vapour", "]"}]], "Input",
 CellChangeTimes->{3.9670879589338894`*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[45]:=",ExpressionUUID->"b2124272-1e09-9a4f-839f-81fb5ae79e87"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Components\"\>", ",", "\<\"Molar Amount\"\>", 
   ",", "\<\"Mass Amount\"\>", ",", "\<\"Molar Mass\"\>", 
   ",", "\<\"Molar Density\"\>", ",", "\<\"Mass Density\"\>", 
   ",", "\<\"Pressure\"\>", ",", "\<\"Temperature\"\>", ",", "\<\"Volume\"\>",
    ",", "\<\"Entropy\"\>", ",", "\<\"Internal Energy\"\>", 
   ",", "\<\"Helmholtz Energy\"\>", ",", "\<\"Enthalpy\"\>", 
   ",", "\<\"Gibbs Energy\"\>", ",", "\<\"Compressibility Factor\"\>", 
   ",", "\<\"Heat Capacity Cv\"\>", ",", "\<\"Heat Capacity Cp\"\>", 
   ",", "\<\"Speed Of Sound\"\>", ",", "\<\"Joule-Thomson Coefficient\"\>", 
   ",", "\<\"Isothermal Throttling Coefficient\"\>", 
   ",", "\<\"Isothermal Expansion Coefficient\"\>", 
   ",", "\<\"Isentropic Expansion Coefficient\"\>", 
   ",", "\<\"Volume Expansivity\"\>", 
   ",", "\<\"Isothermal Compressibility\"\>", 
   ",", "\<\"Isentropic Compressibility\"\>", 
   ",", "\<\"Grueneisen Parameter\"\>", ",", "\<\"Lower Heating Value\"\>", 
   ",", "\<\"Higher Heating Value\"\>", ",", "\<\"Wobbe Index\"\>", 
   ",", "\<\"Viscosity\"\>", ",", "\<\"Thermal Conductivity\"\>", 
   ",", "\<\"Phase Identification Parameter\"\>", ",", "\<\"Name\"\>", 
   ",", "\<\"Phase Type\"\>", ",", "\<\"Molar Fraction\"\>", 
   ",", "\<\"Fugacity\"\>", ",", "\<\"Fugacity Coefficient\"\>", 
   ",", "\<\"Thermodynamic Factor\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9670879594145527`*^9, {3.967088393657816*^9, 3.9670884174914627`*^9}, 
   3.967088851213663*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"ede064f1-8465-cb4d-8080-39305702c8bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vapour", "[", "\"\<Enthalpy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9670879808140736`*^9, 3.9670879947852*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[55]:=",ExpressionUUID->"5e246978-0bb2-e944-8a16-6ba3cad333ee"],

Cell[BoxData[
 TemplateBox[{"4555.268865109786`", 
   RowBox[{
    "\"J\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"mol\""}], 
   "joules per mole", 
   FractionBox["\"Joules\"", "\"Moles\""]},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.9670879823687077`*^9, 3.9670879954898567`*^9}, {
   3.9670883955671577`*^9, 3.9670884189876347`*^9}, 3.9670885517102184`*^9, 
   3.9670888512714577`*^9, 3.967089203507492*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"2ea2fdc7-ff5c-a04c-9fda-1e307c1b0390"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vapour", "[", "\"\<Entropy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9670880623098106`*^9, 3.967088066185192*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[56]:=",ExpressionUUID->"e006ff75-d0ca-2042-97fd-82ddfed4bc11"],

Cell[BoxData[
 TemplateBox[{"103.54825991981761`", 
   RowBox[{
    "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"K\"", 
     "\[ThinSpace]", "\"mol\"", "\[InvisibleSpace]", "\")\""}], 
   "joules per kelvin mole", 
   FractionBox["\"Joules\"", 
    RowBox[{"\"Kelvins\"", " ", "\"Moles\""}]]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.9670880668955917`*^9, 3.967088427769554*^9, 
  3.9670885535612545`*^9, 3.9670888513407135`*^9, 3.9670892052703094`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"35e56740-f133-db4b-bf78-17705ddd4610"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Argon", "Chapter",
 CellChangeTimes->{{3.9644934318527985`*^9, 3.9644934322480493`*^9}, {
  3.967088326991247*^9, 3.9670883280456905`*^9}, {3.967089161122692*^9, 
  3.9670891616781826`*^9}, {3.967089261098858*^9, 
  3.967089262363577*^9}},ExpressionUUID->"60dcda32-2ee1-4444-8a48-\
9d7b558bd2bb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TriplePointTemperature", " ", "=", " ", 
  "83.8"}], "\[IndentingNewLine]", 
 RowBox[{"TriplePointPressure", " ", "=", " ", "0.0689"}]}], "Input",
 CellChangeTimes->{{3.967087507783106*^9, 3.9670875351623383`*^9}, {
   3.96708833042227*^9, 3.967088343366186*^9}, 3.9670884074120617`*^9, {
   3.9670891704900875`*^9, 3.967089182689247*^9}, {3.967089266195114*^9, 
   3.967089270743017*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[57]:=",ExpressionUUID->"cc7ed09d-0afc-6b40-9559-0ebbb335c971"],

Cell[BoxData["83.8`"], "Output",
 CellChangeTimes->{{3.9670876058278637`*^9, 3.967087630944626*^9}, 
   3.9670877489543552`*^9, 3.9670879047225857`*^9, 3.9670883501506805`*^9, 
   3.9670884078149815`*^9, 3.9670886745332394`*^9, 3.967088808765009*^9, 
   3.9670888504971046`*^9, 3.967089186163639*^9, 3.967089276117777*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"8c296df1-08b2-7942-8067-b46018b816b6"],

Cell[BoxData["0.0689`"], "Output",
 CellChangeTimes->{{3.9670876058278637`*^9, 3.967087630944626*^9}, 
   3.9670877489543552`*^9, 3.9670879047225857`*^9, 3.9670883501506805`*^9, 
   3.9670884078149815`*^9, 3.9670886745332394`*^9, 3.967088808765009*^9, 
   3.9670888504971046`*^9, 3.967089186163639*^9, 3.9670892761277733`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"5f812228-cc98-b24d-ba1c-4bdb3cbd8e6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set up Feed", "Subsubsection",
 CellChangeTimes->{{3.963652450409743*^9, 3.963652453094388*^9}, {
  3.963655585533475*^9, 
  3.96365559073031*^9}},ExpressionUUID->"bb2ce85a-5caf-4946-89ac-\
7c4bea9f1537"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "FeedModel"}], "\[IndentingNewLine]", 
 RowBox[{"feed", "=", 
  RowBox[{"FeedModel", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Argon\>\"", "->", 
     RowBox[{"{", 
      RowBox[{"1", ",", "False"}], "}"}]}], "}"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"adjust", " ", "species", " ", "name"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.9579052602076015`*^9, 3.957905262297386*^9}, {
  3.9636105984331636`*^9, 3.963610604047813*^9}, {3.9636106394404974`*^9, 
  3.96361075054129*^9}, {3.963611622494367*^9, 3.963611622785097*^9}, {
  3.963652454621723*^9, 3.9636524606439705`*^9}, {3.9636525238606997`*^9, 
  3.963652526874334*^9}, {3.964511695400435*^9, 3.9645116956946745`*^9}, {
  3.9670883472252483`*^9, 3.9670883483969936`*^9}, {3.967088765363657*^9, 
  3.96708876622719*^9}, {3.9670888213882236`*^9, 3.9670888245699215`*^9}, {
  3.9670891878940086`*^9, 3.9670891884591465`*^9}, {3.9670892730828686`*^9, 
  3.9670892741813107`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[59]:=",ExpressionUUID->"169c0af1-3eea-0649-b51e-d5e5fc5634d3"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FeedModel[mixture, opts] returns an object \
containing feed composition and model parameters. The mixture argument is a \
list of rules of the form \\\"<<compName>>\\\" -> <<molarFraction>> or \
\\\"<<compName>>\\\" -> {<<molarFraction>>,<<canFormSolid>>}.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  
                  StyleBox["\<\" SubValue Definitions\"\>", 
                   "InformationRowLabel",
                   StripOnInput->False],
                  "\"SubValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "SubValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    "\"Properties\"", "]"}], ":=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", "ThermoFAST64`Private`assoc", "]"}], 
                    ",", 
                    RowBox[{"Keys", "[", "\"Components\"", "]"}], ",", 
                    RowBox[{"Keys", "[", "\"Models\"", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"ComponentNames\"", ",", "\"Count\""}], "}"}]}],
                     "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    "ThermoFAST64`Private`key_String", "]"}], "/;", 
                    RowBox[{"KeyExistsQ", "[", 
                    
                    RowBox[{
                    "ThermoFAST64`Private`assoc", ",", 
                    "ThermoFAST64`Private`key"}], "]"}]}], ":=", 
                    
                    RowBox[{
                    "ThermoFAST64`Private`assoc", "[", 
                    "ThermoFAST64`Private`key", "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    "ThermoFAST64`Private`key_String", "]"}], "/;", 
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`assoc", "[", 
                    "\"Components\"", "]"}], ",", 
                    "ThermoFAST64`Private`key"}], "]"}]}], ":=", 
                    RowBox[{
                    RowBox[{
                    "ThermoFAST64`Private`assoc", "[", "\"Components\"", 
                    "]"}], "[", "ThermoFAST64`Private`key", "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    "ThermoFAST64`Private`key_", "]"}], "/;", 
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`assoc", "[", "\"Models\"", 
                    "]"}], ",", "ThermoFAST64`Private`key"}], "]"}]}], ":=", 
                    RowBox[{
                    
                    RowBox[{
                    "ThermoFAST64`Private`assoc", "[", "\"Models\"", "]"}], 
                    "[", "ThermoFAST64`Private`key", "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    "\"ComponentNames\"", "]"}], ":=", 
                    RowBox[{"Keys", "[", 
                    
                    RowBox[{
                    "ThermoFAST64`Private`assoc", "[", "\"Components\"", 
                    "]"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    "\"Count\"", "]"}], ":=", 
                    RowBox[{"Length", "[", 
                    
                    RowBox[{
                    "ThermoFAST64`Private`assoc", "[", "\"Components\"", 
                    "]"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FeedModel", "[", 
                    "ThermoFAST64`Private`assoc_Association", "]"}], "[", 
                    RowBox[{
                    RowBox[{"All", "|", "\"Components\""}], ",", 
                    "ThermoFAST64`Private`key_"}], "]"}], ":=", 
                    RowBox[{
                    
                    RowBox[{
                    "ThermoFAST64`Private`assoc", "[", "\"Components\"", 
                    "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "ThermoFAST64`Private`key"}], 
                    "\[RightDoubleBracket]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]},
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  
                  StyleBox["\<\" DownValue Definitions\"\>", 
                   "InformationRowLabel",
                   StripOnInput->False],
                  "\"DownValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "DownValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FeedModel", "[", 
                    RowBox[{"ThermoFAST64`Private`mixture_List", ",", 
                    RowBox[{"ThermoFAST64`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ThermoFAST64`Private`nComps", "=", 
                    
                    RowBox[{"Length", "[", "ThermoFAST64`Private`mixture", 
                    "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`compNames", "=", 
                    
                    RowBox[{"ThermoFAST64`Private`mixture", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ",", 
                    RowBox[{"ThermoFAST64`Private`compIds", "=", 
                    
                    RowBox[{"ThermoFAST64`Private`$BuiltinComponentCodeLU", 
                    "/@", 
                    
                    RowBox[{"ThermoFAST64`Private`mixture", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
                    ",", 
                    RowBox[{"ThermoFAST64`Private`weights", "=", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`mixture", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ThermoFAST64`Private`w1_", ",", "_"}], "}"}], 
                    "\[RuleDelayed]", "ThermoFAST64`Private`w1"}], ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}], ",", 
                    
                    RowBox[{"ThermoFAST64`Private`w2_Quantity", 
                    "\[RuleDelayed]", 
                    RowBox[{"QuantityMagnitude", "[", 
                    RowBox[{"ThermoFAST64`Private`w2", ",", 
                    FractionBox["\"Moles\"", "\"Moles\""]}], "]"}]}], ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`canFormSolidQ", "=", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`mixture", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "ThermoFAST64`Private`q_"}], "}"}], 
                    "\[RuleDelayed]", "ThermoFAST64`Private`q"}], ",", 
                    RowBox[{"_", "\[Rule]", "True"}]}], "}"}], ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`fluidModel", "=", 
                    RowBox[{"OptionValue", "[", "FluidModel", "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`solidModel", "=", 
                    RowBox[{"OptionValue", "[", "SolidModel", "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`hydrateModel", "=", 
                    RowBox[{"OptionValue", "[", "HydrateModel", "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`hydrateType", "=", 
                    RowBox[{"OptionValue", "[", "HydrateType", "]"}]}], ",", 
                    RowBox[{"ThermoFAST64`Private`transportModel", "=", 
                    RowBox[{"OptionValue", "[", "TransportModel", "]"}]}], 
                    ",", "ThermoFAST64`Private`fluidModelId", ",", 
                    "ThermoFAST64`Private`solidModelId", ",", 
                    "ThermoFAST64`Private`hydrateModelId", ",", 
                    "ThermoFAST64`Private`hydrateTypeId", ",", 
                    "ThermoFAST64`Private`transportModelId", ",", 
                    "ThermoFAST64`Private`res", ",", 
                    "ThermoFAST64`Private`modelOverrides", ",", 
                    "ThermoFAST64`Private`modelValues", ",", 
                    "ThermoFAST64`Private`feed"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"ThermoFAST64`Private`compIds", ",", "$Failed"}], 
                    "]"}]}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"ThermoFAST64`Private`fluidModelId", "=", 
                    RowBox[{"ThermoFAST64`Private`getModelId", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`fluidModel", ",", 
                    "ThermoFAST64`Private`$FluidModelCodeLU"}], "]"}]}], ";", 
                    RowBox[{"ThermoFAST64`Private`solidModelId", "=", 
                    RowBox[{"ThermoFAST64`Private`getModelId", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`solidModel", ",", 
                    "ThermoFAST64`Private`$SolidModelCodeLU"}], "]"}]}], ";", 
                    RowBox[{"ThermoFAST64`Private`hydrateModelId", "=", 
                    RowBox[{"ThermoFAST64`Private`getModelId", "[", 
                    RowBox[{"ThermoFAST64`Private`hydrateModel", ",", 
                    "ThermoFAST64`Private`$HydrateModelCodeLU"}], "]"}]}], 
                    ";", 
                    RowBox[{"ThermoFAST64`Private`hydrateTypeId", "=", 
                    RowBox[{"ThermoFAST64`Private`getModelId", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`hydrateType", ",", 
                    "ThermoFAST64`Private`$HydrateFormationTypeCodeLU"}], 
                    "]"}]}], ";", 
                    RowBox[{"ThermoFAST64`Private`transportModelId", "=", 
                    RowBox[{"ThermoFAST64`Private`getModelId", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`transportModel", ",", 
                    "ThermoFAST64`Private`$TransportModelCodeLU"}], "]"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"FreeQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"ThermoFAST64`Private`fluidModelId", ",", 
                    "ThermoFAST64`Private`solidModelId", ",", 
                    "ThermoFAST64`Private`hydrateModelId", ",", 
                    "ThermoFAST64`Private`hydrateTypeId", ",", 
                    "ThermoFAST64`Private`transportModelId"}], "}"}], ",", 
                    "_Missing"}], "]"}]}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"ThermoFAST64`Private`modelOverrides", "=", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"FluidModel", ",", "SolidModel", ",", 
                    "HydrateModel", ",", "HydrateFormationType", ",", 
                    "TransportModel"}], "}"}], "\[Rule]", 
                    RowBox[{"{", 
                    
                    RowBox[{"ThermoFAST64`Private`fluidModel", ",", 
                    "ThermoFAST64`Private`solidModel", ",", 
                    "ThermoFAST64`Private`hydrateModel", ",", 
                    "ThermoFAST64`Private`hydrateType", ",", 
                    "ThermoFAST64`Private`transportModel"}], "}"}]}], "]"}], 
                    ",", 
                    RowBox[{"_", "\[Rule]", "Automatic"}]}], "]"}]}], ";", 
                    RowBox[{"ThermoFAST64`Private`feed", "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"Components\"", "\[Rule]", 
                    RowBox[{"Association", "@@", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`compNames", 
                    "\[LeftDoubleBracket]", "ThermoFAST64`Private`i", 
                    "\[RightDoubleBracket]"}], "\[Rule]", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"Id\"", "\[Rule]", 
                    
                    RowBox[{"ThermoFAST64`Private`compIds", 
                    "\[LeftDoubleBracket]", "ThermoFAST64`Private`i", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"\"Molar Fraction\"", "\[Rule]", 
                    RowBox[{"Quantity", "[", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`weights", 
                    "\[LeftDoubleBracket]", "ThermoFAST64`Private`i", 
                    "\[RightDoubleBracket]"}], ",", 
                    FractionBox["\"Moles\"", "\"Moles\""]}], "]"}]}], ",", 
                    RowBox[{"\"Can Form Solid\"", "\[Rule]", 
                    
                    RowBox[{"ThermoFAST64`Private`canFormSolidQ", 
                    "\[LeftDoubleBracket]", "ThermoFAST64`Private`i", 
                    "\[RightDoubleBracket]"}]}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ThermoFAST64`Private`i", ",", 
                    
                    RowBox[{"Length", "[", "ThermoFAST64`Private`mixture", 
                    "]"}]}], "}"}]}], "]"}]}]}], ",", 
                    
                    RowBox[{"\"ModelOverrides\"", "\[Rule]", 
                    "ThermoFAST64`Private`modelOverrides"}], ",", 
                    RowBox[{"\"dllArgs\"", "\[Rule]", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    
                    RowBox[{"\"n_comps\"", "\[Rule]", 
                    "ThermoFAST64`Private`nComps"}], ",", 
                    
                    RowBox[{"\"comp_ids\"", "\[Rule]", 
                    "ThermoFAST64`Private`compIds"}], ",", 
                    
                    RowBox[{"\"weights\"", "\[Rule]", 
                    "ThermoFAST64`Private`weights"}], ",", 
                    
                    RowBox[{"\"can_form_solid\"", "\[Rule]", 
                    "ThermoFAST64`Private`canFormSolidQ"}], ",", 
                    
                    RowBox[{"\"fluid_model\"", "\[Rule]", 
                    "ThermoFAST64`Private`fluidModelId"}], ",", 
                    
                    RowBox[{"\"solid_model\"", "\[Rule]", 
                    "ThermoFAST64`Private`solidModelId"}], ",", 
                    
                    RowBox[{"\"transport_model\"", "\[Rule]", 
                    "ThermoFAST64`Private`transportModelId"}], ",", 
                    
                    RowBox[{"\"hydrate_model\"", "\[Rule]", 
                    "ThermoFAST64`Private`hydrateModelId"}], ",", 
                    
                    RowBox[{"\"hydrate_type\"", "\[Rule]", 
                    "ThermoFAST64`Private`hydrateTypeId"}]}], "]"}]}]}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ThermoFAST64`Private`setDllUserFeed", "[", 
                    
                    RowBox[{"FeedModel", "[", "ThermoFAST64`Private`feed", 
                    "]"}], "]"}], "===", "$Failed"}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"ThermoFAST64`Private`modelValues", "=", 
                    RowBox[{"TFGetFeedModels", "[", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`modelValues", "===", 
                    "$Failed"}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"ThermoFAST64`Private`feed", "[", "\"Models\"", 
                    "]"}], "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"FluidModel", "\[Rule]", 
                    RowBox[{"ThermoFAST64`Private`$FluidModelNameLU", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`modelValues", "[", 
                    "\"fluid_model\"", "]"}], "]"}]}], ",", 
                    RowBox[{"SolidModel", "\[Rule]", 
                    RowBox[{"ThermoFAST64`Private`$SolidModelNameLU", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`modelValues", "[", 
                    "\"solid_model\"", "]"}], "]"}]}], ",", 
                    RowBox[{"TransportModel", "\[Rule]", 
                    RowBox[{"ThermoFAST64`Private`$TransportModelNameLU", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`modelValues", "[", 
                    "\"transport_model\"", "]"}], "]"}]}], ",", 
                    RowBox[{"HydrateModel", "\[Rule]", 
                    RowBox[{"ThermoFAST64`Private`$HydrateModelNameLU", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`modelValues", "[", 
                    "\"hydrate_model\"", "]"}], "]"}]}], ",", 
                    RowBox[{"HydrateFormationType", "\[Rule]", 
                    
                    RowBox[{
                    "ThermoFAST64`Private`$HydrateFormationTypeNameLU", "[", 
                    
                    RowBox[{"ThermoFAST64`Private`modelValues", "[", 
                    "\"hydrate_type\"", "]"}], "]"}]}]}], "]"}]}], ";", 
                    
                    RowBox[{"FeedModel", "[", "ThermoFAST64`Private`feed", 
                    "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"FluidModel", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"SolidModel", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"HydrateModel", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"HydrateType", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TransportModel", "\[Rule]", "Automatic"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "5", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"FluidModel", "\[Rule]", "Automatic"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "5", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ThermoFAST64`FeedModel\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FeedModel[mixture, opts] returns an object \
containing feed composition and model parameters. The mixture argument is a \
list of rules of the form \\\"<<compName>>\\\" -> <<molarFraction>> or \
\\\"<<compName>>\\\" -> {<<molarFraction>>,<<canFormSolid>>}.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{11., {4., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{11., {4., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FeedModel[mixture, opts] returns an object containing feed composition \
and model parameters. The mixture argument is a list of rules of the form \
\"<<compName>>\" -> <<molarFraction>> or \"<<compName>>\" -> \
{<<molarFraction>>,<<canFormSolid>>}.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ThermoFAST64`FeedModel, {ThermoFAST64`FeedModel[
         Pattern[ThermoFAST64`Private`mixture, 
          Blank[List]], 
         Pattern[ThermoFAST64`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{ThermoFAST64`Private`nComps = 
          Length[ThermoFAST64`Private`mixture], 
          ThermoFAST64`Private`compNames = 
          Part[ThermoFAST64`Private`mixture, All, 1], 
          ThermoFAST64`Private`compIds = 
          Map[ThermoFAST64`Private`$BuiltinComponentCodeLU, 
            Part[ThermoFAST64`Private`mixture, All, 1]], 
          ThermoFAST64`Private`weights = Replace[
            Replace[
             Part[ThermoFAST64`Private`mixture, All, 2], {
               Pattern[ThermoFAST64`Private`w1, 
                Blank[]], 
               Blank[]} :> ThermoFAST64`Private`w1, {1}], 
            Pattern[ThermoFAST64`Private`w2, 
              Blank[Quantity]] :> 
            QuantityMagnitude[ThermoFAST64`Private`w2, "Moles"/"Moles"], {1}],
           ThermoFAST64`Private`canFormSolidQ = Replace[
            Part[ThermoFAST64`Private`mixture, All, 2], {{
               Blank[], 
               Pattern[ThermoFAST64`Private`q, 
                Blank[]]} :> ThermoFAST64`Private`q, Blank[] -> True}, {1}], 
          ThermoFAST64`Private`fluidModel = 
          OptionValue[ThermoFAST64`FluidModel], 
          ThermoFAST64`Private`solidModel = 
          OptionValue[ThermoFAST64`SolidModel], 
          ThermoFAST64`Private`hydrateModel = 
          OptionValue[ThermoFAST64`HydrateModel], 
          ThermoFAST64`Private`hydrateType = 
          OptionValue[ThermoFAST64`HydrateType], 
          ThermoFAST64`Private`transportModel = 
          OptionValue[ThermoFAST64`TransportModel], 
          ThermoFAST64`Private`fluidModelId, 
          ThermoFAST64`Private`solidModelId, 
          ThermoFAST64`Private`hydrateModelId, 
          ThermoFAST64`Private`hydrateTypeId, 
          ThermoFAST64`Private`transportModelId, ThermoFAST64`Private`res, 
          ThermoFAST64`Private`modelOverrides, 
          ThermoFAST64`Private`modelValues, ThermoFAST64`Private`feed}, If[
           Not[
            FreeQ[ThermoFAST64`Private`compIds, $Failed]], 
           Return[$Failed]]; 
         ThermoFAST64`Private`fluidModelId = 
          ThermoFAST64`Private`getModelId[
           ThermoFAST64`Private`fluidModel, 
            ThermoFAST64`Private`$FluidModelCodeLU]; 
         ThermoFAST64`Private`solidModelId = 
          ThermoFAST64`Private`getModelId[
           ThermoFAST64`Private`solidModel, 
            ThermoFAST64`Private`$SolidModelCodeLU]; 
         ThermoFAST64`Private`hydrateModelId = 
          ThermoFAST64`Private`getModelId[
           ThermoFAST64`Private`hydrateModel, 
            ThermoFAST64`Private`$HydrateModelCodeLU]; 
         ThermoFAST64`Private`hydrateTypeId = 
          ThermoFAST64`Private`getModelId[
           ThermoFAST64`Private`hydrateType, 
            ThermoFAST64`Private`$HydrateFormationTypeCodeLU]; 
         ThermoFAST64`Private`transportModelId = 
          ThermoFAST64`Private`getModelId[
           ThermoFAST64`Private`transportModel, 
            ThermoFAST64`Private`$TransportModelCodeLU]; If[
           Not[
            
            FreeQ[{ThermoFAST64`Private`fluidModelId, 
              ThermoFAST64`Private`solidModelId, 
              ThermoFAST64`Private`hydrateModelId, 
              ThermoFAST64`Private`hydrateTypeId, 
              ThermoFAST64`Private`transportModelId}, 
             Blank[Missing]]], 
           Return[$Failed]]; ThermoFAST64`Private`modelOverrides = DeleteCases[
            
            Thread[{ThermoFAST64`FluidModel, ThermoFAST64`SolidModel, 
               ThermoFAST64`HydrateModel, ThermoFAST64`HydrateFormationType, 
               ThermoFAST64`TransportModel} -> {
              ThermoFAST64`Private`fluidModel, 
               ThermoFAST64`Private`solidModel, 
               ThermoFAST64`Private`hydrateModel, 
               ThermoFAST64`Private`hydrateType, 
               ThermoFAST64`Private`transportModel}], Blank[] -> Automatic]; 
         ThermoFAST64`Private`feed = <|"Components" -> Apply[Association, 
              Table[
              Part[ThermoFAST64`Private`compNames, 
                 ThermoFAST64`Private`i] -> <|
                "Id" -> Part[
                  ThermoFAST64`Private`compIds, ThermoFAST64`Private`i], 
                 "Molar Fraction" -> Quantity[
                   Part[ThermoFAST64`Private`weights, ThermoFAST64`Private`i],
                    "Moles"/"Moles"], "Can Form Solid" -> 
                 Part[ThermoFAST64`Private`canFormSolidQ, 
                   ThermoFAST64`Private`i]|>, {ThermoFAST64`Private`i, 
                Length[ThermoFAST64`Private`mixture]}]], "ModelOverrides" -> 
            ThermoFAST64`Private`modelOverrides, 
            "dllArgs" -> <|
             "n_comps" -> ThermoFAST64`Private`nComps, "comp_ids" -> 
              ThermoFAST64`Private`compIds, "weights" -> 
              ThermoFAST64`Private`weights, "can_form_solid" -> 
              ThermoFAST64`Private`canFormSolidQ, "fluid_model" -> 
              ThermoFAST64`Private`fluidModelId, "solid_model" -> 
              ThermoFAST64`Private`solidModelId, "transport_model" -> 
              ThermoFAST64`Private`transportModelId, "hydrate_model" -> 
              ThermoFAST64`Private`hydrateModelId, "hydrate_type" -> 
              ThermoFAST64`Private`hydrateTypeId|>|>; 
         If[ThermoFAST64`Private`setDllUserFeed[
             ThermoFAST64`FeedModel[ThermoFAST64`Private`feed]] === $Failed, 
           Return[$Failed]]; 
         ThermoFAST64`Private`modelValues = ThermoFAST64`TFGetFeedModels[]; 
         If[ThermoFAST64`Private`modelValues === $Failed, 
           Return[$Failed]]; 
         ThermoFAST64`Private`feed["Models"] = <|
           ThermoFAST64`FluidModel -> ThermoFAST64`Private`$FluidModelNameLU[
              ThermoFAST64`Private`modelValues["fluid_model"]], 
            ThermoFAST64`SolidModel -> ThermoFAST64`Private`$SolidModelNameLU[
              ThermoFAST64`Private`modelValues["solid_model"]], 
            ThermoFAST64`TransportModel -> 
            ThermoFAST64`Private`$TransportModelNameLU[
              ThermoFAST64`Private`modelValues["transport_model"]], 
            ThermoFAST64`HydrateModel -> 
            ThermoFAST64`Private`$HydrateModelNameLU[
              ThermoFAST64`Private`modelValues["hydrate_model"]], 
            ThermoFAST64`HydrateFormationType -> 
            ThermoFAST64`Private`$HydrateFormationTypeNameLU[
              ThermoFAST64`Private`modelValues["hydrate_type"]]|>; 
         ThermoFAST64`FeedModel[ThermoFAST64`Private`feed]]}], "SubValues" -> 
    Information`InformationValueForm[
     SubValues, ThermoFAST64`FeedModel, {ThermoFAST64`FeedModel[
         Pattern[ThermoFAST64`Private`assoc, 
          Blank[Association]]]["Properties"] :> Join[
         Keys[ThermoFAST64`Private`assoc], 
         Keys["Components"], 
         Keys["Models"], {"ComponentNames", "Count"}], Condition[
         ThermoFAST64`FeedModel[
          Pattern[ThermoFAST64`Private`assoc, 
           Blank[Association]]][
          Pattern[ThermoFAST64`Private`key, 
           Blank[String]]], 
         KeyExistsQ[ThermoFAST64`Private`assoc, ThermoFAST64`Private`key]] :> 
       ThermoFAST64`Private`assoc[ThermoFAST64`Private`key], Condition[
         ThermoFAST64`FeedModel[
          Pattern[ThermoFAST64`Private`assoc, 
           Blank[Association]]][
          Pattern[ThermoFAST64`Private`key, 
           Blank[String]]], 
         KeyExistsQ[
          ThermoFAST64`Private`assoc["Components"], 
          ThermoFAST64`Private`key]] :> 
       ThermoFAST64`Private`assoc["Components"][ThermoFAST64`Private`key], 
       Condition[
         ThermoFAST64`FeedModel[
          Pattern[ThermoFAST64`Private`assoc, 
           Blank[Association]]][
          Pattern[ThermoFAST64`Private`key, 
           Blank[]]], 
         KeyExistsQ[
          ThermoFAST64`Private`assoc["Models"], ThermoFAST64`Private`key]] :> 
       ThermoFAST64`Private`assoc["Models"][ThermoFAST64`Private`key], 
       ThermoFAST64`FeedModel[
         Pattern[ThermoFAST64`Private`assoc, 
          Blank[Association]]]["ComponentNames"] :> Keys[
         ThermoFAST64`Private`assoc["Components"]], ThermoFAST64`FeedModel[
         Pattern[ThermoFAST64`Private`assoc, 
          Blank[Association]]]["Count"] :> Length[
         ThermoFAST64`Private`assoc["Components"]], ThermoFAST64`FeedModel[
         Pattern[ThermoFAST64`Private`assoc, 
          Blank[Association]]][
         Alternatives[All, "Components"], 
         Pattern[ThermoFAST64`Private`key, 
          Blank[]]] :> Part[
         ThermoFAST64`Private`assoc["Components"], All, 
         ThermoFAST64`Private`key]}], "DefaultValues" -> None, "NValues" -> 
    None, "FormatValues" -> None, 
    "Options" -> {
     ThermoFAST64`FluidModel -> Automatic, ThermoFAST64`SolidModel -> 
      Automatic, ThermoFAST64`HydrateModel -> Automatic, 
      ThermoFAST64`HydrateType -> Automatic, ThermoFAST64`TransportModel -> 
      Automatic}, "Attributes" -> {}, "FullName" -> 
    "ThermoFAST64`FeedModel"|>, False]]], "Output",
 CellChangeTimes->{
  3.967088767020117*^9, {3.967088810733263*^9, 3.9670888506607857`*^9}, 
   3.967089189150751*^9, 3.967089278023245*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"a858a49c-564f-7849-a868-af5e09e7f608"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["FeedModel",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {48., 48.}, PlotRange -> {{0, 48.}, {0, 48.}}, 
             ImageSize -> {30., Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Components: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"(No model overrides)\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {48., 48.}, PlotRange -> {{0, 48.}, {0, 48.}}, 
             ImageSize -> {30., Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Components: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"(No model overrides)\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argon: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"1", 
                    
                    RowBox[{
                    "\"mol\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], "mole per mole", 
                    FractionBox["\"Moles\"", "\"Moles\""]}, "Quantity", 
                   SyntaxForm -> Mod], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ThermoFAST64`FeedModel[<|
   "Components" -> <|
     "Argon" -> <|
       "Id" -> 21, "Molar Fraction" -> Quantity[1, "Moles"/"Moles"], 
        "Can Form Solid" -> False|>|>, "ModelOverrides" -> {}, 
    "dllArgs" -> <|
     "n_comps" -> 1, "comp_ids" -> {21}, "weights" -> {1}, 
      "can_form_solid" -> {False}, "fluid_model" -> 0, "solid_model" -> 0, 
      "transport_model" -> 0, "hydrate_model" -> 0, "hydrate_type" -> 0|>, 
    "Models" -> <|
     ThermoFAST64`FluidModel -> "Pure Fluid Reference", 
      ThermoFAST64`SolidModel -> "Classical", ThermoFAST64`TransportModel -> 
      "Residual Entropy Scaling", ThermoFAST64`HydrateModel -> "Zhu", 
      ThermoFAST64`HydrateFormationType -> "both"|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.967088767020117*^9, {3.967088810733263*^9, 3.9670888506607857`*^9}, 
   3.967089189150751*^9, 3.967089278040245*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"dcc4d650-c1bd-d14c-ad92-b7e11c9b619a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res", "=", 
  RowBox[{"FlashPTSolve", "[", 
   RowBox[{
   "feed", ",", "TriplePointPressure", ",", "TriplePointTemperature"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9670875916732025`*^9, 3.9670876032581234`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[61]:=",ExpressionUUID->"2cb9e728-e712-4d43-b46a-6b45f9bd1dc7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["MultiphaseEquilibriumData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {48., 48.}, PlotRange -> {{0, 48.}, {0, 48.}}, 
             ImageSize -> {30., Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Pure Liquid\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Phases: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Components: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
NxGz7+hYc0mXazuH6566fNpQ5nv/1epyuDogQ2l6PGeAC6OPuIHndk33XJnB
PSQp0LuPv82Z454KWTdB5v2UHTHUCntsH4kr3msZfMcdwFqel7fgcWKpKQNx
Vz6W6GJfirjdAa46SM5HfEr3u5htqtEbX6hr2mJcWA+26/l/tVLPL/7exZmv
vT2MLzM24PtWcOV+xr+wR0PiYmb1Z1NN/1Fm6gE/LoUeJ2iX0epv1GpXCznV
sFhWIxtkcJq/8H/2uBKIqSL2PaF16c8QtTFgzH1Gp7ehe9a/N+v5S/9Gz315
o6588NkAfFyanlcirtTILrx/yOINVRJbIFMX6+QwzAXvQgy1kK+OVn+7vTDP
5ZrXDuwpJ6bc/d5oADIFWOOQB+3gtnFi0vC4R374I0PgAV+iezfxT5erO/Sc
77+r25aU6PC5rnz4P7ro/32RM6yB6TLKnq5lMmcEqtZEfqQ0/qYN1+5NtVXS
/1tcLvdZm81lG63+xFvcVwT9T7hchU3AkiWMJ9Y06/H/PYv8fMeK2sO8x/sv
ZIKPpt4v5lg+rUXMc7/I35wJAg+yd3v13L9dr8/53ut6VsVJHX3T59cB5zPf
/flL8IPou8w8lOvCM5WGa2H6YBriHpyoATHRTNtTfnJWyN+A/D9J+e8n/81F
3+MZO1BPLvMZxFrrRzdDyIE3WfeZ27D5yfRa/wx+U4K94eG+7xYxTt2VI+f1
53bV6nNWbdHnrHlDf3bvz4CLV8Rvd92jin5ip+35b2ex/jCeDf+DY/l7LwAH
L0q1lyywdQ3scZb1weEohO6uDtaBuXPnPtAcOVmHmxAPm9iTW3/2m7joQ1Fv
OKtnPjD+eC3rFGsv+17wtH4zp8X/8KmCGM+q+E895/UKffYr2/H/Pj2z8uc6
bJmGA/jsSS7OTtVItfXgLyZRf5N/iRjzhtvl4LXLGTVhGe/xWBuud9AX8Nkq
4v5Y9IDUH5ziBMJpK/VXGvviqPUHWHdQ+xMWNaaS7yd5q50xAz5SItd1DVoP
/bee+e4pPftHQVHzc7ZV6c/9c7Wh89HLaXGR1Bu2yMLv1vc/NWuh6PlsJa/k
EsfN3p76K9AfPr/AuEQuNXPOQP1ZM53OwgfWP6nTcjyrkzWV72FfbqnvaSbm
KsHEZfIg4532PGBMLu+z1IZewLW3rYfPCT2U6s+g1/CaL6XiwJELsM2HIi6y
3/J/jgHop5X3z7XYXfOaEM+7zL6Gs2LU3vPIgVb5pxefVILXzkKWc5y1Qf+V
iIEu2Ks4lTvdzzK4k6sGuvfhWW+T92ai5iHezoNrdLDnx+eTkO+8sssznTMC
k3eyHkCe+IhYb+pMvx69oj/7r8eR/+V6/uIX9Vn/+AOdNpNFzrAuhPXMqlZw
gRVDToezllzElI97SPQFrvWIvaRgImapD50i/lFWyL7PkN11OL2Of7nfXfNg
u07o/Qm5r4m5oq55w4iz2C3O8UX/c+x6JPPgGTvsXMbZEK8z9vi1T+7yNfc0
VHDWmovAukZ99trtesGCxVjf1me9ulu3HvilcRYihQvM2H5Qt3+zaAiyHEqP
ZRFjjddvAAe3ir2zYC/Pkhww65/Rr7mXQIezwMNO6jF6/Z3L3O55nfn5Dnfq
98aMK7xXaUgwL7dkeHqWKY2JG+hB17K+sl/j3GXugkV5mVUfV1h/+ms98yen
kf9+UdPn/vVaveD5JcLXc0q36tk/8IDjXLg7F2AnYkZe8Wpx7cx/OtiR9e7J
p+/CJPhBZg0KJhL0A/qLSspk8Xw+b/g8jgvt1IWzy9Hrz9nevIuIoXXpMx9i
uxKIct+uVeBhQ+Is8tCTsf9Xk5OzuJfZg9jnLfDkrni1b07p9/XZ/7ATWP9j
PfuHPj3zPz4WdQD4eBfnJQZk/uQX+pzVb+i2hd8xYuLI+SHJG9mWvh8u+K8/
1or3Nhn7qLGLYj+pPpSbel2yj1lF/U1sGs0y+kh3G2InARu0w6cqsQfPmil7
gDWBWKeYRYFvIg62wwYhi6fLbr6TNstZsWIiONx6hfsAKbrepTP3R8DziHe5
f7cZPi/VZ25+R89875eC+3FmPNLej+QLFyPvYrJXW8U9QvJM8kTWftYH2H8H
sYs6gL/Fmcfm3GY0izqAA8/GM17D4szmNHAEtnA35xQVTZS5p8kY8EUayQPI
OyQ1tp/Yy3v5LpvtW1PEGb9g7x4pEB+QjD1NUd9YF5kTs179oc5+eHbZTsSG
qivIF4H7vA7YPtK5OFH3g/FGPLNZzF6AM8D9QdQk9qePQc7j0LcPnLfNwG93
OevyV5mJmHsMxFP24njWLc4VxQzCH+2DnOy/SqVAZI3ScL3TPLfAOS/uySX+
5C9aVvLcjsPNOf9Sc2vmG1X6rA0/0mdt3KPPKH8P2P8R6uPZu/mPLzwI3U+S
36bLY/SU0TK+i7HHvTKJcyd/tJO1mXrC3zeh9870vvVBF3IiC88OMx44n8F7
D4t5J/i/ONfj761ED3qafYFpO84eyD85Q5mx5ceLM98/22Ctu5pAHRwy98TN
Bb0H0Pf2K0d+vete+52cNbP+Ii+2S2qoCP+HOXMmP55QUo+Yde2DjDHEwZie
pzTywbXAwANHDb8jx5cC0U7jDGNEFTPgYwmPcux67bS0fshc1mBiEve0gFcb
kBeV4I+1WIflQPxN5cPzy/MXFzcUOAuH9bBc3F9AnjXj3iriHPfLaUPJH/nE
3FMzZp+FfeBiC8dyBsieg3yanIoYaMRi/SM8wwQcuGWc64lU0QZKQ7xWOZY4
/EXnuBjH3LsQZz6wzJpNuTm/HGY3j2ZFn90I31cSb0T/LfZWeWYucmeezLpl
cFV3G2fBY6E7cxl6V0B/5v5d9XUK8U2NVSX35ohxB2TR+13bKwWvqbIannk/
e7bMF/Q4L0uSJDiu4FucM4Njo96VExPQewSEvY29kB3ptRH2W2PglLPyq8z+
Rsp7w+/uT0wOluyvJ3GJfWqv4Q/OcVGvj3MWKPmixexbYJN1I83C77WItQXf
/e5jgt+jtgJXvMCaIu6LirOS3h7uAw5g7WPfZcphxrvBfd2nkQcRM1YfZLGm
IPer8Lx+9oD0D2xbkZwrtrDvYf/BMxzizI6YZ4e7qLfYF0SNtvi0CoUzYOQE
/XWvObHIB86y1HAZzz+wzos5mi9cDoyNi1maP8qzI/vYc/PdkOMU9YUN9pK3
Qmf6/yZk9oyF/5NxaUnOEwbxbK4hLPKKAeN7h13sffuiFTzbIvoXnmX0aWc4
nxQ12x/NEjzdqy3IApZxD+FOHjV9OlH8Dj9D9yWSP2RhDzHdF1on6ou5V0CO
54uUk+cY/MR9wZDBzR5tCD4awHeUqet+5n1fthhbiKt5sC9zai2fbcwFBD+6
RTm4J07/KT5tucK9Wu7RiN6W2BgOQe5Kqa67OCNNd8P39Y9wfmw5ejmbZ39E
bfVpMaF3cgbEsyG0HeOE9ZS8FDqLmGTMJ/uPLfibvO+Fh7EHlP7MJDY2kGNy
30pcwxkx975V7S3UqpjYp0jubRAjkSc3JE8oBKw4yxqGfqoVf59DTeMs8aaw
V72xL8R7lUC8k2emU8/MUFe8N8Z5SPqe+kh71A9rsd/lbBVynEvn1wK7Ecci
dwPxNp4HUmgL8p07ez8ps3ER35pu7Otot3hejjhADEnHC87y+U72tvfD68d6
0Q/kG0avYWCNcRbFtR3y7ecM2fGd1ZOY/5b6aC65K/y+Hzh+Qm641oq+qV0J
JjjDawVOHCfmZfijq8j7iW85RSsmchaBer6HfZz5DgPzBbfvu5+59lgv4EEZ
ZLjN+kCZiMecFSYxaQgy3oDsLZB9sZHnBu9hX0SbTON5R9RPfuZ3qbXB2L9z
nTSxDZjWT52Nszecy5GTuG9ThnHUfynrLDEQn5uAP53JmnCcuJTkjMTkttQ5
nBG/rrVGPeV17jWpe7a0JeeXyWedYe+d7MfxLOc57vHStuTjsH3JeOlvzJjs
C436K2pjnL0X5wfESnJQ6HEBNgqZc3vDd85KQxfXYHLd5szEnG3yPoO/cP/T
/rT5LM70qHfyXcSdYpMrjufi3AfyIBcKi1LPnSS5UxO+7zfzFPosgfz0W8iY
qbh3Q8+wwSec4qxQEt8HcM3x1LhJxn0xbLOd89nx1jt1jVRvDZ4sfK2DN+6i
Xvj7VNLfm/g75wvJ2QL1bTEwxLELOurJ80LD6tnDqO0PyybMc3JG6MJ1K4ll
Tan7qqyjnC3h2iFeY+YF5/jjrcODruTsaD1y4DBzNsmX56dfZ8zcnReMul5Y
DX67ifeOt/xjtcRMNCdnYm7u85NHit/k3HSyefZrvOX9uqz/A4bW64Q=
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {48., 48.}, PlotRange -> {{0, 48.}, {0, 48.}}, 
             ImageSize -> {30., Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Pure Liquid\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Phases: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Components: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Liquid: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ThermoFAST64`MultiphaseEquilibriumData[<|
   "Description" -> "Pure Liquid", 
    "Components" -> <|
     "Argon" -> <|
       "Id" -> 21, "Molar Fraction" -> Quantity[1, "Moles"/"Moles"], 
        "Can Form Solid" -> False|>|>, 
    "Phases" -> <|
     "Liquid" -> ThermoFAST64`PhaseData[<|
        "Components" -> {"Argon"}, "Molar Amount" -> Quantity[1., "Moles"], 
         "Mass Amount" -> Quantity[39.948, "Kilograms"], "Molar Mass" -> 
         Quantity[39.948, "Kilograms"/"Moles"], "Molar Density" -> 
         Quantity[35466.15796827959, "Meters"^(-3) "Moles"], "Mass Density" -> 
         Quantity[1.4168020785168333`*^6, "Kilograms" "Meters"^(-3)], 
         "Pressure" -> Quantity[0.0689, "Megapascals"], "Temperature" -> 
         Quantity[83.8, "Kelvins"], "Volume" -> 
         Quantity[0.00002819589313548948, "Meters"^3/"Moles"], "Entropy" -> 
         Quantity[53.10718221617219, "Joules" "Kelvins"^(-1)/"Moles"], 
         "Internal Energy" -> Quantity[-4853.353175132089, "Joules"/"Moles"], 
         "Helmholtz Energy" -> Quantity[-9303.735044847319, "Joules"/"Moles"],
          "Enthalpy" -> Quantity[-4851.410478095059, "Joules"/"Moles"], 
         "Gibbs Energy" -> Quantity[-9301.79234781029, "Joules"/"Moles"], 
         "Compressibility Factor" -> 0.0027882030580270722`, 
         "Heat Capacity Cv" -> 
         Quantity[21.95657175008628, "Joules" "Kelvins"^(-1)/"Moles"], 
         "Heat Capacity Cp" -> 
         Quantity[44.569666586997805`, "Joules" "Kelvins"^(-1)/"Moles"], 
         "Speed Of Sound" -> Quantity[862.4667745460144, "Meters"/"Seconds"], 
         "Joule-Thomson Coefficient" -> 
         Quantity[-0.40501272449134107`, "Kelvins"/"Megapascals"], 
         "Isothermal Throttling Coefficient" -> 
         Quantity[0.000018051282094070668`, "Meters"^3/"Moles"], 
         "Isothermal Expansion Coefficient" -> 7535.2880086785235`, 
         "Isentropic Expansion Coefficient" -> 15295.88853881456, 
         "Volume Expansivity" -> 
         Quantity[0.00429344126159562, "Kelvins"^(-1)], 
         "Isothermal Compressibility" -> 
         Quantity[0.0019261092717380024`, "Megapascals"^(-1)], 
         "Isentropic Compressibility" -> 
         Quantity[0.0009488685839924875, "Megapascals"^(-1)], 
         "Grueneisen Parameter" -> 2.86250285484149, "Lower Heating Value" -> 
         Quantity[0., "Kilojoules"/"Moles"], "Higher Heating Value" -> 
         Quantity[0., "Kilojoules"/"Moles"], "Wobbe Index" -> 
         Quantity[0., "Megajoules" "Meters"^(-3)], "Viscosity" -> 
         Quantity[0.0001315454044166074, "Pascals" "Seconds"], 
         "Thermal Conductivity" -> 
         Quantity[0.1214918291707546, "Kelvins"^(-1) "Meters"^(-1) "Watts"], 
         "Phase Identification Parameter" -> 7.428786690180094, "Name" -> 
         "Liquid", "Phase Type" -> "Liquid", "Molar Fraction" -> {1.}, 
         "Fugacity" -> {
           Quantity[0.0671125472340517, "Megapascals"]}, 
         "Fugacity Coefficient" -> {0.9740572893186022}, 
         "Thermodynamic Factor" -> {{0.}}|>]|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9670876376147346`*^9, 3.9670877490217457`*^9, 3.967087934040077*^9, 
   3.967088354432287*^9, {3.9670883881469936`*^9, 3.967088411131508*^9}, 
   3.9670887055753555`*^9, 3.967088773780178*^9, 3.9670888174431458`*^9, 
   3.9670888509521046`*^9, 3.9670891918019695`*^9, 3.967089280551655*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"44ecb8b5-6dc2-5348-9582-205a8ea43235"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"phases", "=", 
  RowBox[{"res", "[", "\"\<Phases\>\"", "]"}]}]], "Input",
 CellChangeTimes->{3.967087928181669*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[62]:=",ExpressionUUID->"beb1e931-5f2c-e14d-b913-0289ff953f5b"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["PhaseData",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
                "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor,
                 ImageResolution -> {96, 96}], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], DefaultBaseStyle -> "ImageGraphics", 
              ImageSizeRaw -> {48., 48.}, PlotRange -> {{0, 48.}, {0, 48.}}, 
              ImageSize -> {30., Automatic}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Phase: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Liquid\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Pure \"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Amount: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   
                   TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
NxGz7+hYc0mXazuH6566fNpQ5nv/1epyuDogQ2l6PGeAC6OPuIHndk33XJnB
PSQp0LuPv82Z454KWTdB5v2UHTHUCntsH4kr3msZfMcdwFqel7fgcWKpKQNx
Vz6W6GJfirjdAa46SM5HfEr3u5htqtEbX6hr2mJcWA+26/l/tVLPL/7exZmv
vT2MLzM24PtWcOV+xr+wR0PiYmb1Z1NN/1Fm6gE/LoUeJ2iX0epv1GpXCznV
sFhWIxtkcJq/8H/2uBKIqSL2PaF16c8QtTFgzH1Gp7ehe9a/N+v5S/9Gz315
o6588NkAfFyanlcirtTILrx/yOINVRJbIFMX6+QwzAXvQgy1kK+OVn+7vTDP
5ZrXDuwpJ6bc/d5oADIFWOOQB+3gtnFi0vC4R374I0PgAV+iezfxT5erO/Sc
77+r25aU6PC5rnz4P7ro/32RM6yB6TLKnq5lMmcEqtZEfqQ0/qYN1+5NtVXS
/1tcLvdZm81lG63+xFvcVwT9T7hchU3AkiWMJ9Y06/H/PYv8fMeK2sO8x/sv
ZIKPpt4v5lg+rUXMc7/I35wJAg+yd3v13L9dr8/53ut6VsVJHX3T59cB5zPf
/flL8IPou8w8lOvCM5WGa2H6YBriHpyoATHRTNtTfnJWyN+A/D9J+e8n/81F
3+MZO1BPLvMZxFrrRzdDyIE3WfeZ27D5yfRa/wx+U4K94eG+7xYxTt2VI+f1
53bV6nNWbdHnrHlDf3bvz4CLV8Rvd92jin5ip+35b2ex/jCeDf+DY/l7LwAH
L0q1lyywdQ3scZb1weEohO6uDtaBuXPnPtAcOVmHmxAPm9iTW3/2m7joQ1Fv
OKtnPjD+eC3rFGsv+17wtH4zp8X/8KmCGM+q+E895/UKffYr2/H/Pj2z8uc6
bJmGA/jsSS7OTtVItfXgLyZRf5N/iRjzhtvl4LXLGTVhGe/xWBuud9AX8Nkq
4v5Y9IDUH5ziBMJpK/VXGvviqPUHWHdQ+xMWNaaS7yd5q50xAz5SItd1DVoP
/bee+e4pPftHQVHzc7ZV6c/9c7Wh89HLaXGR1Bu2yMLv1vc/NWuh6PlsJa/k
EsfN3p76K9AfPr/AuEQuNXPOQP1ZM53OwgfWP6nTcjyrkzWV72FfbqnvaSbm
KsHEZfIg4532PGBMLu+z1IZewLW3rYfPCT2U6s+g1/CaL6XiwJELsM2HIi6y
3/J/jgHop5X3z7XYXfOaEM+7zL6Gs2LU3vPIgVb5pxefVILXzkKWc5y1Qf+V
iIEu2Ks4lTvdzzK4k6sGuvfhWW+T92ai5iHezoNrdLDnx+eTkO+8sssznTMC
k3eyHkCe+IhYb+pMvx69oj/7r8eR/+V6/uIX9Vn/+AOdNpNFzrAuhPXMqlZw
gRVDToezllzElI97SPQFrvWIvaRgImapD50i/lFWyL7PkN11OL2Of7nfXfNg
u07o/Qm5r4m5oq55w4iz2C3O8UX/c+x6JPPgGTvsXMbZEK8z9vi1T+7yNfc0
VHDWmovAukZ99trtesGCxVjf1me9ulu3HvilcRYihQvM2H5Qt3+zaAiyHEqP
ZRFjjddvAAe3ir2zYC/Pkhww65/Rr7mXQIezwMNO6jF6/Z3L3O55nfn5Dnfq
98aMK7xXaUgwL7dkeHqWKY2JG+hB17K+sl/j3GXugkV5mVUfV1h/+ms98yen
kf9+UdPn/vVaveD5JcLXc0q36tk/8IDjXLg7F2AnYkZe8Wpx7cx/OtiR9e7J
p+/CJPhBZg0KJhL0A/qLSspk8Xw+b/g8jgvt1IWzy9Hrz9nevIuIoXXpMx9i
uxKIct+uVeBhQ+Is8tCTsf9Xk5OzuJfZg9jnLfDkrni1b07p9/XZ/7ATWP9j
PfuHPj3zPz4WdQD4eBfnJQZk/uQX+pzVb+i2hd8xYuLI+SHJG9mWvh8u+K8/
1or3Nhn7qLGLYj+pPpSbel2yj1lF/U1sGs0y+kh3G2InARu0w6cqsQfPmil7
gDWBWKeYRYFvIg62wwYhi6fLbr6TNstZsWIiONx6hfsAKbrepTP3R8DziHe5
f7cZPi/VZ25+R89875eC+3FmPNLej+QLFyPvYrJXW8U9QvJM8kTWftYH2H8H
sYs6gL/Fmcfm3GY0izqAA8/GM17D4szmNHAEtnA35xQVTZS5p8kY8EUayQPI
OyQ1tp/Yy3v5LpvtW1PEGb9g7x4pEB+QjD1NUd9YF5kTs179oc5+eHbZTsSG
qivIF4H7vA7YPtK5OFH3g/FGPLNZzF6AM8D9QdQk9qePQc7j0LcPnLfNwG93
OevyV5mJmHsMxFP24njWLc4VxQzCH+2DnOy/SqVAZI3ScL3TPLfAOS/uySX+
5C9aVvLcjsPNOf9Sc2vmG1X6rA0/0mdt3KPPKH8P2P8R6uPZu/mPLzwI3U+S
36bLY/SU0TK+i7HHvTKJcyd/tJO1mXrC3zeh9870vvVBF3IiC88OMx44n8F7
D4t5J/i/ONfj761ED3qafYFpO84eyD85Q5mx5ceLM98/22Ctu5pAHRwy98TN
Bb0H0Pf2K0d+vete+52cNbP+Ii+2S2qoCP+HOXMmP55QUo+Yde2DjDHEwZie
pzTywbXAwANHDb8jx5cC0U7jDGNEFTPgYwmPcux67bS0fshc1mBiEve0gFcb
kBeV4I+1WIflQPxN5cPzy/MXFzcUOAuH9bBc3F9AnjXj3iriHPfLaUPJH/nE
3FMzZp+FfeBiC8dyBsieg3yanIoYaMRi/SM8wwQcuGWc64lU0QZKQ7xWOZY4
/EXnuBjH3LsQZz6wzJpNuTm/HGY3j2ZFn90I31cSb0T/LfZWeWYucmeezLpl
cFV3G2fBY6E7cxl6V0B/5v5d9XUK8U2NVSX35ohxB2TR+13bKwWvqbIannk/
e7bMF/Q4L0uSJDiu4FucM4Njo96VExPQewSEvY29kB3ptRH2W2PglLPyq8z+
Rsp7w+/uT0wOluyvJ3GJfWqv4Q/OcVGvj3MWKPmixexbYJN1I83C77WItQXf
/e5jgt+jtgJXvMCaIu6LirOS3h7uAw5g7WPfZcphxrvBfd2nkQcRM1YfZLGm
IPer8Lx+9oD0D2xbkZwrtrDvYf/BMxzizI6YZ4e7qLfYF0SNtvi0CoUzYOQE
/XWvObHIB86y1HAZzz+wzos5mi9cDoyNi1maP8qzI/vYc/PdkOMU9YUN9pK3
Qmf6/yZk9oyF/5NxaUnOEwbxbK4hLPKKAeN7h13sffuiFTzbIvoXnmX0aWc4
nxQ12x/NEjzdqy3IApZxD+FOHjV9OlH8Dj9D9yWSP2RhDzHdF1on6ou5V0CO
54uUk+cY/MR9wZDBzR5tCD4awHeUqet+5n1fthhbiKt5sC9zai2fbcwFBD+6
RTm4J07/KT5tucK9Wu7RiN6W2BgOQe5Kqa67OCNNd8P39Y9wfmw5ejmbZ39E
bfVpMaF3cgbEsyG0HeOE9ZS8FDqLmGTMJ/uPLfibvO+Fh7EHlP7MJDY2kGNy
30pcwxkx975V7S3UqpjYp0jubRAjkSc3JE8oBKw4yxqGfqoVf59DTeMs8aaw
V72xL8R7lUC8k2emU8/MUFe8N8Z5SPqe+kh71A9rsd/lbBVynEvn1wK7Ecci
dwPxNp4HUmgL8p07ez8ps3ER35pu7Otot3hejjhADEnHC87y+U72tvfD68d6
0Q/kG0avYWCNcRbFtR3y7ecM2fGd1ZOY/5b6aC65K/y+Hzh+Qm641oq+qV0J
JjjDawVOHCfmZfijq8j7iW85RSsmchaBer6HfZz5DgPzBbfvu5+59lgv4EEZ
ZLjN+kCZiMecFSYxaQgy3oDsLZB9sZHnBu9hX0SbTON5R9RPfuZ3qbXB2L9z
nTSxDZjWT52Nszecy5GTuG9ThnHUfynrLDEQn5uAP53JmnCcuJTkjMTkttQ5
nBG/rrVGPeV17jWpe7a0JeeXyWedYe+d7MfxLOc57vHStuTjsH3JeOlvzJjs
C436K2pjnL0X5wfESnJQ6HEBNgqZc3vDd85KQxfXYHLd5szEnG3yPoO/cP/T
/rT5LM70qHfyXcSdYpMrjufi3AfyIBcKi1LPnSS5UxO+7zfzFPosgfz0W8iY
qbh3Q8+wwSec4qxQEt8HcM3x1LhJxn0xbLOd89nx1jt1jVRvDZ4sfK2DN+6i
Xvj7VNLfm/g75wvJ2QL1bTEwxLELOurJ80LD6tnDqO0PyybMc3JG6MJ1K4ll
Tan7qqyjnC3h2iFeY+YF5/jjrcODruTsaD1y4DBzNsmX56dfZ8zcnReMul5Y
DX67ifeOt/xjtcRMNCdnYm7u85NHit/k3HSyefZrvOX9uqz/A4bW64Q=
                "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor,
                 ImageResolution -> {96, 96}], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], DefaultBaseStyle -> "ImageGraphics", 
              ImageSizeRaw -> {48., 48.}, PlotRange -> {{0, 48.}, {0, 48.}}, 
              ImageSize -> {30., Automatic}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Phase: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Liquid\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Pure \"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Amount: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   
                   TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Argon: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"1.`", 
                    
                    RowBox[{
                    "\"mol\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], "moles per mole", 
                    FractionBox["\"Moles\"", "\"Moles\""]}, "Quantity", 
                    SyntaxForm -> Mod], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   ThermoFAST64`PhaseData[<|
    "Components" -> {"Argon"}, "Molar Amount" -> Quantity[1., "Moles"], 
     "Mass Amount" -> Quantity[39.948, "Kilograms"], "Molar Mass" -> 
     Quantity[39.948, "Kilograms"/"Moles"], "Molar Density" -> 
     Quantity[35466.15796827959, "Meters"^(-3) "Moles"], "Mass Density" -> 
     Quantity[1.4168020785168333`*^6, "Kilograms" "Meters"^(-3)], "Pressure" -> 
     Quantity[0.0689, "Megapascals"], "Temperature" -> 
     Quantity[83.8, "Kelvins"], "Volume" -> 
     Quantity[0.00002819589313548948, "Meters"^3/"Moles"], "Entropy" -> 
     Quantity[53.10718221617219, "Joules" "Kelvins"^(-1)/"Moles"], 
     "Internal Energy" -> Quantity[-4853.353175132089, "Joules"/"Moles"], 
     "Helmholtz Energy" -> Quantity[-9303.735044847319, "Joules"/"Moles"], 
     "Enthalpy" -> Quantity[-4851.410478095059, "Joules"/"Moles"], 
     "Gibbs Energy" -> Quantity[-9301.79234781029, "Joules"/"Moles"], 
     "Compressibility Factor" -> 0.0027882030580270722`, "Heat Capacity Cv" -> 
     Quantity[21.95657175008628, "Joules" "Kelvins"^(-1)/"Moles"], 
     "Heat Capacity Cp" -> 
     Quantity[44.569666586997805`, "Joules" "Kelvins"^(-1)/"Moles"], 
     "Speed Of Sound" -> Quantity[862.4667745460144, "Meters"/"Seconds"], 
     "Joule-Thomson Coefficient" -> 
     Quantity[-0.40501272449134107`, "Kelvins"/"Megapascals"], 
     "Isothermal Throttling Coefficient" -> 
     Quantity[0.000018051282094070668`, "Meters"^3/"Moles"], 
     "Isothermal Expansion Coefficient" -> 7535.2880086785235`, 
     "Isentropic Expansion Coefficient" -> 15295.88853881456, 
     "Volume Expansivity" -> Quantity[0.00429344126159562, "Kelvins"^(-1)], 
     "Isothermal Compressibility" -> 
     Quantity[0.0019261092717380024`, "Megapascals"^(-1)], 
     "Isentropic Compressibility" -> 
     Quantity[0.0009488685839924875, "Megapascals"^(-1)], 
     "Grueneisen Parameter" -> 2.86250285484149, "Lower Heating Value" -> 
     Quantity[0., "Kilojoules"/"Moles"], "Higher Heating Value" -> 
     Quantity[0., "Kilojoules"/"Moles"], "Wobbe Index" -> 
     Quantity[0., "Megajoules" "Meters"^(-3)], "Viscosity" -> 
     Quantity[0.0001315454044166074, "Pascals" "Seconds"], 
     "Thermal Conductivity" -> 
     Quantity[0.1214918291707546, "Kelvins"^(-1) "Meters"^(-1) "Watts"], 
     "Phase Identification Parameter" -> 7.428786690180094, "Name" -> 
     "Liquid", "Phase Type" -> "Liquid", "Molar Fraction" -> {1.}, "Fugacity" -> {
       Quantity[0.0671125472340517, "Megapascals"]}, 
     "Fugacity Coefficient" -> {0.9740572893186022}, 
     "Thermodynamic Factor" -> {{0.}}|>],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{{3.967087930035406*^9, 3.967087936560137*^9}, {
   3.9670883897808266`*^9, 3.9670884131700573`*^9}, 3.9670887756608295`*^9, 
   3.967088851085657*^9, 3.967089193949518*^9, 3.9670892833622456`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"e9a1d5ad-21c5-924d-9098-8f561db9e406"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vapour", "=", 
  RowBox[{"phases", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{3.9670879461306057`*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[63]:=",ExpressionUUID->"dbff3dcb-d81c-9b4f-869b-2be224f1d568"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PhaseData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                11.966367964725942`, {0., 11.966367964725942`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
             PlotRange -> {{0, 48.}, {0, 48.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Phase: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Liquid\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Pure \"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Amount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                   "Quantity"], "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                11.966367964725942`, {0., 11.966367964725942`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztWmtsVGd6pk2rNEKIrqII0TQkeM45Y8fBXIw9nptZlljAIjYlXpemgbKG
UJcSQIGwxKKIpiybRTRNvcTrEiAscYw9njkzY7wEWS6yWNZx2axLWERcLsYe
z5kZD4OXImQhy7JOn+c7c8gwNokJZr276Y8PxjPn8l6f93nf75u+etOLf//H
EyZM2PJn+OfF0m3zN28uLS/+c/xRsnHLurKNa19ZvPH1tWVrNxesfgRffjO5
/gRL1/U/+v81Pmt6XU/edE/PjPGWYzxWzgexiXIgVi37Y+/k7v/Vn463PL/t
Zanrmi8HeuOyGr1s/ZrFQM4Hn06UfJEjsi88JPm0Qckb3vV1igHZ071EUmMJ
uT6ky/U9OmNArrs6c7zl+m0syRN9QlKjzbI3rMve0JCwAePAq+2XPrr06HjL
9zDXhHr9EdmnbZXVyG3qDBs0yF6tDZ912CRh8YZeGG8ZH+aCvjbZFwnLXiPm
4fPZstqzDHWgT3zni7TJnp4nx1vOh7Gm1YS+IfsjJ6DnkOKP3la82vq/9PQ8
Zg12TILelbKqIQfCxMK3/9CwkHFv8WnbqR/in/nuyTyiPS55etYo3vDiDF9Y
Rgy0C0xQIzf/0PJArg25wXNumFgP/bLl2q4s1P8O6N0keS49gTq4VOE13hCw
QOuw1F5+arzlHotF3WR/tJ35Df36FY+2fArqP/x8SGAgsBBx8RqxX/JGduFv
XcSIGq35fa8HUsWlRy2+cBVyW+gk+cJ7qRPifC3068f3N2GD24iNUIav25np
1x5HPJwwrtUG5fpwGXNnvPX4KotyS/U9L8P3rHX0Zwtrf0Zdt5P64u+bFk/3
SskX3Y08GIBtTmeq3VPZD+GekJErkZiCHmm8dfkqi3oo5HXUwx+NSUe7Zmf5
rj4N3ntGCfTeRo7vIP7TJsB/L64ZhE0OWQ+iHnh6XlL8vf3EQ8kfbZ5+tHPK
eOtzP4u1DnLXMo6R87cZ76xz8HGtHOwdYL3jNeb1xH/JHztFfAAWbBN28WkV
Zk20oD/4fcEC1m7F27P+DsfzRQ6x1wXX2aEErvXDzzX0efp9ggsFetslcCHJ
F1pKn+PzaZMbsk7+LmJBQUHBYyUlJXfkUtSePNHPMOf9sfZnPmTMa0uBazeR
D4334neCI3g0uxKIXxB1EfWRf0P3iLCBTzv9DPLHvJ7vlKRFw2JiwoSSh2Ij
h8NhdTqdq2w2ZxE+W/Ly8h53u91T+f9IcS/7ogn2eRk1V2Q5GO+A31tS5b+X
DcCJ5inBRCfip3EGn4fayFoh+mSftjs1D/hum802xeVyPUH57Hb3woIC5yrI
mT2WuvM9eP4G6stlsxVmFRQUzsDnp+iHEsht4L1WKvm1W5IaGYDMbwnOq8aq
lWC83VrdYR3Nuwyu2LNQabwewnO2JXmzV/SIiAXF273AvI7vpgzU3fQJ7WG3
O9en+uVBFt9hszmWw++LR/qd/rDUak8JDuvT2pHvIlYtAe0p1P6V1sa+c5K3
a7bdbn86J6do4mjfCzwokRviF9kz8X7k0uVkXDVMq+6eyrzK3a+P2CcwRu12
10upefmAse+22exbcnNzh71PPhq2WY6GsqHzTtS2Qca9VBdayliX/PFmyRMp
4nWMSTxn/mjfKXplNbYBvVJNRn3nZPSJG0QeqIgv9A20yUizU8pYUOB47X7e
9WVr0aJFj+KZW5FbS1O/p45y3dUyznEF5qFewf9VoobXd29g3TOvZY4iLt+G
fJNHHQMGV9xDe5IbokYeN/hxpI02t9R1b+D3ab56oaDAvZUyj5X+RkwxrxxH
gPdPmv6Rart3iN5G1faIWh2IXRT8DRgv14XK0ms2ZDuEUPrC3o71BNdNoh8F
xrM38nStE/zBEyqSOTcDp7Swxh7tXgIOud68Nz/fPR02Pkxbj6XuZlzh2W+a
OIAaPg/YvI9zO8kfIV4PKuB0tAtrdyq/MZfdZit1Fn6rSa76eJkCuaW67p2S
p3sbeqOXoFPWokUbEGcuJ+KsHO86znghjrEXZL8seJGq7Rcx4I+0PeO5as2o
D1VbPZrVsJ1zKe8dq7xP97/D4fTCtt+gHMAjr6WuZ6FcHypHXA5AnvNSbchy
z1jGb8/+24lD9vkLB7L3BAeM+Re4MZbk7RkUvZAaaclQe5ZJFR89yjxxOl0H
nE737lTcEXiIOoA6e4t2Y48heUMH0mQcE/8zDvFMGVi6AL7YAwx4i99n+KOL
ycsNjOs9BXkGye9G4mdGPQuvhH3CSt2VodwVG/UZOw7rEvsCMf9NWcIeYfaF
NYwhvHObw+GqYU6YzxOzc3/0AOKF/ZEHcTRdDsZa2V+IGIOcuGcvuUCyLk66
X70ZP8Dr9dC7DfnaCL0P4blbmPuC3wZ6G4H1m2RvyA3f9yEWwsTjYTmDa8Fl
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
               "], {{0, 48.}, {48., 0}}, {0, 255}, ColorFunction -> RGBColor, 
               ImageResolution -> {96, 96}], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSize -> {30., Automatic}, ImageSizeRaw -> {48., 48.}, 
             PlotRange -> {{0, 48.}, {0, 48.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Phase: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Liquid\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Pure \"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Amount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"1.`", "\"mol\"", "moles", "\"Moles\""}, 
                   "Quantity"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argon: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"1.`", 
                    
                    RowBox[{
                    "\"mol\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], "moles per mole", 
                    FractionBox["\"Moles\"", "\"Moles\""]}, "Quantity"], 
                  "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ThermoFAST64`PhaseData[<|
   "Components" -> {"Argon"}, "Molar Amount" -> Quantity[1., "Moles"], 
    "Mass Amount" -> Quantity[39.948, "Kilograms"], "Molar Mass" -> 
    Quantity[39.948, "Kilograms"/"Moles"], "Molar Density" -> 
    Quantity[35466.15796827959, "Meters"^(-3) "Moles"], "Mass Density" -> 
    Quantity[1.4168020785168333`*^6, "Kilograms" "Meters"^(-3)], "Pressure" -> 
    Quantity[0.0689, "Megapascals"], "Temperature" -> 
    Quantity[83.8, "Kelvins"], "Volume" -> 
    Quantity[0.00002819589313548948, "Meters"^3/"Moles"], "Entropy" -> 
    Quantity[53.10718221617219, "Joules" "Kelvins"^(-1)/"Moles"], 
    "Internal Energy" -> Quantity[-4853.353175132089, "Joules"/"Moles"], 
    "Helmholtz Energy" -> Quantity[-9303.735044847319, "Joules"/"Moles"], 
    "Enthalpy" -> Quantity[-4851.410478095059, "Joules"/"Moles"], 
    "Gibbs Energy" -> Quantity[-9301.79234781029, "Joules"/"Moles"], 
    "Compressibility Factor" -> 0.0027882030580270722`, "Heat Capacity Cv" -> 
    Quantity[21.95657175008628, "Joules" "Kelvins"^(-1)/"Moles"], 
    "Heat Capacity Cp" -> 
    Quantity[44.569666586997805`, "Joules" "Kelvins"^(-1)/"Moles"], 
    "Speed Of Sound" -> Quantity[862.4667745460144, "Meters"/"Seconds"], 
    "Joule-Thomson Coefficient" -> 
    Quantity[-0.40501272449134107`, "Kelvins"/"Megapascals"], 
    "Isothermal Throttling Coefficient" -> 
    Quantity[0.000018051282094070668`, "Meters"^3/"Moles"], 
    "Isothermal Expansion Coefficient" -> 7535.2880086785235`, 
    "Isentropic Expansion Coefficient" -> 15295.88853881456, 
    "Volume Expansivity" -> Quantity[0.00429344126159562, "Kelvins"^(-1)], 
    "Isothermal Compressibility" -> 
    Quantity[0.0019261092717380024`, "Megapascals"^(-1)], 
    "Isentropic Compressibility" -> 
    Quantity[0.0009488685839924875, "Megapascals"^(-1)], 
    "Grueneisen Parameter" -> 2.86250285484149, "Lower Heating Value" -> 
    Quantity[0., "Kilojoules"/"Moles"], "Higher Heating Value" -> 
    Quantity[0., "Kilojoules"/"Moles"], "Wobbe Index" -> 
    Quantity[0., "Megajoules" "Meters"^(-3)], "Viscosity" -> 
    Quantity[0.0001315454044166074, "Pascals" "Seconds"], 
    "Thermal Conductivity" -> 
    Quantity[0.1214918291707546, "Kelvins"^(-1) "Meters"^(-1) "Watts"], 
    "Phase Identification Parameter" -> 7.428786690180094, "Name" -> "Liquid",
     "Phase Type" -> "Liquid", "Molar Fraction" -> {1.}, "Fugacity" -> {
      Quantity[0.0671125472340517, "Megapascals"]}, 
    "Fugacity Coefficient" -> {0.9740572893186022}, 
    "Thermodynamic Factor" -> {{0.}}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9670879468215103`*^9, {3.9670883914948196`*^9, 3.9670884145296383`*^9}, 
   3.9670888511469784`*^9, 3.9670891983159904`*^9, 3.967089285955841*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"4592e83a-f719-074d-8c22-ac40dd967acb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "vapour", "]"}]], "Input",
 CellChangeTimes->{3.9670879589338894`*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[64]:=",ExpressionUUID->"b2ec39f2-0b44-9b46-b780-c020a10128c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Components\"\>", ",", "\<\"Molar Amount\"\>", 
   ",", "\<\"Mass Amount\"\>", ",", "\<\"Molar Mass\"\>", 
   ",", "\<\"Molar Density\"\>", ",", "\<\"Mass Density\"\>", 
   ",", "\<\"Pressure\"\>", ",", "\<\"Temperature\"\>", ",", "\<\"Volume\"\>",
    ",", "\<\"Entropy\"\>", ",", "\<\"Internal Energy\"\>", 
   ",", "\<\"Helmholtz Energy\"\>", ",", "\<\"Enthalpy\"\>", 
   ",", "\<\"Gibbs Energy\"\>", ",", "\<\"Compressibility Factor\"\>", 
   ",", "\<\"Heat Capacity Cv\"\>", ",", "\<\"Heat Capacity Cp\"\>", 
   ",", "\<\"Speed Of Sound\"\>", ",", "\<\"Joule-Thomson Coefficient\"\>", 
   ",", "\<\"Isothermal Throttling Coefficient\"\>", 
   ",", "\<\"Isothermal Expansion Coefficient\"\>", 
   ",", "\<\"Isentropic Expansion Coefficient\"\>", 
   ",", "\<\"Volume Expansivity\"\>", 
   ",", "\<\"Isothermal Compressibility\"\>", 
   ",", "\<\"Isentropic Compressibility\"\>", 
   ",", "\<\"Grueneisen Parameter\"\>", ",", "\<\"Lower Heating Value\"\>", 
   ",", "\<\"Higher Heating Value\"\>", ",", "\<\"Wobbe Index\"\>", 
   ",", "\<\"Viscosity\"\>", ",", "\<\"Thermal Conductivity\"\>", 
   ",", "\<\"Phase Identification Parameter\"\>", ",", "\<\"Name\"\>", 
   ",", "\<\"Phase Type\"\>", ",", "\<\"Molar Fraction\"\>", 
   ",", "\<\"Fugacity\"\>", ",", "\<\"Fugacity Coefficient\"\>", 
   ",", "\<\"Thermodynamic Factor\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9670879594145527`*^9, {3.967088393657816*^9, 3.9670884174914627`*^9}, 
   3.967088851213663*^9, 3.967089292304119*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"53079e7d-f93e-a840-ba85-9ff981ce0354"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vapour", "[", "\"\<Enthalpy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9670879808140736`*^9, 3.9670879947852*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[65]:=",ExpressionUUID->"f3b63700-526f-c04e-9b20-e1151dded4a7"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"-", "4851.410478095059`"}], 
   RowBox[{
    "\"J\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"mol\""}], 
   "joules per mole", 
   FractionBox["\"Joules\"", "\"Moles\""]},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.9670879823687077`*^9, 3.9670879954898567`*^9}, {
   3.9670883955671577`*^9, 3.9670884189876347`*^9}, 3.9670885517102184`*^9, 
   3.9670888512714577`*^9, 3.967089203507492*^9, 3.9670892944959793`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"ee657b48-320c-9f4b-bc49-a7621be87737"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vapour", "[", "\"\<Entropy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9670880623098106`*^9, 3.967088066185192*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[66]:=",ExpressionUUID->"4bc3db0d-9b78-274d-9dcd-dbcc381fb59a"],

Cell[BoxData[
 TemplateBox[{"53.10718221617219`", 
   RowBox[{
    "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"K\"", 
     "\[ThinSpace]", "\"mol\"", "\[InvisibleSpace]", "\")\""}], 
   "joules per kelvin mole", 
   FractionBox["\"Joules\"", 
    RowBox[{"\"Kelvins\"", " ", "\"Moles\""}]]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.9670880668955917`*^9, 3.967088427769554*^9, 
  3.9670885535612545`*^9, 3.9670888513407135`*^9, 3.9670892052703094`*^9, 
  3.9670892977694244`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"1ee7e57b-951d-304e-b64b-e7480434c49f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428, 741.75},
WindowMargins->{{960, Automatic}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6ca32637-4fb2-4ad6-a533-a09cd25f43da"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 177, 3, 107, "Title",ExpressionUUID->"95dead33-71e1-487b-a85a-e2b819f7c1f6"],
Cell[CellGroupData[{
Cell[782, 29, 368, 6, 31, "Input",ExpressionUUID->"8847dca6-f7b0-ae44-96a6-b614bf860d23"],
Cell[1153, 37, 607, 13, 30, "Message",ExpressionUUID->"f516686a-9e63-2e4f-98ca-5abfa96bd002"],
Cell[1763, 52, 208, 3, 35, "Output",ExpressionUUID->"33ecb85b-2e23-0e47-b9b4-788515e38943"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2008, 60, 305, 4, 31, "Input",ExpressionUUID->"22f9a367-c913-ff49-9fc5-416c7a73af6e"],
Cell[2316, 66, 306, 4, 35, "Output",ExpressionUUID->"e235d70d-e8e7-724e-9cec-bf24f68c37d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2659, 75, 186, 3, 31, "Input",ExpressionUUID->"cf702638-6cd2-f04f-a1f5-381c7c8cae49"],
Cell[2848, 80, 22841, 403, 67, "Output",ExpressionUUID->"0e4ea476-edea-4441-9573-56059cb42bb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25726, 488, 168, 3, 59, "Subsection",ExpressionUUID->"830ef91b-5eac-4439-9ef5-fda98ffba99a"],
Cell[25897, 493, 288, 5, 48, "Input",ExpressionUUID->"1197a7e5-8b0d-4b6d-bce7-10d28db014af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26222, 503, 153, 3, 75, "Chapter",ExpressionUUID->"c7c6b643-d558-4573-b898-9ae82a2744e1"],
Cell[CellGroupData[{
Cell[26400, 510, 354, 6, 70, "Input",ExpressionUUID->"6c8298dd-9743-ff4a-99a9-f09b7560639b"],
Cell[26757, 518, 256, 3, 35, "Output",ExpressionUUID->"ab7eaaac-608b-494c-b9a9-c91e55599231"],
Cell[27016, 523, 257, 3, 35, "Output",ExpressionUUID->"e62247c0-ac01-e84a-a26f-ffa0cd924853"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27310, 531, 210, 4, 49, "Subsubsection",ExpressionUUID->"274738f4-7147-4f46-ade4-efcce1bfab2b"],
Cell[27523, 537, 810, 17, 48, "Input",ExpressionUUID->"7547601f-5e24-2245-b512-bf443c7b2e49"],
Cell[CellGroupData[{
Cell[28358, 558, 358, 8, 48, "Input",ExpressionUUID->"4a6e5848-2e40-9c43-9e91-1c7d6f5ef71e"],
Cell[28719, 568, 22482, 399, 82, "Output",ExpressionUUID->"829e5fe0-4429-134a-8a0e-29414824e353"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51238, 972, 218, 4, 31, "Input",ExpressionUUID->"00675b51-cfdf-8d4f-b248-7f66cdf6a126"],
Cell[51459, 978, 22513, 398, 89, "Output",ExpressionUUID->"63b1bc93-5443-d048-a9b4-d9ed9aebe2a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74009, 1381, 234, 5, 31, "Input",ExpressionUUID->"cf735a44-d4e5-2e40-9428-d2dfc7325da6"],
Cell[74246, 1388, 22300, 396, 89, "Output",ExpressionUUID->"95da3b14-376e-3c4b-9796-b1237b7207d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96583, 1789, 185, 3, 31, "Input",ExpressionUUID->"9b11152b-d479-df46-b674-d0f44cfbd4f1"],
Cell[96771, 1794, 1544, 25, 140, "Output",ExpressionUUID->"704d2c62-627e-d941-84f0-3308fcbd35c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98352, 1824, 219, 3, 31, "Input",ExpressionUUID->"8846487c-28f8-8d4f-90c5-2ea6915d9e0c"],
Cell[98574, 1829, 409, 9, 41, "Output",ExpressionUUID->"652ef53b-3768-6244-82a5-c4808eb68dd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99020, 1843, 220, 3, 31, "Input",ExpressionUUID->"bb805905-8004-a54b-adff-bc8d51a5fcde"],
Cell[99243, 1848, 482, 10, 44, "Output",ExpressionUUID->"573ce5f9-3400-524f-b5c3-65d8e1517bae"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99786, 1865, 207, 4, 75, "Chapter",ExpressionUUID->"25dec3e4-a7f0-3247-80bf-4488b661a4a4"],
Cell[CellGroupData[{
Cell[100018, 1873, 429, 7, 70, "Input",ExpressionUUID->"8c54230f-51d6-734b-a562-3882531e944b"],
Cell[100450, 1882, 359, 5, 35, "Output",ExpressionUUID->"d4cabe73-0b3e-f348-945e-75117fbf319d"],
Cell[100812, 1889, 358, 5, 35, "Output",ExpressionUUID->"fcdae234-9101-5240-bc59-d04d7ed80c04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101207, 1899, 210, 4, 49, "Subsubsection",ExpressionUUID->"30fcbe3f-bc03-a048-931f-6d84152a89f6"],
Cell[CellGroupData[{
Cell[101442, 1907, 972, 18, 70, "Input",ExpressionUUID->"55f1bc56-629f-434e-a100-51ebf95894f6"],
Cell[102417, 1927, 44242, 948, 128, "Output",ExpressionUUID->"c9f653c8-8a7c-1b4c-bc34-b9dee443d718"],
Cell[146662, 2877, 20089, 358, 90, "Output",ExpressionUUID->"48a1783d-b86e-9c41-91bb-d0b8d17d099b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166788, 3240, 358, 8, 48, "Input",ExpressionUUID->"537a61c2-8e77-3d4a-948d-dd752ad9f38d"],
Cell[167149, 3250, 22664, 402, 81, "Output",ExpressionUUID->"d9d0c6c3-181e-f746-8685-0d7631c3d009"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189850, 3657, 253, 5, 48, "Input",ExpressionUUID->"bd135fda-2659-8648-a75b-9bc22f05206d"],
Cell[190106, 3664, 22694, 401, 114, "Output",ExpressionUUID->"7738169f-906d-a046-8eeb-ad0efbc13a99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212837, 4070, 269, 6, 48, "Input",ExpressionUUID->"96470dbd-f001-7d48-aaf6-0a277e51a251"],
Cell[213109, 4078, 22385, 399, 89, "Output",ExpressionUUID->"2adf50b8-c7bf-1e48-8277-f510f71605cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235531, 4482, 220, 4, 48, "Input",ExpressionUUID->"11a3b4b3-77dd-da4e-881a-725e8e925f1d"],
Cell[235754, 4488, 1599, 27, 120, "Output",ExpressionUUID->"2c0705ca-85ac-dc47-b27c-a25d289c3080"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237390, 4520, 254, 4, 48, "Input",ExpressionUUID->"840e7e45-5ca7-604d-957d-0bb74aa2fa74"],
Cell[237647, 4526, 488, 10, 42, "Output",ExpressionUUID->"be044cbf-680c-294f-9fab-0475172f42a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238172, 4541, 255, 4, 48, "Input",ExpressionUUID->"fa75032b-f976-f248-aa8b-7c2b2804fa14"],
Cell[238430, 4547, 533, 11, 44, "Output",ExpressionUUID->"baf169bc-7887-dd40-9362-fe660ce2943e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[239024, 4565, 253, 4, 75, "Chapter",ExpressionUUID->"f99c9e71-c8ab-ab45-855d-835eafdcdbc0"],
Cell[CellGroupData[{
Cell[239302, 4573, 481, 8, 70, "Input",ExpressionUUID->"0678414d-c418-0544-ba12-9e77dbd37429"],
Cell[239786, 4583, 380, 5, 35, "Output",ExpressionUUID->"5e51588f-6701-3d45-821b-ca7da531e8e8"],
Cell[240169, 4590, 383, 5, 35, "Output",ExpressionUUID->"7b6f76f8-142b-f345-bea5-c2cf0be3772a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240589, 4600, 210, 4, 49, "Subsubsection",ExpressionUUID->"2b44cb59-cbc4-2b46-bc30-a35c691f5260"],
Cell[CellGroupData[{
Cell[240824, 4608, 1023, 19, 70, "Input",ExpressionUUID->"bce952a9-d353-e546-ae7d-f53ca398c56c"],
Cell[241850, 4629, 44268, 949, 128, "Output",ExpressionUUID->"d6ae9454-0419-ee4e-b5e1-6e2c1f3830ac"],
Cell[286121, 5580, 19887, 352, 72, "Output",ExpressionUUID->"7167162d-6c70-204a-a9b9-9baa97a60c4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306045, 5937, 358, 8, 48, "Input",ExpressionUUID->"375b7705-0c04-034d-b9e6-d39d396adb93"],
Cell[306406, 5947, 22548, 396, 81, "Output",ExpressionUUID->"e4b35017-1022-0749-a306-04c64e816d3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328991, 6348, 253, 5, 48, "Input",ExpressionUUID->"3b8af01b-f405-0840-bf8a-09290470032d"],
Cell[329247, 6355, 22742, 402, 114, "Output",ExpressionUUID->"51b6f09e-47f3-2345-8cb2-a5c0a8bc1c8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352026, 6762, 269, 6, 48, "Input",ExpressionUUID->"7666b316-e8fa-5f43-81ce-cfbae0d6b49e"],
Cell[352298, 6770, 22509, 401, 114, "Output",ExpressionUUID->"ee46c9cb-69c3-c64c-8bfa-73375057368f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374844, 7176, 220, 4, 48, "Input",ExpressionUUID->"b2124272-1e09-9a4f-839f-81fb5ae79e87"],
Cell[375067, 7182, 1599, 27, 120, "Output",ExpressionUUID->"ede064f1-8465-cb4d-8080-39305702c8bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376703, 7214, 254, 4, 48, "Input",ExpressionUUID->"5e246978-0bb2-e944-8a16-6ba3cad333ee"],
Cell[376960, 7220, 510, 10, 42, "Output",ExpressionUUID->"2ea2fdc7-ff5c-a04c-9fda-1e307c1b0390"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377507, 7235, 255, 4, 48, "Input",ExpressionUUID->"e006ff75-d0ca-2042-97fd-82ddfed4bc11"],
Cell[377765, 7241, 558, 11, 44, "Output",ExpressionUUID->"35e56740-f133-db4b-bf78-17705ddd4610"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[378384, 7259, 302, 5, 75, "Chapter",ExpressionUUID->"60dcda32-2ee1-4444-8a48-9d7b558bd2bb"],
Cell[CellGroupData[{
Cell[378711, 7268, 528, 9, 70, "Input",ExpressionUUID->"cc7ed09d-0afc-6b40-9559-0ebbb335c971"],
Cell[379242, 7279, 401, 5, 35, "Output",ExpressionUUID->"8c296df1-08b2-7942-8067-b46018b816b6"],
Cell[379646, 7286, 405, 5, 35, "Output",ExpressionUUID->"5f812228-cc98-b24d-ba1c-4bdb3cbd8e6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380088, 7296, 210, 4, 49, "Subsubsection",ExpressionUUID->"bb2ce85a-5caf-4946-89ac-7c4bea9f1537"],
Cell[CellGroupData[{
Cell[380323, 7304, 1076, 20, 70, "Input",ExpressionUUID->"169c0af1-3eea-0649-b51e-d5e5fc5634d3"],
Cell[381402, 7326, 44290, 949, 128, "Output",ExpressionUUID->"a858a49c-564f-7849-a868-af5e09e7f608"],
Cell[425695, 8277, 19852, 352, 72, "Output",ExpressionUUID->"dcc4d650-c1bd-d14c-ad92-b7e11c9b619a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[445584, 8634, 358, 8, 48, "Input",ExpressionUUID->"2cb9e728-e712-4d43-b46a-6b45f9bd1dc7"],
Cell[445945, 8644, 22544, 396, 81, "Output",ExpressionUUID->"44ecb8b5-6dc2-5348-9582-205a8ea43235"]
}, Open  ]],
Cell[CellGroupData[{
Cell[468526, 9045, 253, 5, 48, "Input",ExpressionUUID->"beb1e931-5f2c-e14d-b913-0289ff953f5b"],
Cell[468782, 9052, 22604, 397, 89, "Output",ExpressionUUID->"e9a1d5ad-21c5-924d-9098-8f561db9e406"]
}, Open  ]],
Cell[CellGroupData[{
Cell[491423, 9454, 269, 6, 48, "Input",ExpressionUUID->"dbff3dcb-d81c-9b4f-869b-2be224f1d568"],
Cell[491695, 9462, 22532, 401, 114, "Output",ExpressionUUID->"4592e83a-f719-074d-8c22-ac40dd967acb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[514264, 9868, 220, 4, 48, "Input",ExpressionUUID->"b2ec39f2-0b44-9b46-b780-c020a10128c3"],
Cell[514487, 9874, 1621, 27, 120, "Output",ExpressionUUID->"53079e7d-f93e-a840-ba85-9ff981ce0354"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516145, 9906, 254, 4, 48, "Input",ExpressionUUID->"f3b63700-526f-c04e-9b20-e1151dded4a7"],
Cell[516402, 9912, 553, 11, 42, "Output",ExpressionUUID->"ee657b48-320c-9f4b-bc49-a7621be87737"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516992, 9928, 255, 4, 48, "Input",ExpressionUUID->"4bc3db0d-9b78-274d-9dcd-dbcc381fb59a"],
Cell[517250, 9934, 584, 12, 44, "Output",ExpressionUUID->"1ee7e57b-951d-304e-b64b-e7480434c49f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

